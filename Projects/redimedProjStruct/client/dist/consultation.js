angular.module("app.loggedIn.patient.exercise.directives.list",[]).controller("ExerciseDialog",function($scope,$modalInstance,list){$scope.cancel=function(){$modalInstance.dismiss("cancel")},$scope.ok=function(){$modalInstance.close(list)}}).controller("ExerciseAddDialog",function($scope,$modalInstance){$scope.exercise={success:!1},$scope.$watch("exercise.success",function(success){success&&$modalInstance.close("success")})}).controller("ExerciseEditDialog",function($scope,$modalInstance,list){$scope.exercise={id:list.Exercise_id,success:!1},$scope.$watch("exercise.success",function(success){success&&$modalInstance.close("success")})}).directive("listExercise",function($modal,ConsultationService,toastr,$stateParams){return{restrict:"EA",scope:{limit:"=",reload:"="},templateUrl:"modules/consultation/directives/templates/exercise/listExercise.html",link:function(scope,elem,attrs){var search={page:1,limit:scope.limit,offset:0,max_size:5,patient_id:$stateParams.patient_id,cal_id:$stateParams.cal_id},load=function(){var postData=angular.copy(scope.exercise.search);ConsultationService.listExercise(postData).then(function(response){scope.exercise.list=response.data,scope.exercise.count=response.count},function(error){})};scope.add=function(list){$modal.open({templateUrl:"dialogExerciseAdd",controller:"ExerciseAddDialog"}).result.then(function(list){scope.exercise.load(),toastr.success("Add Successfully")})},scope.edit=function(list){$modal.open({templateUrl:"dialogExerciseEdit",controller:"ExerciseEditDialog",resolve:{list:function(){return list}}}).result.then(function(list){scope.exercise.load(),toastr.success("Edit Successfully")})},scope["delete"]=function(list){$modal.open({templateUrl:"dialogExerciseRemove",controller:"ExerciseDialog",resolve:{list:function(){return list}}}).result.then(function(list){ConsultationService.deleteExercise(list).then(function(response){toastr.success("Delete Successfully"),scope.exercise.load()},function(error){})})};var onSearch=function(){scope.exercise.search.offset=0,scope.exercise.load(),scope.exercise.search.page=1},onPage=function(page){scope.exercise.search.offset=(page-1)*scope.exercise.search.limit,scope.exercise.load()};scope.exercise={search:angular.copy(search),load:function(){load()},list:[],onSearch:function(){onSearch()},onPage:function(page){onPage(page)}},scope.exercise.load()}}}).directive("addExercise",function($cookieStore,ConsultationService,ConfigService,$stateParams){return{restrict:"EA",scope:{success:"="},templateUrl:"modules/consultation/directives/templates/exercise/addExercise.html",link:function(scope,elem,attrs){var user_id=$cookieStore.get("userInfo").id,form={exercise:"",lastest_weight:"",sets:"",reps:"",other:"",Created_by:user_id,Last_updated_by:user_id,patient_id:$stateParams.patient_id,cal_id:$stateParams.cal_id},save=function(){ConfigService.beforeSave(scope.exercise.errors);var postData=angular.copy(scope.exercise.form);postData.Last_update_date=moment().format("YYYY-MM-DD"),ConsultationService.addExercise(postData).then(function(response){scope.success=!0},function(error){scope.exercise.errors=angular.copy(error.data.errors),ConfigService.beforeError(scope.exercise.errors)})},load=function(){};scope.exercise={form:angular.copy(form),load:function(){load()},errors:[],save:function(){save()}},scope.exercise.load()}}}).directive("editExercise",function($cookieStore,ConsultationService,ConfigService,$stateParams){return{restrict:"EA",scope:{success:"=",exerciseId:"="},templateUrl:"modules/consultation/directives/templates/exercise/addExercise.html",link:function(scope,elem,attrs){var form=($cookieStore.get("userInfo").id,{exercise:"",lastest_weight:"",sets:"",reps:"",other:"",patient_id:$stateParams.patient_id,cal_id:$stateParams.cal_id}),save=function(){ConfigService.beforeSave(scope.exercise.errors);var postData=angular.copy(scope.exercise.form);postData.Last_update_date=moment().format("YYYY-MM-DD"),ConsultationService.updateExercise(postData).then(function(response){scope.success=!0},function(error){scope.exercise.errors=angular.copy(error.data.errors),ConfigService.beforeError(scope.exercise.errors)})},load=function(){var postData={id:scope.exerciseId};ConsultationService.getOneExercise(postData).then(function(response){angular.extend(scope.exercise.form,response.data),delete scope.exercise.form.Creation_date},function(error){})};scope.exercise={form:angular.copy(form),load:function(){load()},errors:[],save:function(){save()}},scope.exercise.load()}}}),angular.module("app.loggedIn.patient.consult.directives",[]).directive("consultDrawing",function($window,Restangular,ConfigService,$timeout,toastr,socket){return{restrict:"E",scope:{images:"=",patient:"=",calendar:"=",actionCenterDrawing:"="},templateUrl:"modules/consultation/directives/templates/drawingConsult.html",link:function(scope,element,attrs){var lastX,lastY,canvas=element.context.querySelector("canvas"),imageLoader=element.context.querySelector("#imageLoader"),ctx=canvas.getContext("2d"),drawing=!1;scope.colors=[{color:"blue-ebonyclay"},{color:"green"},{color:"blue"},{color:"red"}],scope.color="black",scope.lineWidth=attrs.linewidth,scope.treeArr=[],canvas.width=attrs.width||element.width(),canvas.height=attrs.height||element.height(),Restangular.one("api/consultation/draw/templates").get().then(function(rs){if("success"==rs.status)for(var i=0;i<rs.data.length;i++){var node=rs.data[i];scope.treeArr.push({id:node.id,parent:null==node.parent?"#":node.parent,text:node.fileName,icon:1==node.isFolder?"fa fa-folder icon-state-warning":"fa fa-file icon-state-success"})}});var clearCanvas=function(){ctx.save(),ctx.setTransform(1,0,0,1,0,0),ctx.clearRect(0,0,canvas.width,canvas.height),ctx.restore()};scope.selectNodeCB=function(e){var idArr=String(e.target.id).split("_"),id=idArr[0];null!=id&&"undefined"!=typeof id&&""!=id&&Restangular.one("api/consultation/draw/template",id).get().then(function(rs){if("success"==rs.status){var img=new Image;img.onload=function(){ctx.drawImage(img,(canvas.width-img.width)/2,(canvas.height-img.height)/2)},img.src=rs.data}})},scope.changeColor=function(c){scope.color="blue-ebonyclay"==c?"black":c,scope.lineWidth=attrs.linewidth,scope.erasing=!1},scope.clear=function(){clearCanvas()},scope.erase=function(){scope.color=element.find("#myCanvas").css("background-color"),scope.lineWidth=50,scope.erasing=!0},scope.capture=function(){var imgData=canvas.toDataURL("image/png");Restangular.all("api/consultation/draw/saveImage").post({patient_id:scope.patient,cal_id:scope.calendar,imgData:imgData}).then(function(rs){"success"==rs.status?(scope.images.push(rs.id),toastr.success("Image Saved!"),scope.actionCenterDrawing&&scope.actionCenterDrawing.runWhenFinish&&scope.actionCenterDrawing.runWhenFinish()):toastr.error("Error!")})};var draw=function(lX,lY,cX,cY){ctx.lineCap="round",ctx.fillStyle="solid",ctx.strokeStyle=scope.color,ctx.lineWidth=scope.lineWidth,ctx.moveTo(lX,lY),ctx.lineTo(cX,cY),ctx.stroke()};angular.element(imageLoader).on("change",function(e){var reader=new FileReader;reader.onload=function(event){var img=new Image;img.onload=function(){ctx.drawImage(img,(canvas.width-img.width)/2,(canvas.height-img.height)/2)},img.src=event.target.result},reader.readAsDataURL(e.target.files[0])}),angular.element(canvas).on("mousedown mousemove mouseup mouseout touchstart touchmove touchend",function(event){if("mousemove"!==event.type||drawing)switch(event.preventDefault(),event.type){case"mousedown":case"touchstart":void 0!==event.offsetX?(lastX=event.offsetX,lastY=event.offsetY):(lastX=event.pageX-angular.element(canvas).offset().left,lastY=event.pageY-angular.element(canvas).offset().top),ctx.beginPath(),drawing=!0;break;case"mousemove":case"touchmove":drawing&&(void 0!==event.offsetX?(currentX=event.offsetX,currentY=event.offsetY):(currentX=event.pageX-angular.element(canvas).offset().left,currentY=event.pageY-angular.element(canvas).offset().top),draw(lastX,lastY,currentX,currentY),lastX=currentX,lastY=currentY);break;case"mouseup":case"touchend":case"mouseout":drawing=!1}})}}}).directive("consultationHistory",function(){return{restrict:"E",scope:{actionCenter:"="},templateUrl:"modules/consultation/directives/templates/consultation-history.html",controller:function($scope,ConsultationService){}}}),angular.module("app.loggedIn.patient.consult.services",[]).service("ConsultInfoService",function(){var consultInfoScripts=[],checkdata=[];this.getCheckdata=function(){return checkdata},this.setCheckdata=function(list){checkdata=angular.copy(list)},this.getConsultInfoScripts=function(){return consultInfoScripts},this.setConsultInfoScripts=function(list){consultInfoScripts=angular.copy(list)}}).factory("ConsultationService",function(Restangular){var services={},api=Restangular.all("api"),info={};return services.listExercise=function(data){return api.all("consultation/listExercise").post({data:data})},services.addExercise=function(data){return api.all("consultation/addExercise").post({data:data})},services.getOneExercise=function(data){return api.all("consultation/getOneExercise").post({data:data})},services.updateExercise=function(data){return api.all("consultation/updateExercise").post({data:data})},services.deleteExercise=function(data){return api.all("consultation/deleteExercise").post({data:data})},services.getPatientProblem=function(patientId){return api.all("consultation/getPatientProblem").post({patient_id:patientId})},services.submitConsult=function(info){return api.all("consultation/submit").post({info:info})},services.getPatientCompany=function(patientId){return api.all("consultation/patient/company").post({patient_id:patientId})},services.searchScript=function(info){return api.all("erm/v2/medicine/search").post({search:info})},services.getConsultInfo=function(){return info},services.setConsultInfo=function(consultInfo){info=angular.copy(consultInfo)},services.getListConsultOfPatient=function(patient_id){return api.all("consultation/listconsultofpatient").post({patient_id:patient_id})},services.beforeStartSession=function(postData){return api.all("consultation/beforeStartSession").post({postData:postData})},services.startSession=function(data){return api.all("consultation/startSession").post({data:data})},services.beforeFinishSession=function(data){return api.all("consultation/beforeFinishSession").post({data:data})},services.finishSession=function(data){return api.all("consultation/finishSession").post({data:data})},services.getApptPatient=function(data){return api.all("consultation/getApptPatient").post({data:data})},services.getByIdConsult=function(consult_id){return api.all("consultation/byidConsult").post({consult_id:consult_id})},services.checkConsultation=function(patient_id,cal_id){return api.all("consultation/check-consultation-patientID-calID").post({patient_id:patient_id,cal_id:cal_id})},services.getImgDrawingHistory=function(patient_id,cal_id){return api.all("consultation/get-img-drawing-history").post({patient_id:patient_id,cal_id:cal_id})},services.getListCor=function(data){return api.all("consultation/listCor").post({data:data})},services.postAddCor=function(data){return api.all("consultation/addCor").post({data:data})},services.postByIdCor=function(data){return api.all("consultation/byidCor").post({data:data})},services}),angular.module("app.loggedIn.patient.consult.itemsheetController",[]).controller("PatientConsultItemsheetController",function($filter,$cookieStore,$scope,$state,$modal,toastr,$stateParams,ConsultationService,PatientService,ReceptionistService,InvoiceService){alert("Controller PatientConsultItemsheetController khong con duoc du dung");var arrGetBy=$filter("arrGetBy");$scope.appointment={CAL_ID:$stateParams.cal_id,Patient_id:$stateParams.patient_id},$scope.items_search_panel={},$scope.deptItems=null,$scope.apptItems=[],$scope.extraItems=[],$scope.backClick=function(){$state.go("loggedIn.consult.patient",{patient_id:$stateParams.patient_id,cal_id:$stateParams.cal_id})};var isInDeptItems=function(item_id){for(var i=0,len=$scope.deptItems.length;len>i;++i)for(var cat=$scope.deptItems[i],j=0,len2=cat.items.length;len2>j;++j){var t_item=cat.items[j];if(item_id==t_item.ITEM_ID)return t_item}return!1};PatientService.initInvoice($scope.appointment.Patient_id,$scope.appointment.CAL_ID),ReceptionistService.apptDetail($scope.appointment.CAL_ID).then(function(response){return"success"===response.status?(delete response.data.Patient_id,angular.extend($scope.appointment,response.data),PatientService.getDeptItems($scope.appointment.CLINICAL_DEPT_ID)):void 0}).then(function(response){return"success"===response.status?($scope.deptItems=response.data.filter(function(item){return item.clnDeptItemList.ISENABLE}),InvoiceService.selectInvoiceLinesBySession($scope.appointment.Patient_id,$scope.appointment.CAL_ID)):void 0}).then(function(response){if("success"===response.status){$scope.apptItems=response.data;var item_id_list=[];return angular.forEach($scope.deptItems,function(cat,key){angular.forEach(cat.items,function(item,key){item.PRICE=0,item.TIME_SPENT=0,item.QUANTITY=1,item_id_list.push(item.ITEM_ID)})}),angular.forEach($scope.apptItems,function(item){var t_item=isInDeptItems(item.ITEM_ID);t_item?(t_item.QUANTITY=item.QUANTITY,t_item.TIME_SPENT=item.TIME_SPENT,t_item.PRICE=item.PRICE,t_item.checked=1===item.is_enable?"1":"0",t_item.inserted="1"===t_item.checked):($scope.extraItems.push(item),item_id_list.push(item.ITEM_ID),item.checked=1===item.is_enable?"1":"0",item.inserted="1"===item.checked)}),ReceptionistService.itemFeeAppt($scope.appointment.SERVICE_ID,item_id_list)}}).then(function(response){if(response&&response.list){var list_fee=response.list;angular.forEach($scope.deptItems,function(cat,key){angular.forEach(cat.items,function(item,key){var t_item=arrGetBy(list_fee,"CLN_ITEM_ID",item.ITEM_ID);t_item&&t_item.SCHEDULE_FEE>0&&(item.PRICE=t_item.SCHEDULE_FEE,item.disable_fee=!0)})}),angular.forEach($scope.extraItems,function(item,key){var t_item=arrGetBy(list_fee,"CLN_ITEM_ID",item.ITEM_ID);t_item&&t_item.SCHEDULE_FEE>0&&(item.PRICE=t_item.SCHEDULE_FEE,item.disable_fee=!0)})}}),$scope.itemOptions={click:function(item){"dept_item"!=item.type&&"extra_item"!=item.type&&($scope.extraItems.push(item),item.QUANTITY=1,item.TIME_SPENT=0,item.checked="1",ReceptionistService.itemFeeAppt($scope.appointment.SERVICE_ID,[item.ITEM_ID]).then(function(response){response.list.length>0?(item.PRICE=response.list[0].SCHEDULE_FEE,item.disable_fee=!0):(item.PRICE=0,item.disable_fee=!1)}))},"class":function(item){if(isInDeptItems(item.ITEM_ID))return item.type="dept_item","danger";var t_item=arrGetBy($scope.extraItems,"ITEM_ID",item.ITEM_ID);return t_item?(item.type="extra_item","info"):void 0},options:{api:"api/erm/v2/items/search",method:"post",scope:$scope.items_search_panel,columns:[{field:"ITEM_ID",is_hide:!0},{field:"ITEM_CODE",label:"Item Code",width:"10%"},{field:"ITEM_NAME",label:"Item Name"}],use_filters:!0,filters:{ITEM_CODE:{type:"text"},ITEM_NAME:{type:"text"}}}},$scope.itemSearch={is_show:!1,open:function(){this.is_show=!0},close:function(){this.is_show=!1}},$scope.submitClick=function(){var insertArr=[],fnInsertArr=function(item){var t={CLN_ITEM_ID:item.ITEM_ID,Patient_id:$scope.appointment.Patient_id,cal_id:$scope.appointment.CAL_ID,PRICE:item.PRICE,TIME_SPENT:item.TIME_SPENT?item.TIME_SPENT:0,QUANTITY:item.QUANTITY,is_enable:"1"==item.checked?1:0};insertArr.push(t)};angular.forEach($scope.deptItems,function(cat,key){angular.forEach(cat.items,fnInsertArr)}),angular.forEach($scope.extraItems,fnInsertArr)}}),angular.module("app.loggedIn.patient.consult.scriptController",[]).controller("ScriptController",function(AlertModel,arrayscript,$timeout,OutreferralModel,AppointmentModel,ConfigService,$cookieStore,$scope,$filter,$state,$modal,toastr,$modalInstance,ConsultationService,$stateParams,actual_doctor_id,script){var user_id=$cookieStore.get("userInfo").id;$scope.postData={CAL_ID:$stateParams.cal_id,DOCTOR_ID:null,user_name:null,Provider_no:null},console.log($scope.current_patient),$scope.scriptInfo={FROM_TIME:null,cal_id:null,medication_name:null,start_date:null,dose:null,end_date:null,unit:null,qty:null,route:null,doctor_id:null,NAME:null,Provider_no:null,frequency:null,condition_Indication:null};var getUsername=function(){OutreferralModel.DotorFromUserId(user_id).then(function(response){$scope.scriptInfo.doctor_id=response.data[0].doctor_id,$scope.scriptInfo.NAME=response.data[0].NAME,$scope.scriptInfo.Provider_no=response.data[0].Provider_no},function(error){})};getUsername();var getCalid=function(cal_id){if(0===cal_id)var postData={cal_id:$stateParams.cal_id};else var postData={cal_id:$scope.scriptInfo.cal_id};AlertModel.deleteMedication(postData).then(function(response){$scope.scriptInfo.FROM_TIME=response.data[0].FROM_TIME,$scope.scriptInfo.cal_id=response.data[0].cal_id,console.log(response.data[0].FROM_TIME)})};$scope.listUnit=ptnConst.unit,$scope.listRoute=ptnConst.route,$scope.listFrequency=ptnConst.frequency,$scope.medications=[],$scope.selectedMedication=null,$scope.checkMedication=!0,ConsultationService.searchScript({medicine_name:""}).then(function(rs){$scope.medications=rs.list;for(var i=0;i<$scope.medications.length;i++){var item=$scope.medications[i],unit="Unit: "+item.medicine_unit;$scope.medications[i].desc=unit}}),null!=script?($scope.scriptInfo=angular.copy(script),$scope.scriptInfo.end_date=ConfigService.convertToDate($scope.scriptInfo.end_date),$scope.scriptInfo.start_date=ConfigService.convertToDate($scope.scriptInfo.start_date),getCalid(1)):getCalid(0),$scope.changeValue=function(){var frequency=0;if(null!==$scope.scriptInfo.frequency&&null!==$scope.scriptInfo.dose&&null!==$scope.scriptInfo.start_date&&null!==$scope.scriptInfo.end_date){frequency="OD"==$scope.scriptInfo.frequency?1:"BD"==$scope.scriptInfo.frequency?2:"OD"==$scope.scriptInfo.frequency?3:4;var start_date=ConfigService.convertToDB($scope.scriptInfo.start_date);start_date=moment(start_date).format("YYYY-MM-DD");var end_date=ConfigService.convertToDB($scope.scriptInfo.end_date);end_date=moment(end_date).format("YYYY-MM-DD");var a=moment(end_date),b=moment(start_date),diffInDays=a.diff(b,"days"),day=diffInDays+1,dose=$scope.scriptInfo.dose;$scope.scriptInfo.qty=day*frequency*dose}},$scope.cancelClick=function(){$modalInstance.close({type:"cancel"})},$scope.okClick=function(){console.log($scope.scriptInfo);var count=0;if(null!==script)for(var i=0;i<arrayscript.length;i++)$scope.scriptInfo.medication_name===arrayscript[i].medication_name&&$scope.scriptInfo.medication_name!==script.medication_name&&count++;else for(var i=0;i<arrayscript.length;i++)$scope.scriptInfo.medication_name===arrayscript[i].medication_name&&count++;0===count?($scope.isSubmit=!0,$scope.medicationForm.$invalid||($scope.scriptInfo.start_date=ConfigService.convertToDB($scope.scriptInfo.start_date),$scope.scriptInfo.end_date=ConfigService.convertToDB($scope.scriptInfo.end_date),$modalInstance.close({type:"ok",value:$scope.scriptInfo}))):toastr.error("Medication Name  Exits !")},$scope.$watch("selectedMedication",function(val){if("undefined"!=typeof val&&null!=val){var medicine=val.originalObject;$scope.scriptInfo.medication=medicine.medicine_name,$scope.scriptInfo.qty=1}})}).directive("number",function(){return{require:"ngModel",link:function(scope,element,attrs,modelCtrl){modelCtrl.$parsers.push(function(inputValue){if(void 0==inputValue)return"";var transformedInput=inputValue.replace(/[^0-9]/g,"");return transformedInput!=inputValue&&(modelCtrl.$setViewValue(transformedInput),modelCtrl.$render()),transformedInput}),element.bind("keypress",function(event){32===event.keyCode&&event.preventDefault()})}}}),angular.module("app.loggedIn.patient.consult.measurementController",[]).controller("MeasurementController",function($scope,$filter,$state,$modal,toastr,$modalInstance,$stateParams,measure){$scope.today=$filter("date")(new Date,"dd/MM/yyyy"),$scope.measurementInfo={measure_date:new Date,bp1:0,bp2:0,rate:0,height:0,weight:0,excessWt:0,bmi:0,waist:0,ratio:0,hips:0,neck:0,head_circ:0,cholesterol:0,psa:0,triglycerides:0,creatitine:0,hdl:0,acr:0,ldl:0,gfr:0,bsl:0,hbA1c:0,isMdrd:null,isCockroft_gault:null,microalbuminuria:0,potassium:0,fev1:0,fvc:0,gas_transfer:0,right_pressure:0,left_pressure:0,right_uncorrected:0,left_uncorrected:0,right_corrected:0,left_corrected:0},null!=measure&&($scope.measurementInfo=angular.copy(measure)),$scope.cancelClick=function(){$modalInstance.close({type:"cancel"})},$scope.okClick=function(){0==$scope.measurementInfo.isMdrd?$scope.measurementInfo.isCockroft_gault=1:1==$scope.measurementInfo.isMdrd&&($scope.measurementInfo.isCockroft_gault=0),$modalInstance.close({type:"ok",value:$scope.measurementInfo})},$scope.calculateBMI=function(height,weight){var w=null,h=null,bmi=0;w=null==weight||"undefined"==typeof weight||""==weight||isNaN(parseFloat(weight))?null:parseFloat(weight),h=null==height||"undefined"==typeof height||""==height||isNaN(parseFloat(height))?null:.01*parseFloat(height),null!=w&&null!=h?(bmi=w/(h*h),$scope.measurementInfo.bmi=$filter("number")(bmi,2)):$scope.measurementInfo.bmi=0}}),angular.module("app.loggedIn.patient.consult.consulthistoryController",[]).controller("ConsultHistoryController",function($scope,$state,ConsultationService,consults,$modalInstance){$scope.consultion={consults:consults},$scope.listConsult=consults,$scope.cancelDetail=function(){$modalInstance.close({type:"cancel"})}}),angular.module("app.loggedIn.patient.consult.controller",[]).controller("PatientConsultController",function(AlertModel,ConsultInfoService,InjuryManagementService,DoctorService,$filter,$rootScope,$interval,$window,$document,$cookieStore,$scope,$state,$modal,InsurerService,toastr,socket,OTSession,ReceptionistService,$stateParams,ConsultationService,PatientService,UserService,$interval,InvoiceService){function popup(url){return params="width="+screen.width,params+=", height="+screen.height,params+=", top=0, left=0",params+=", fullscreen=yes",(null==window.calling_screen||window.calling_screen.closed)&&(window.calling_screen=window.open(url,"RedimedCallingWindow",params),window.calling_screen.focus()),null==window.calling_screen||window.calling_screen.closed||window.calling_screen.open("","RedimedCallingWindow",""),!1}function refresh(patientId){ConsultationService.getPatientCompany(patientId).then(function(rs){exlog.log(rs),"success"==rs.status.toLowerCase()&&rs.info&&($scope.companyInfo=rs.info)},function(err){exlog.logErr(err)})}function cancelListenerHandler(){console.log("Remove Success")}$scope.templates=[],$scope.viewInjury=function(){InjuryManagementService.getInjuryById($scope.apptPatient.injury_id).then(function(rs){"success"==rs.status&&$modal.open({templateUrl:"modules/consultation/dialogs/dialog_injury_details.html",size:"md",resolve:{injuryInfo:function(){return rs.data}},controller:function($scope,$modalInstance,$stateParams,injuryInfo,InjuryManagementService){if($scope.info=injuryInfo,$scope.loadedImage=!1,$scope.injuryImages=[],$scope.imgArr=[],$scope.info.injury_date=moment.utc($scope.info.injury_date).format("DD/MM/YYYY - hh:mm:ss"),"undefined"!=typeof injuryInfo.injuryImg&&injuryInfo.injuryImg.length>0){$scope.loadedImage=!0;for(var i=0;i<injuryInfo.injuryImg.length;i++)$scope.imgArr.push({url:location.origin+"/api/im/image/"+injuryInfo.injuryImg[i].id,img:injuryInfo.injuryImg[i]})}$scope.cancelClick=function(){$modalInstance.close()},$scope.viewImage=function(img){$modal.open({templateUrl:"modules/injuryManagement/views/imageModal.html",size:"md",resolve:{imgObj:function(){return img}},controller:function($scope,$state,$modalInstance,UserService,socket,toastr,imgObj){$scope.img={image:location.origin+"/api/im/image/"+imgObj.id,description:imgObj.desc}}})}}})})},$scope.addTemplate=function(){$modal.open({templateUrl:"listTemplateDialog",controller:function($scope,$modalInstance,$stateParams){$scope.patient_id=$stateParams.patient_id,$scope.cal_id=$stateParams.cal_id,$scope.success=null,$scope.$watch("success",function(success){success&&$modalInstance.close(success)})}}).result.then(function(success){console.log(success),$scope.templates.push(success)})},$scope.loadDataAddMakeReferral={},$scope.referralAddForm={is_show:!1,open:function(){this.is_show=!0},close:function(){this.is_show=!1},success:function(response){"success"==response.status&&$scope.loadDataAddMakeReferral.load(),$scope.referralAddForm.close()}},$scope.patient_id=$stateParams.patient_id,$scope.cal_id=$stateParams.cal_id,$scope.userInfo=$cookieStore.get("userInfo"),$scope.patientInfo={},$scope.companyInfo={},$scope.problemArr=[],$scope.isConsult=!0,$scope.tscripts=ConsultInfoService.getConsultInfoScripts(),$scope.checkdata=ConsultInfoService.getCheckdata(),$scope.checkdata.cal_id==$stateParams.cal_id&&$scope.checkdata.patient_id==$stateParams.patient_id?($scope.tscripts=ConsultInfoService.getConsultInfoScripts(),$scope.checkdata=ConsultInfoService.getCheckdata()):($scope.tscripts=[],$scope.checkdata=[]),$scope.consultInfo={patient_id:$scope.patient_id,cal_id:$scope.cal_id,problem_id:null,history:null,examination:null,treatment:null,diagnosis:null,investigation:null,specialist:null,progress_note:null,attendance_record:null,communication_record:null,measurements:[],scripts:$scope.tscripts,images:[]},$scope.getlistMedication=function(){var postData={patient_id:$scope.patient_id,cal_id:$scope.cal_id};AlertModel.getMedication(postData).then(function(response){console.log(response.data),$scope.consultInfo.scripts=response.data})},$scope.getlistMedication(),$scope.loadConsultationInfo=function(){ConsultationService.checkConsultation($scope.patient_id,$scope.cal_id).then(function(data){"success"==data.status&&($scope.consultInfo.problem_id=data.data.problem_id,$scope.consultInfo.history=data.data.history,$scope.consultInfo.examination=data.data.examination,$scope.consultInfo.treatment=data.data.treatment_plan,$scope.consultInfo.diagnosis=data.data.diagnosis,$scope.consultInfo.investigation=data.data.investigation,$scope.consultInfo.specialist=data.data.specialist,$scope.consultInfo.progress_note=data.data.progress_note,$scope.consultInfo.attendance_record=data.data.attendance_record,$scope.consultInfo.communication_record=data.data.communication_record,$scope.consultInfo.consult_id=data.data.consult_id)})},$scope.loadConsultationInfo(),$scope.actionCenter={},$scope.setListConsultationOfPatient=function(){ConsultationService.getListConsultOfPatient($stateParams.patient_id).then(function(data){"success"==data.status&&($scope.actionCenter.listConsultOfPatient=data.data,console.log($scope.actionCenter.listConsultOfPatient))})},$scope.setListConsultationOfPatient(),$scope.actionCenter.showPopupHistory=function(data){$modal.open({templateUrl:"modules/consultation/dialogs/dialogs_consult_history.html",controller:"ConsultHistoryController",resolve:{consults:function(){return data}}})},$scope.actionCenter.showPopupHistoryPhysiotherapist=function(data){$modal.open({templateUrl:"modules/consultation/dialogs/dialogs_consult_history_physiotherapist.html",controller:"ConsultHistoryController",resolve:{consults:function(){return data}}})},$scope.actionCenter.showPopupHistoryExercisePhysiologist=function(data){$modal.open({templateUrl:"modules/consultation/dialogs/dialogs_consult_history_exercise_physiologist.html",controller:"ConsultHistoryController",resolve:{consults:function(){return data}}})},$scope.getImgDrawingHistory=function(){console.log($scope.cal_id),console.log($stateParams.patient_id),$scope.listImgDrawingHistory={},ConsultationService.getImgDrawingHistory($stateParams.patient_id,$scope.cal_id).then(function(data){"success"==data.status&&($scope.listImgDrawingHistory=data.data,console.log("aaaa",$scope.listImgDrawingHistory))})},$scope.getImgDrawingHistory(),$scope.loadImgDrawing=function(){$scope.getImgDrawingHistory()},$scope.showPopupConsultationHistory=function(){angular.element("#popupConsultationHistory").modal("show")},$scope.popupNewDrawing=function(){angular.element("#popupNewDrawing").modal("show")},$scope.actionCenterDrawing={runWhenFinish:function(){angular.element("#popupNewDrawing").modal("hide")}},$scope.currDate=$filter("date")(new Date,"dd/MM/yyyy hh:mm a"),$scope.$on("$stateChangeStart",function(event,toState,toParams,fromState,fromParams){$scope.checkdata={cal_id:$stateParams.cal_id,patient_id:$stateParams.patient_id},console.log($scope.checkdata),ConsultInfoService.setConsultInfoScripts($scope.consultInfo.scripts),ConsultInfoService.setCheckdata($scope.checkdata)}),$scope.timerDisplay=null,$scope.problemAddForm={is_show:!1,open:function(){this.is_show=!0},close:function(){this.is_show=!1},success:function(response){"success"==response.status&&($scope.problemAddForm.close(),ConsultationService.getPatientProblem($scope.patient_id).then(function(rs){"success"==rs.status.toLowerCase()&&rs.data&&($scope.problemList=rs.data,$scope.consultInfo.problem_id=response.data.Problem_id,$scope.viewProblem(response.data.Problem_id))}))}},$scope.callInfo={isCalling:null,callUser:null};refresh($scope.patient_id),socket.removeListener("online",cancelListenerHandler()),socket.on("online",function(userList){refresh($scope.patient_id)}),PatientService.get($scope.patient_id).then(function(rs){if("success"==rs.status.toLowerCase()&&rs.data){var fName=[];fName.push(rs.data.First_name,rs.data.Sur_name,rs.data.Middle_name),$scope.patientInfo=rs.data,$scope.patientInfo.FullName=null!=rs.data.Title||""!=rs.data.Title?rs.data.Title+" . "+fName.join(" "):fName.join(" "),InsurerService.insurerByPatient($scope.patient_id).then(function(res){"success"==res.status.toLowerCase()&&res.data.length>0&&($scope.patientInfo.insurer=res.data[0].insurer_name)})}}),ConsultationService.getPatientProblem($scope.patient_id).then(function(rs){"success"==rs.status.toLowerCase()&&rs.data&&($scope.problemList=rs.data)}),$scope.viewProblem=function(id){if($scope.problemArr=[],null!=id){var index=_.findIndex($scope.problemList,{Problem_id:id});$scope.problemArr.push($scope.problemList[index])}else $scope.problemArr=[]},$scope.measureAction=function(type,index){if("new"==type){var modalInstance=$modal.open({templateUrl:"modules/consultation/views/modal/measureModal.html",size:"lg",controller:"MeasurementController",resolve:{measure:function(){return null}}});modalInstance.result.then(function(data){"ok"==data.type&&$scope.consultInfo.measurements.push(data.value)})}if("edit"==type){var modalInstance=$modal.open({templateUrl:"modules/consultation/views/modal/measureModal.html",size:"lg",controller:"MeasurementController",resolve:{measure:function(){return $scope.consultInfo.measurements[index]}}});modalInstance.result.then(function(data){"ok"==data.type&&($scope.consultInfo.measurements[index]=data.value)})}"delete"==type&&swal({title:"Confirm Delete",text:"Are You Sure Want To Delete This Measure?",type:"warning",showCancelButton:!0,confirmButtonColor:"#DD6B55",confirmButtonText:"Yes",closeOnConfirm:!0},function(){$scope.consultInfo.measurements.splice(index,1)})},$scope.scriptAction=function(type,index){if("new"==type){var modalInstance=$modal.open({templateUrl:"modules/consultation/views/modal/scriptModal.html",windowClass:"consult-modal-window",controller:"ScriptController",resolve:{actual_doctor_id:function(){return $scope.actual_doctor_id},script:function(){return null},arrayscript:function(){return $scope.consultInfo.scripts}}});modalInstance.result.then(function(data){if("ok"==data.type&&null!==data.value.medication_name){for(var count=0,i=0;i<$scope.consultInfo.scripts.length;i++)$scope.consultInfo.scripts[i].medication_name===data.value.medication_name&&count++;0===count&&$scope.consultInfo.scripts.push(data.value)}})}if("edit"==type){var modalInstance=$modal.open({templateUrl:"modules/consultation/views/modal/scriptModal.html",windowClass:"consult-modal-window",controller:"ScriptController",resolve:{actual_doctor_id:function(){return $scope.actual_doctor_id},script:function(){return $scope.consultInfo.scripts[index];

},arrayscript:function(){return $scope.consultInfo.scripts}}});modalInstance.result.then(function(data){"ok"==data.type&&($scope.consultInfo.scripts[index]=data.value)})}"delete"==type&&swal({title:"Confirm Delete",text:"Are You Sure Want To Delete This Script?",type:"warning",showCancelButton:!0,confirmButtonColor:"#DD6B55",confirmButtonText:"Yes",closeOnConfirm:!0},function(){$scope.consultInfo.scripts.splice(index,1)})},$scope.backClick=function(){var from=$cookieStore.get("fromState"),params={};(null!=from.fromParams||"undefined"!=typeof from.fromParams)&&angular.forEach(from.fromParams,function(value,key){params[key]=value}),$state.go(from.fromState.name,params)},$scope.makeCall=function(user){socket.removeListener("generateSessionSuccess",cancelListenerHandler()),socket.emit("generateSession",$scope.userInfo.id),socket.on("generateSessionSuccess",function(opentokRoom){opentokRoom&&popup($state.href("make_call",{apiKey:opentokRoom.apiKey,sessionId:opentokRoom.sessionId,token:opentokRoom.token,callUser:user.id,isCaller:1,patientId:$scope.patient_id,calId:$scope.cal_id}))})},$scope.dropzoneConfig={options:{url:"api/upload",addRemoveLinks:!0},eventHandlers:{sending:function(file,xhr,formData){formData.append("patient_id",$scope.patient_id)},success:function(file,response){"success"==response.status?(socket.emit("shareFile",response.id,response.fileName,$scope.callInfo.callUser),toastr.success("Upload File Successfully!")):toastr.error("Upload File Failed!")}}},$scope.selectedOpt=null,$scope.currWorkcover=null,$scope.first_opt=PatientService.workcoverSearchOpt("first",$scope.patient_id),$scope.progress_opt=PatientService.workcoverSearchOpt("progress",$scope.patient_id),$scope.final_opt=PatientService.workcoverSearchOpt("final",$scope.patient_id),$scope.general_opt=PatientService.workcoverSearchOpt("general",$scope.patient_id),$scope.viewWorkcover=function(i){switch($scope.selectedOpt=i,i){case 1:$scope.currWorkcover="First Assessment";break;case 2:$scope.currWorkcover="Progress Assessment";break;case 3:$scope.currWorkcover="Final Assessment";break;case 4:$scope.currWorkcover="General Assessment"}},$scope.addWorkcover=function(){if(null!=$scope.selectedOpt)switch($scope.selectedOpt){case 1:$state.go("loggedIn.waworkcover.first",{patient_id:$scope.patient_id,action:"add",cal_id:$scope.cal_id,wc_id:0});break;case 2:$state.go("loggedIn.waworkcover.progress",{patient_id:$scope.patient_id,action:"add",cal_id:$scope.cal_id,wc_id:0});break;case 3:$state.go("loggedIn.waworkcover.final",{patient_id:$scope.patient_id,action:"add",cal_id:$scope.cal_id,ass_id:0});break;case 4:$state.go("loggedIn.waworkcover.general",{patient_id:$scope.patient_id,action:"add",cal_id:$scope.cal_id,ass_id:0})}};var arrGetBy=$filter("arrGetBy");$scope.appointment={CAL_ID:$scope.cal_id,Patient_id:$scope.patient_id},$scope.items_search_panel={},$scope.deptItems=null,$scope.apptItems=[],$scope.extraItems=[];var isInDeptItems=function(item_id){if($scope.deptItems.length>0)for(var i=0,len=$scope.deptItems.length;len>i;++i)for(var cat=$scope.deptItems[i],j=0,len2=cat.items.length;len2>j;++j){var t_item=cat.items[j];if(item_id==t_item.ITEM_ID)return t_item}return!1};$scope.invoiceHeaderInfo=null,PatientService.initInvoice($scope.appointment.Patient_id,$scope.appointment.CAL_ID).then(function(data){InvoiceService.selectInvoiceHeaderBySession($scope.appointment.Patient_id,$scope.appointment.CAL_ID).then(function(data){"success"==data.status?$scope.invoiceHeaderInfo=data.data:(alert("Get Invoice Header Error."),exlog.logErr(data))},function(err){alert("Get Invoice Header Error."),exlog.logErr(err)})},function(err){alert("Init Invoice Error."),exlog.logErr(err)}),ReceptionistService.apptDetail($scope.appointment.CAL_ID).then(function(response){return"success"===response.status?(delete response.data.Patient_id,angular.extend($scope.appointment,response.data),PatientService.getDeptItems($scope.appointment.CLINICAL_DEPT_ID)):void 0}).then(function(response){return"success"===response.status?($scope.deptItems=response.data.filter(function(item){return item.clnDeptItemList.ISENABLE}),InvoiceService.selectInvoiceLinesBySession($scope.appointment.Patient_id,$scope.appointment.CAL_ID)):void 0}).then(function(response){if("success"===response.status){$scope.apptItems=response.data;var item_id_list=[];return angular.forEach($scope.deptItems,function(cat,key){angular.forEach(cat.items,function(item,key){item.PRICE=0,item.TIME_SPENT=0,item.QUANTITY=1,item_id_list.push(item.ITEM_ID)})}),angular.forEach($scope.apptItems,function(item){var t_item=isInDeptItems(item.ITEM_ID);t_item?(t_item.QUANTITY=item.QUANTITY,t_item.TIME_SPENT=item.TIME_SPENT,t_item.PRICE=item.PRICE,t_item.checked=1===item.IS_ENABLE?"1":"0",t_item.inserted="1"===t_item.checked):($scope.extraItems.push(item),item_id_list.push(item.ITEM_ID),item.checked=1===item.IS_ENABLE?"1":"0",item.inserted="1"===item.checked)}),ReceptionistService.itemFeeAppt($scope.appointment.SERVICE_ID,item_id_list)}}).then(function(response){if(response&&response.list){var list_fee=response.list;angular.forEach($scope.deptItems,function(cat,key){angular.forEach(cat.items,function(item,key){var t_item=arrGetBy(list_fee,"CLN_ITEM_ID",item.ITEM_ID);t_item&&t_item.SCHEDULE_FEE>0&&(item.PRICE=t_item.SCHEDULE_FEE,item.disable_fee=!0)})}),angular.forEach($scope.extraItems,function(item,key){var t_item=arrGetBy(list_fee,"CLN_ITEM_ID",item.ITEM_ID);t_item&&t_item.SCHEDULE_FEE>0&&(item.PRICE=t_item.SCHEDULE_FEE,item.disable_fee=!0)})}}),$scope.itemOptions={click:function(item){"dept_item"!=item.type&&"extra_item"!=item.type&&($scope.extraItems.push(item),item.QUANTITY=1,item.TIME_SPENT=0,item.checked="1",ReceptionistService.itemFeeAppt($scope.appointment.SERVICE_ID,[item.ITEM_ID]).then(function(response){response.list.length>0?(item.PRICE=response.list[0].SCHEDULE_FEE,item.disable_fee=!0):(item.PRICE=0,item.disable_fee=!1)}))},"class":function(item){if(isInDeptItems(item.ITEM_ID))return item.type="dept_item","danger";var t_item=arrGetBy($scope.extraItems,"ITEM_ID",item.ITEM_ID);return t_item?(item.type="extra_item","info"):void 0},options:{api:"api/erm/v2/items/search",method:"post",scope:$scope.items_search_panel,columns:[{field:"ITEM_ID",is_hide:!0},{field:"ITEM_CODE",label:"Item Code",width:"10%"},{field:"ITEM_NAME",label:"Item Name"},{field:"TAX_ID",label:"Tax Id",is_hide:!0},{field:"TAX_CODE",label:"Tax code"},{field:"TAX_RATE",label:"Tax rate"}],use_filters:!0,filters:{ITEM_CODE:{type:"text"},ITEM_NAME:{type:"text"}}}},$scope.itemSearch={is_show:!1,open:function(){this.is_show=!0},close:function(){this.is_show=!1}},$scope.deleteMedication=function(){var postData={patient_id:$scope.patient_id,cal_id:$scope.cal_id};AlertModel.insertMedication(postData).then(function(data){if(0!==data.data.length){var postDatam={consult_id:data.data[0].consult_id};AlertModel.deleteMedication(postDatam).then(function(response){console.log("delete")})}})},$scope.submitClick=function(){if(!$scope.invoiceHeaderInfo)return void alert("Error.Invoice Header Not Exist.");for(var i=0;i<$scope.consultInfo.measurements.length;i++)$scope.consultInfo.measurements[i].patient_id=$scope.patient_id,$scope.consultInfo.measurements[i].cal_id=$scope.cal_id;var consultInfoTemp=angular.copy($scope.consultInfo);consultInfoTemp.templates=$scope.templates,ConsultationService.submitConsult(consultInfoTemp).then(function(res){if("success"==res.status){$scope.loadConsultationInfo(),$scope.setListConsultationOfPatient(),$scope.getImgDrawingHistory();var insertArr=[],fnInsertArr=function(item){var t={HEADER_ID:$scope.invoiceHeaderInfo.header_id,ITEM_ID:item.ITEM_ID,PRICE:item.PRICE,QUANTITY:item.QUANTITY,AMOUNT:item.PRICE*item.QUANTITY,TAX_ID:item.TAX_ID,TAX_CODE:item.TAX_CODE,TAX_RATE:item.TAX_RATE,TAX_AMOUNT:item.PRICE*item.QUANTITY*(item.TAX_RATE?item.TAX_RATE:0),TIME_SPENT:item.TIME_SPENT?item.TIME_SPENT:0,IS_ENABLE:"1"==item.checked?1:0};insertArr.push(t)};$scope.deptItems&&angular.forEach($scope.deptItems,function(cat,key){angular.forEach(cat.items,fnInsertArr)}),$scope.extraItems&&angular.forEach($scope.extraItems,fnInsertArr);var postData={invoiceHeaderId:$scope.invoiceHeaderInfo.header_id,listLine:insertArr};InvoiceService.saveInvoiceLineSheet(postData).then(function(data){"success"==data.status?toastr.success("Save invoice item success."):(data.status="non-data")?toastr.warning("No invoice item."):toastr.error("Save invoice item error.")},function(err){toastr.error("Save invoice item error.")}),toastr.success("Submit Consultation Success!")}else toastr.success("Submit Consultation Failed!")})},$scope.apptPatient={},$scope.actual_doctor_id={},$scope.apptStatus=ptnConst.apptStatus,$scope.getApptPatient=function(){var postData={patientId:$scope.patient_id,calId:$scope.cal_id};ConsultationService.getApptPatient(postData).then(function(data){if("success"==data.status){if($scope.apptPatient=data.data,DoctorService.getById($scope.apptPatient.actual_doctor_id).then(function(data){void 0===data&&($scope.actual_doctor_id={NAME:null}),$scope.actual_doctor_id=data}),$scope.apptPatient.SESSION_START_TIME&&$scope.apptPatient.SESSION_END_TIME){var tempStart=moment(new Date($scope.apptPatient.SESSION_START_TIME)),tempEnd=moment(new Date($scope.apptPatient.SESSION_END_TIME)),x=tempEnd.diff(tempStart,"seconds");$scope.timerDisplay=kiss.msToTimer(x).display}$scope.apptPatient.appt_status==ptnConst.apptStatus.inConsult.value&&($scope.startSessionTime=$scope.apptPatient.SESSION_START_TIME)}else $scope.actual_doctor_id={NAME:null},exlog.log(data)},function(err){exlog.logErr(err)})},$scope.getApptPatient(),$scope.startSession=function(){function executeStart(){var startSessionTime=new Date,postData={patientId:$scope.patient_id,calId:$scope.cal_id,startSessionTime:moment(startSessionTime).format("YYYY/MM/DD HH:mm:ss")};ConsultationService.startSession(postData).then(function(data){"success"==data.status?($scope.apptPatient.appt_status=ptnConst.apptStatus.inConsult.value,toastr.success("Start progress success."),$scope.startSessionTime=startSessionTime,$scope.apptPatient.SESSION_START_TIME=startSessionTime,socket.emit("notifyReceptionist")):(exlog.logErr(data),toastr.error("Start progress error."))},function(err){exlog.logErr(err),toastr.error("Start progress error.")})}var doctorData={};doctorData.doctorId=$scope.apptPatient.DOCTOR_ID,$scope.apptPatient.actual_doctor_id&&(doctorData.actualDoctorId=$scope.apptPatient.actual_doctor_id),executeStart()},$scope.beforeFinishSession=function(){var postData={patientId:$scope.patient_id,calId:$scope.cal_id};ConsultationService.beforeFinishSession(postData).then(function(data){if("success"==data.status)if(data.data.length>0)$scope.finishSession();else{$modal.open({templateUrl:"notifyChooseItem",controller:function($scope,$modalInstance){$scope.ok=function(){$modalInstance.dismiss("cancel")}},size:"sm"})}else exlog.logErr(data),toastr.error("Complete progress fail.")},function(err){exlog.logErr(err),toastr.error("Complete progress fail.")})},$scope.finishSession=function(){var endSessionTime=new Date,postData={patientId:$scope.patient_id,calId:$scope.cal_id,endSessionTime:moment(endSessionTime).format("YYYY/MM/DD HH:mm:ss")};ConsultationService.finishSession(postData).then(function(data){"success"==data.status?($scope.apptPatient.appt_status=ptnConst.apptStatus.completed.value,$scope.startSessionTime="close",$scope.apptPatient.SESSION_END_TIME=endSessionTime,toastr.success("Complete progress success."),socket.emit("notifyReceptionist")):(exlog.logErr(data),toastr.error("Complete progress fail."))},function(err){exlog.logErr(err),toastr.error("Complete progress fail.")})}}).directive("dropzone",function(){return function(scope,element,attrs){var config,dropzone;config=scope[attrs.dropzone],dropzone=new Dropzone(element[0],config.options),angular.forEach(config.eventHandlers,function(handler,event){dropzone.on(event,handler)})}}),angular.module("app.loggedIn.corres.list.controller",[]).controller("CorrespondenceController",function($scope,$state){}),angular.module("app.loggedIn.corres.list.directive",[]).directive("listCor",function(ConsultationService,ConfigService,$modal,$filter,$stateParams,$state,toastr){return{restrict:"EA",templateUrl:"modules/consultation/directives/template_cor/list.html",scope:{options:"="},link:function(scope,ele,attrs){var search={page:1,limit:20,offset:0,max_size:5,PATIENT_ID:$stateParams.patient_id,CAL_ID:$stateParams.cal_id},load=function(){ConsultationService.getListCor(search).then(function(response){scope.cor.list=response.data,scope.cor.list.Date=ConfigService.convertToDate_F(response.data.Date),scope.cor.count=response.count},function(error){})};scope.setPage=function(page){scope.cor.search.offset=(page-1)*scope.cor.search.limit,scope.cor.load()},scope.Action=function(type,index){if("new"==type){$modal.open({templateUrl:"CorAdd",controller:"CorrespondenceAddController"}).result.then(function(response){scope.cor.load()})}if("update"==type){console.log("sdjkds ",index);{$modal.open({templateUrl:"CorEdit",controller:"CorrespondenceEditController",resolve:{id:function(){return index}}}).result.then(function(response){scope.cor.load()})}}},scope.cor={search:search,load:function(){load()},loading:!1,list:[],count:0,errors:[]},scope.cor.load()}}}),angular.module("app.loggedIn.corres.add.controller",[]).controller("CorrespondenceAddController",function($scope,$state,$modalInstance){$scope.addcor={success:!1},$scope.$watch("addcor.success",function(success){success&&$modalInstance.close("success")})}),angular.module("app.loggedIn.corres.add.directive",[]).directive("addCor",function(ConsultationService,ConfigService,$cookieStore,$modal,$filter,$stateParams,$state,toastr){return{restrict:"EA",templateUrl:"modules/consultation/directives/template_cor/add.html",scope:{options:"=",success:"="},link:function(scope,ele,attrs){var user_id=$cookieStore.get("userInfo").id,saveCor=function(){ConfigService.beforeSave(scope.scor.errors),scope.scor.errors=[];var postData=angular.copy(scope.scor.form);console.log("^^^^^^^, ",postData),postData.Date=moment().format("YYYY-MM-DD"),postData.Time=moment().format("hh:mm"),postData.CAL_ID=$stateParams.cal_id,postData.PATIENT_ID=$stateParams.patient_id,postData.Created_by=postData.Last_updated_by=user_id,postData.Creation_date=moment().format("YYYY-MM-DD"),postData.Last_update_date=moment().format("YYYY-MM-DD"),ConsultationService.postAddCor(postData).then(function(response){scope.success=!0,toastr.success("Saved Successfully")},function(error){scope.scor.errors=angular.copy(error.data.errors),ConfigService.beforeError(scope.scor.errors)})};scope.scor={save:function(params){saveCor(params)},errors:[],form:{Mode:"",Duration:"",Who:"",Details:"",Therapist:""}}}}}),angular.module("app.loggedIn.corres.edit.controller",[]).controller("CorrespondenceEditController",function($scope,$state,$modalInstance,id){$scope.editcor={success:!1,id:id},$scope.$watch("editcor.success",function(success){success&&$modalInstance.close("success")})}),angular.module("app.loggedIn.corres.edit.directive",[]).directive("editCor",function(ConsultationService,ConfigService,$cookieStore,$modal,$filter,$stateParams,$state,toastr){return{restrict:"EA",templateUrl:"modules/consultation/directives/template_cor/edit.html",scope:{options:"=",success:"=",id:"="},link:function(scope,ele,attrs){var user_id=$cookieStore.get("userInfo").id,saveCor=function(){ConfigService.beforeSave(scope.scor.errors),scope.scor.errors=[];var postData=angular.copy(scope.scor.form);console.log("^^^^^^^, ",postData),postData.Date=moment().format("YYYY-MM-DD"),postData.Time=moment().format("hh:mm"),postData.CAL_ID=$stateParams.cal_id,postData.PATIENT_ID=$stateParams.patient_id,postData.Created_by=postData.Last_updated_by=user_id,postData.Creation_date=moment().format("YYYY-MM-DD"),postData.Last_update_date=moment().format("YYYY-MM-DD"),ConsultationService.postAddCor(postData).then(function(response){scope.success=!0,toastr.success("Updated Successfully"),scope.scor.load()},function(error){scope.scor.errors=angular.copy(error.data.errors),ConfigService.beforeError(scope.scor.errors)})},load=function(){console.log("sdfsssssssdfd",scope.scor.form.ID),ConsultationService.postByIdCor(scope.id).then(function(response){console.log(response.data),scope.scor.form=angular.copy(response.data)},function(error){})};scope.scor={load:function(){load()},save:function(params){saveCor(params)},errors:[],form:{ID:"",Date:"",Time:"",Mode:"",Duration:"",Who:"",Details:"",Therapist:""}},scope.scor.load()}}}),angular.module("app.loggedIn.patient.consult",["app.loggedIn.patient.consult.controller","app.loggedIn.patient.consult.consulthistoryController","app.loggedIn.patient.consult.measurementController","app.loggedIn.patient.consult.scriptController","app.loggedIn.patient.consult.itemsheetController","app.loggedIn.patient.consult.services","app.loggedIn.patient.consult.directives","app.loggedIn.corres.list.controller","app.loggedIn.corres.list.directive","app.loggedIn.corres.add.controller","app.loggedIn.corres.add.directive","app.loggedIn.corres.edit.controller","app.loggedIn.corres.edit.directive","app.kiss.timer.directive","app.loggedIn.patient.exercise.directives.list"]).config(function($stateProvider){$stateProvider.state("loggedIn.patient.consult",{url:"/consult",views:{"main-content":{templateUrl:"modules/consultation/views/consult.html",controller:"PatientConsultController"}}})});