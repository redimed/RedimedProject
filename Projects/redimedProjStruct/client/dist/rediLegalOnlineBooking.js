function MyDatePaginator(selector,momentDate,callBackFunc){var options={selectedDate:momentDate.format("DD-MM-YYYY"),selectedDateFormat:"DD-MM-YYYY",onSelectedDateChanged:function(event,date){callBackFunc(date)}};$(selector).datepaginator(options)}angular.module("app.loggedIn.rlob.controller",[]).controller("rlobController",function($scope,$http,$state,$window,$q,$stateParams,FileUploader,$cookieStore,$interval){$scope.bookingType=rlobConstant.bookingType.REDiLEGAL.name,$scope.bookingTypeObj=rlobConstant.bookingType.REDiLEGAL,$scope.contactDetails.splice(0),$scope.contactDetails.push({label:"",content:$scope.bookingTypeObj.display}),$scope.contactDetails.push({label:"Phone :",content:"(08) 9230 0900"}),$scope.contactDetails.push({label:"Email :",content:"medicolegal@redimed.com.au"}),$scope.have_redilegal_components.value=1,$scope.updateDailyNotificationRlobBooking()}),angular.module("app.loggedIn.vaccinob.controller",[]).controller("vaccinobController",function($scope,$http,$state,$window,$q,$stateParams,FileUploader,$cookieStore,$interval){$scope.bookingType=rlobConstant.bookingType.Vaccination.name,$scope.contactDetails.push({label:"",content:$scope.bookingType})});var rlobHelper={setSlimCroll:function(selector){$(selector).slimscroll({})}},rlobConstant={bookingStatus:{confirmed:"Confirmed",arrived:"Arrived",notArrived:"Not Arrived",completed:"Completed",cancel:"Cancel",lateCancellation:"Late Cancellation"},bellType:{changeStatus:"Change Booking Status",result:"Result",message:"Message",changeCalendar:"Change Appointment Calendar",notification:"Notification"},letterType:{result:"Result"},notificationType:{bell:"bell",letter:"letter"},bookingType:{REDiLEGAL:{alias:"rlob",name:"REDiLEGAL",display:"Medico-Legal"},Vaccination:{alias:"vaccinob",name:"Vaccination",display:"Vaccination"}},notifyJsColor:{warning:"warning",danger:"danger",success:"success"},documentStatus:{noDocuments:{value:"No documents",display:"Not Received"},notConfirmed:{value:"Not confirmed",display:"Not confirmed"},checked:{value:"Checked",display:"Received"}},documentStatusFilter:{noDocuments:{value:"No documents",display:"Not Received"},checked:{value:"Checked",display:"Received"}},documentStatusDisplay:{"No documents":"Not received","Not confirmed":"Not confirmed",Checked:"Received"},documentStatusSummaryStyleClass:{notConfirmed:"booking-item document-status-not-confirmed",checked:"booking-item document-status-checked",noDocuments:"booking-item document-status-no-documents"},notificationAppearance:{once:"ONCE",whenAccess:"WHEN ACCESS"},userType:{admin:1,redimed:2,company:3,doctor:4,nurse:5,driver:6,assistant:7},registerStatus:{PENDING:{value:"PENDING",display:"Pending",style:"success"},APPROVE:{value:"APPROVE",display:"Approve",style:""},REJECT:{value:"REJECT",display:"Reject",style:"warning"}},msgPopupType:{success:"success",error:"error"}},exlog={alert:function(data){alert(JSON.stringify(data))},log:function(data){console.log("%c----------------------TANNV BEGIN LOG------------------------","background: #ABC7E9; color: #141B76"),console.log("%c"+JSON.stringify(data),"background: #ABC7E9; color: #141B76"),console.log("%c----------------------TANNV END LOG--------------------------","background: #ABC7E9; color: #141B76")},logErr:function(data){console.log("%c----------------------TANNV ERROR BEGIN LOG------------------------","background: #D4B1B1; color: red"),console.log("%c"+JSON.stringify(data),"background: #D4B1B1; color: red"),console.log("%c-----------------------TANNV ERROR END LOG-------------------------","background: #D4B1B1; color: red")}},rlobDate={daysOfWeek:[{value:0,alias:"sun",display:"Sunday"},{value:1,alias:"mon",display:"Monday"},{value:2,alias:"tue",display:"Tueday"},{value:3,alias:"wed",display:"Wednesday"},{value:4,alias:"thu",display:"Thursday"},{value:5,alias:"fri",display:"Friday"},{value:6,alias:"sat",display:"Saturday"}],getDateStartWeek:function(date){var dayValue=date.getDay();return moment(date).add(1-dayValue,"days")},getDateEndWeek:function(date){var dayValue=date.getDay();return moment(date).add(6-dayValue,"days")}},rlobLang={rlobHeader:"Medico-Legal Online Booking"},rlobMsg={popup:function(header,type,content){$("#rlob-global-msg-popup .rlob-global-msg-popup-header").text(header),type==rlobConstant.msgPopupType.success&&($("#rlob-global-msg-popup .rlob-global-msg-popup-success").show(),$("#rlob-global-msg-popup .rlob-global-msg-popup-error").hide(),$("#rlob-global-msg-popup .rlob-global-msg-popup-success .rlob-global-msg-popup-content").text(content)),type==rlobConstant.msgPopupType.error&&($("#rlob-global-msg-popup .rlob-global-msg-popup-error").show(),$("#rlob-global-msg-popup .rlob-global-msg-popup-success").hide(),$("#rlob-global-msg-popup .rlob-global-msg-popup-error .rlob-global-msg-popup-content").text(content)),$("#rlob-global-msg-popup").modal({show:!0,backdrop:"static"})}},rlobScrollTo=function(selector,offeset){var el=$(selector),pos=el&&el.size()>0?el.offset().top:0;el&&($("body").hasClass("page-header-fixed")&&(pos-=$(".page-header").height()),pos+=offeset?offeset:-1*el.height()),$("html,body").animate({scrollTop:pos},"slow")};angular.module("app.loggedIn.rlob.directive",["app.calendar.mobile.controller"]).directive("noticeRepeatFinish",function(){return function(scope,element,attrs){scope.$last&&scope.collapseAll()}}).directive("mytable",["$timeout",function($timeout){return{restrict:"E",template:'<table width="100%" class="table table-hover table-striped" id="sample_editable_1"><thead><tr style="border-color: white"><th></th><th></th><th></th><th></th><th></th></tr><tr style="background-color: #585858; color: white"><th>ClaimNo</th><th>Surname</th><th>Type</th><th>Booking Date</th><th>Appointment Date</th></tr></thead><tr ng-repeat="booking in data"><td>{{booking.CLAIM_NO}}</td><td>{{booking.WRK_SURNAME}}</td><td>{{booking.Rl_TYPE_NAME}}</td><td>{{parseDate(booking.BOOKING_DATE)}}</td><td>{{parseDate(booking.APPOINTMENT_DATE)}}</td></tr></table>',controller:"rlob_bookingListController",link:function(scope,element,attrs,ctr){$timeout(function(){TableEditable.init();var initPickers=function(){$(".date-picker").rlobdatepicker({rtl:Metronic.isRTL(),autoclose:!0,format:"dd/mm/yyyy"})};initPickers()},0)}}}]).directive("rlobDialog",function(){return{restrict:"E",transclude:!0,scope:{dialogClass:"@",header:"=",status:"=",msg:"="},templateUrl:"modules/rediLegalOnlineBooking/directives/rlob_msg_dialog_template.html"}}).directive("rlobOrderBy",function(){return{restrict:"E",transclude:!0,required:["^ngModel"],scope:{fieldName:"@",rlobModel:"=",startupDirect:"@",currentFieldSort:"="},templateUrl:"modules/rediLegalOnlineBooking/directives/rlob_orderby_template.html",controller:function($scope){$scope.direct=angular.copy($scope.startupDirect),$scope.changeDirect=function(direct,fieldName){$scope.currentFieldSort=angular.copy(fieldName),$scope.direct=direct,$scope.rlobModel=$scope.fieldName+" "+$scope.direct}}}}).directive("rlobBookingDetail",function(){return{restrict:"E",transclude:!0,required:["^ngModel"],scope:{selectedBooking:"=",bookingType:"="},templateUrl:"modules/rediLegalOnlineBooking/directives/rlob_booking_detail_template.html",controller:function($scope){function codeAddress(){var address=$scope.selectedBooking.Site_addr;geocoder.geocode({address:address},function(results,status){if(status==google.maps.GeocoderStatus.OK){map.setCenter(results[0].geometry.location);{new google.maps.Marker({map:map,position:results[0].geometry.location})}}else alert("Geocode was not successful for the following reason: "+status)})}var geocoder,map;geocoder=new google.maps.Geocoder;var latlng=new google.maps.LatLng(-34.397,150.644),mapOptions={zoom:16,center:latlng};map=new google.maps.Map(document.getElementById("map-canvas"),mapOptions),$scope.$watch("selectedBooking",function(newValue,oldValue){$scope.selectedBooking&&codeAddress()})}}}).directive("rlobBookingDetailCompact",function(){return{restrict:"E",transclude:!0,required:["^ngModel"],scope:{selectedBooking:"=",bookingType:"="},templateUrl:"modules/rediLegalOnlineBooking/directives/rlob_booking_detail_template-compact.html",controller:function($scope){$scope.panelAccordion={status1:!0,status2:!0,status3:!0,status4:!0}}}}).directive("rlobBookingDetailPrint",function(){return{restrict:"E",transclude:!0,required:["^ngModel"],scope:{selectedBooking:"=",bookingType:"="},templateUrl:"modules/rediLegalOnlineBooking/directives/rlob_booking_detail_template_print.html",controller:function($scope){function codeAddress(){var address1=$scope.selectedBooking.Site_addr;GMaps.geocode({address:address1,callback:function(results,status){if("OK"==status){latlng1=results[0].geometry.location;var url=GMaps.staticMapURL({lat:latlng1.lat(),lng:latlng1.lng(),markers:[{lat:latlng1.lat(),lng:latlng1.lng()}]});url=url.replace("http://","https://"),$("#imgMapPrint").attr("src",url)}}})}$scope.dateValue=new Date,$scope.$watch("selectedBooking",function(newValue,oldValue){$scope.selectedBooking&&codeAddress()})}}}).directive("rlobUpload",function(){return{restrict:"E",transclude:!0,required:["^ngModel"],scope:{selectedBooking:"=",isAdminUpload:"=",filesUpdateFlag:"="},templateUrl:"modules/rediLegalOnlineBooking/directives/rlob_upload_template.html",controller:function($scope,$http,$cookieStore,FileUploader,rlobService){$scope.loginInfo=$cookieStore.get("userInfo");var uploader=$scope.uploader=new FileUploader({url:"/api/rlob/rl_booking_files/upload"});uploader.filters.push({name:"customFilter",fn:function(item,options){return this.queue.length<10}}),uploader.onWhenAddingFileFailed=function(item,filter,options){console.info("onWhenAddingFileFailed",item,filter,options)},uploader.onAfterAddingFile=function(fileItem){console.info("onAfterAddingFile",fileItem)},uploader.onAfterAddingAll=function(addedFileItems){console.info("onAfterAddingAll",addedFileItems)},uploader.onBeforeUploadItem=function(item){console.info("onBeforeUploadItem",item)},uploader.onProgressItem=function(fileItem,progress){console.info("onProgressItem",fileItem,progress)},uploader.onProgressAll=function(progress){console.info("onProgressAll",progress)},uploader.onSuccessItem=function(fileItem,response,status,headers){console.info("onSuccessItem",fileItem,response,status,headers)},uploader.onErrorItem=function(fileItem,response,status,headers){console.info("onErrorItem",fileItem,response,status,headers)},uploader.onCancelItem=function(fileItem,response,status,headers){console.info("onCancelItem",fileItem,response,status,headers)},uploader.onCompleteItem=function(fileItem,response,status,headers){console.info("onCompleteItem",fileItem,response,status,headers)},uploader.onCompleteAll=function(){$scope.filesUpdateFlag=void 0!=$scope.filesUpdateFlag?$scope.filesUpdateFlag+1:1,console.info("onCompleteAll")},console.info("uploader",uploader),$scope.$watch("selectedBooking",function(newValue,oldValue){$scope.selectedBooking&&(uploader.clearQueue(),uploader.formData[0]={},uploader.formData[0].booking_id=$scope.selectedBooking.BOOKING_ID,uploader.formData[0].company_id=$scope.loginInfo.company_id,uploader.formData[0].worker_name=$scope.selectedBooking.WRK_SURNAME,$scope.isAdminUpload||(uploader.formData[0].isClientDownLoad=0))}),$scope.$watch("selectedBooking.WRK_SURNAME",function(newValue,oldValue){$scope.selectedBooking&&(uploader.clearQueue(),uploader.formData[0]={},uploader.formData[0].booking_id=$scope.selectedBooking.BOOKING_ID,uploader.formData[0].company_id=$scope.loginInfo.company_id,uploader.formData[0].worker_name=$scope.selectedBooking.WRK_SURNAME,$scope.isAdminUpload||(uploader.formData[0].isClientDownLoad=0))})}}}).directive("rlobFileDownload",function(){return{restrict:"E",transclude:!0,required:["^ngModel"],scope:{bookingType:"=",selectedBooking:"=",isAdminGetFiles:"=",filesUpdateFlag:"=",numberOfDocs:"=",dialogStyleClass:"@"},templateUrl:"modules/rediLegalOnlineBooking/directives/rlob_download_file_template.html",controller:function($scope,$http,rlobService){function getFilesUpload(){$http({method:"GET",url:"/api/rlob/rl_bookings/admin/get-files-by-booking-id",params:{bookingId:$scope.selectedBooking.BOOKING_ID,isAdminGetFiles:$scope.isAdminGetFiles}}).success(function(data){"success"==data.status&&($scope.files=data.data,$scope.numberOfDocs=data.data.length)})}void 0===$scope.numberOfDocs&&($scope.numberOfDocs=0),$scope.letterType=rlobConstant.letterType,$scope.notificationType=rlobConstant.notificationType,$scope.rlob_add_notification=rlobService.add_notification,$scope.$watch("selectedBooking",function(newValue,oldValue){$scope.selectedBooking&&getFilesUpload()}),$scope.$watch("filesUpdateFlag",function(newValue,oldValue){$scope.selectedBooking&&getFilesUpload()}),$scope.rlob_change_booking_file_role=function(assId,refId,fileId,role){function handle(mapUrl){$scope.showMsgDialog=function(styleClass,header,status,content){$scope.msgHeader=header,$scope.msgStatus=status,$scope.msgContent=content,$(styleClass).modal({show:!0,backdrop:"static"})},$scope.showNotificationPopup=rlobService.showNotificationPopup,$http({method:"POST",url:"/api/rlob/rl_booking_files/change-role-download",data:{fileId:fileId,role:role,siteAddress:siteAddress,mapUrl:mapUrl}}).success(function(data){"success"==data.status&&(1==role&&$scope.rlob_add_notification(assId,refId,$scope.bookingType,$scope.letterType.result,$scope.notificationType.letter,""),getFilesUpload())}).error(function(data){})["finally"](function(){})}var mapUrl=null,siteAddress=null;$scope.selectedBooking&&$scope.selectedBooking.Site_addr?(siteAddress=$scope.selectedBooking.Site_addr,GMaps.geocode({address:siteAddress,callback:function(results,status){"OK"==status?(latlng1=results[0].geometry.location,mapUrl=GMaps.staticMapURL({lat:latlng1.lat(),lng:latlng1.lng(),markers:[{lat:latlng1.lat(),lng:latlng1.lng()}]}),handle(mapUrl)):handle(mapUrl)}})):handle(mapUrl)},$scope.showDialogSetResult=function(){$scope.filesClone=angular.copy($scope.files),$("."+$scope.dialogStyleClass).modal({show:!0,backdrop:"static"})},$scope.setListResultFiles=function(){for(var listResult=[],i=0;i<$scope.filesClone.length;i++){var item=$scope.filesClone[i];1==item.isClientDownLoad&&listResult.push(item)}listResult.length>0?rlobService.rlobBookingFile.setListResultFiles(listResult).then(function(data){"success"==data.status?(rlobMsg.popup(rlobLang.rlobHeader,rlobConstant.msgPopupType.success,"send file result success"),$scope.rlob_add_notification(listResult[0].ASS_ID,listResult[0].BOOKING_ID,$scope.bookingType,$scope.letterType.result,$scope.notificationType.letter,""),getFilesUpload()):rlobMsg.popup(rlobLang.rlobHeader,rlobConstant.msgPopupType.error,"Set list result files fail.")},function(err){rlobMsg.popup(rlobLang.rlobHeader,rlobConstant.msgPopupType.error,"Set list result files fail.")}).then(function(){$("."+$scope.dialogStyleClass).modal("hide")}):rlobMsg.popup(rlobLang.rlobHeader,rlobConstant.msgPopupType.error,"No files chosen.")},$scope.unselectAllFileResult=function(){rlobService.rlobBookingFile.unselectAllFileResult($scope.selectedBooking.BOOKING_ID).then(function(data){"success"==data.status?(rlobMsg.popup(rlobLang.rlobHeader,rlobConstant.msgPopupType.success,"Unselect all result files success."),getFilesUpload()):rlobMsg.popup(rlobLang.rlobHeader,rlobConstant.msgPopupType.error,"Unselect all result files fail.")},function(err){rlobMsg.popup(rlobLang.rlobHeader,rlobConstant.msgPopupType.error,"Unselect all result files fail.")}).then(function(){$("."+$scope.dialogStyleClass).modal("hide")})}}}}).directive("rlobChooseAppointmentCalendarDialog",function(){return{restrict:"E",transclude:!0,required:["^ngModel"],scope:{bookingType:"=",usingForDialogFlag:"=",selectedAppointmentCalendar:"="},templateUrl:"modules/rediLegalOnlineBooking/directives/rlob_choose_appointment_calendar_template.html",controller:function($scope,$http,$stateParams,Mailto,$cookieStore,$window,rlobService,$timeout,bookingService){$scope.loginInfo=$cookieStore.get("userInfo"),$scope.updateMailtoLink=function(){console.log($cookieStore.get("companyInfo"));var Company_name="[Name of Company]";$cookieStore.get("companyInfo")&&($scope.companyInfo=$cookieStore.get("companyInfo"),Company_name=$scope.companyInfo.Company_name),$scope.mailTemplate={REDiLEGAL:{label:"Please contact us to make an appointment",recepient:"medicolegal@redimed.com.au",options:{subject:Company_name+" - Request Booking",body:" I would like to make a booking for       \n Claim Number:                            \n Injured Workers's Name:                  \n Contact Number:                          \n Address:                                 \n Date of Birth:                           \n Date of Injury:                          \n Description of Injury:                   \n Location of Appointment:                 \n Timeframe for Appointment:               \n\n Please note that this booking is not confirmed in our system until approved by REDIMED."}},Vaccination:{label:"Please contact us to make an appointment",recepient:"",options:{subject:Company_name+" - Request Booking",body:"Please booking for me..."}}},"REDiLEGAL"==$scope.bookingType?$scope.mailtoLink=Mailto.url($scope.mailTemplate.REDiLEGAL.recepient,$scope.mailTemplate.REDiLEGAL.options):"Vaccination"==$scope.bookingType&&($scope.mailtoLink=Mailto.url($scope.mailTemplate.Vaccination.recepient,$scope.mailTemplate.Vaccination.options)),$scope.sendEmail=function(){$window.location.href=$scope.mailtoLink}},$scope.updateMailtoLink(),$scope.selectedFilter={locationSelected:{},rltypeSelected:{},clnSpecialitySelected:{},doctorSelected:{},var1:{}},$scope.selectedFilter.var1="REDiLEGAL"==$scope.bookingType?moment().add(14,"day"):moment();var initPickers=function(){$(".date-picker").rlobdatepicker({rtl:Metronic.isRTL(),autoclose:!0})};initPickers();{var datePaginatorChanged=function(date){$scope.selectedFilter.var1=date,$scope.updateAppoinmentsList()};new MyDatePaginator("#rlob-datepaginator-choice",$scope.selectedFilter.var1,datePaginatorChanged)}$("#rlob-datepaginator-choice").on("changeMonth",function(){$timeout(function(){$scope.updateAppoinmentsList()},200)}),$scope.getLocationsFilter=function(){$http({method:"GET",url:"/api/rlob/redimedsites/list",params:{bookingType:$scope.bookingType}}).success(function(data){$scope.locationsFilter=data}).error(function(data){console.log("error")})["finally"](function(){})},$scope.getLocationsFilter(),$scope.getRlTypesFilter=function(){$http({method:"GET",url:"/api/rlob/rl_types/list",params:{sourceType:$scope.bookingType}}).success(function(data){$scope.rltypesFilter=data,"Vaccination"==$scope.bookingType&&($scope.selectedFilter.rltypeSelected=data[0],$scope.getSpecialitiesFilter())}).error(function(data){console.log("error")})["finally"](function(){})},$scope.getRlTypesFilter(),$scope.rlTypesFilterChange=function(rlTypeId){$scope.updateAppoinmentsList()},$scope.getSpecialitiesFilter=function(){$http({method:"GET",url:"/api/rlob/cln_specialties/list",params:{sourceType:$scope.bookingType}}).success(function(data){"success"==data.status&&($scope.specialitiesFilter=data.data),"Vaccination"==$scope.bookingType&&($scope.selectedFilter.clnSpecialitySelected=$scope.specialitiesFilter[0],$scope.getDoctorsFilter())}).error(function(data){console.log("error")})["finally"](function(){})},$scope.getSpecialitiesFilter(),$scope.specialitiesChange=function(){$scope.updateAppoinmentsList()},$scope.getDoctorsFilter=function(){$http({method:"GET",url:"/api/rlob/doctors/get-doctors-for-source-type",params:{sourceType:$scope.bookingType}}).success(function(data){"success"==data.status&&($scope.doctorsFilter=data.data),"Vaccination"==$scope.bookingType&&($scope.selectedFilter.doctorSelected=$scope.doctorsFilter[0],$scope.updateAppoinmentsList())}).error(function(data){console.log("error")})["finally"](function(){})},$scope.getDoctorsFilter(),$scope.getListDateAppoinment=function(rlTypeId,specialtyName,doctorId,locationId,var1){for(var listItemDate=angular.element(".rlobdatepicker-days").find("table tbody tr td").not(".new").not(".old"),getMonth=angular.element(".rlobdatepicker-days").find("table thead tr .rlobdatepicker-switch"),i=0;i<listItemDate.length;i++)$scope.startItemDate=moment(angular.element(listItemDate[0]).text()+" "+angular.element(getMonth).text()).format("YYYY/MM/DD"),$scope.endItemDate=moment(angular.element(listItemDate[listItemDate.length-1]).text()+" "+angular.element(getMonth).text()).format("YYYY/MM/DD");rlobService.getListDateAppoinmentCalendar(rlTypeId,specialtyName,doctorId,locationId,$scope.startItemDate,$scope.endItemDate,$scope.bookingType).then(function(data){if("success"==data.status){for(var itemDate={},i=0;i<data.data.length;i++)itemDate[moment(data.data[i].APPOINTMENT_DATE).format("D")]=moment(data.data[i].APPOINTMENT_DATE).format("D");for(var i=0;i<listItemDate.length;i++)angular.element(listItemDate[i]).hasClass("setColorDatePicker")&&angular.element(listItemDate[i]).removeClass("setColorDatePicker"),itemDate[angular.element(listItemDate[i]).text()]&&(angular.element(listItemDate[i]).hasClass("today")||angular.element(listItemDate[i]).hasClass("active")||angular.element(listItemDate[i]).addClass("setColorDatePicker"))}else alert("error get list date")});var startDate=angular.copy(var1).subtract("days",30).format("YYYY/MM/DD"),endDate=angular.copy(var1).add("days",30).format("YYYY/MM/DD");rlobService.getListDateAppoinmentCalendar(rlTypeId,specialtyName,doctorId,locationId,startDate,endDate,$scope.bookingType).then(function(data){if("success"==data.status){for(var listItem=angular.element("#rlob-datepaginator-choice").find("ul li a"),listDate={},i=0;i<data.data.length;i++)listDate[moment(data.data[i].APPOINTMENT_DATE).format("DD-MM-YYYY")]=moment(data.data[i].APPOINTMENT_DATE).format("DD-MM-YYYY");for(var i=0;i<listItem.length;i++)angular.element(listItem[i]).hasClass("setColorDatePicker")&&angular.element(listItem[i]).removeClass("setColorDatePicker"),null!=listItem[i].getAttribute("data-moment")&&listDate[listItem[i].getAttribute("data-moment")]&&(angular.element(listItem[i]).hasClass("dp-item dp-selected")||angular.element(listItem[i]).addClass("setColorDatePicker"),$(".dp-selected").unbind(),$(".dp-selected").click($scope.updateAppoinmentsList))}})},$scope.updateAppoinmentsList=function(){var rlTypeId=$scope.selectedFilter.rltypeSelected&&$scope.selectedFilter.rltypeSelected.RL_TYPE_ID?$scope.selectedFilter.rltypeSelected.RL_TYPE_ID:"%",specialtyName=$scope.selectedFilter.clnSpecialitySelected&&$scope.selectedFilter.clnSpecialitySelected.Specialties_name?$scope.selectedFilter.clnSpecialitySelected.Specialties_name:"%",doctorId=$scope.selectedFilter.doctorSelected&&$scope.selectedFilter.doctorSelected.doctor_id?$scope.selectedFilter.doctorSelected.doctor_id:"%",locationId=$scope.selectedFilter.locationSelected&&$scope.selectedFilter.locationSelected.id?$scope.selectedFilter.locationSelected.id:"%",fromTime=$scope.selectedFilter.var1.format("YYYY/MM/DD");$scope.getListDateAppoinment(rlTypeId,specialtyName,doctorId,locationId,$scope.selectedFilter.var1),$http({method:"GET",url:"/api/rlob/appointment-calendar/get-appointment-calendar",params:{RL_TYPE_ID:rlTypeId,Specialties_name:specialtyName,DOCTOR_ID:doctorId,SITE_ID:locationId,FROM_TIME:fromTime,sourceType:$scope.bookingType}}).success(function(data){for(var temp={TYPE_ITEMS:[]},i=0;i<data.length;i++)temp[data[i].RL_TYPE_ID]||(temp[data[i].RL_TYPE_ID]={DOCTOR_ITEMS:[]},temp.TYPE_ITEMS.push({RL_TYPE_ID:data[i].RL_TYPE_ID,Rl_TYPE_NAME:data[i].Rl_TYPE_NAME})),temp[data[i].RL_TYPE_ID][data[i].DOCTOR_ID]||(temp[data[i].RL_TYPE_ID][data[i].DOCTOR_ID]={LOCATION_ITEMS:[]},temp[data[i].RL_TYPE_ID].DOCTOR_ITEMS.push({DOCTOR_ID:data[i].DOCTOR_ID,DOCTOR_NAME:data[i].NAME})),temp[data[i].RL_TYPE_ID][data[i].DOCTOR_ID][data[i].SITE_ID]||(temp[data[i].RL_TYPE_ID][data[i].DOCTOR_ID][data[i].SITE_ID]={APPOINTMENT_ITEMS:[]},temp[data[i].RL_TYPE_ID][data[i].DOCTOR_ID].LOCATION_ITEMS.push({SITE_ID:data[i].SITE_ID,SITE_NAME:data[i].Site_name})),temp[data[i].RL_TYPE_ID][data[i].DOCTOR_ID][data[i].SITE_ID][data[i].CAL_ID]||(temp[data[i].RL_TYPE_ID][data[i].DOCTOR_ID][data[i].SITE_ID][data[i].CAL_ID]={SPEC_ITEMS:[]},temp[data[i].RL_TYPE_ID][data[i].DOCTOR_ID][data[i].SITE_ID].APPOINTMENT_ITEMS.push({CAL_ID:data[i].CAL_ID,APPOINTMENT_TIME:data[i].appointment_time,FROM_TIME:data[i].FROM_TIME,TO_TIME:data[i].TO_TIME,DOCTOR_ID:data[i].DOCTOR_ID,SITE_ID:data[i].SITE_ID})),temp[data[i].RL_TYPE_ID][data[i].DOCTOR_ID][data[i].SITE_ID][data[i].CAL_ID][data[i].Specialties_id]||(temp[data[i].RL_TYPE_ID][data[i].DOCTOR_ID][data[i].SITE_ID][data[i].CAL_ID][data[i].Specialties_id]={},temp[data[i].RL_TYPE_ID][data[i].DOCTOR_ID][data[i].SITE_ID][data[i].CAL_ID].SPEC_ITEMS.push({Specialties_id:data[i].Specialties_id,Specialties_name:data[i].Specialties_name}));for(var arr=[],i=0;i<temp.TYPE_ITEMS.length;i++){var type_item=temp.TYPE_ITEMS[i];type_item.DOCTOR_ITEMS=[];for(var j=0;j<temp[type_item.RL_TYPE_ID].DOCTOR_ITEMS.length;j++){var doctor_item=temp[type_item.RL_TYPE_ID].DOCTOR_ITEMS[j];doctor_item.SPECS={},doctor_item.SPECS_STR="",doctor_item.LOCATION_ITEMS=[],type_item.DOCTOR_ITEMS.push(doctor_item);for(var q=0;q<temp[type_item.RL_TYPE_ID][doctor_item.DOCTOR_ID].LOCATION_ITEMS.length;q++){var location_item=temp[type_item.RL_TYPE_ID][doctor_item.DOCTOR_ID].LOCATION_ITEMS[q];location_item.APPOINTMENT_ITEMS=[],doctor_item.LOCATION_ITEMS.push(location_item);for(var k=0;k<temp[type_item.RL_TYPE_ID][doctor_item.DOCTOR_ID][location_item.SITE_ID].APPOINTMENT_ITEMS.length;k++){var appointment_item=temp[type_item.RL_TYPE_ID][doctor_item.DOCTOR_ID][location_item.SITE_ID].APPOINTMENT_ITEMS[k];appointment_item.SPEC_ITEMS=[],location_item.APPOINTMENT_ITEMS.push(appointment_item);for(var l=0;l<temp[type_item.RL_TYPE_ID][doctor_item.DOCTOR_ID][location_item.SITE_ID][appointment_item.CAL_ID].SPEC_ITEMS.length;l++){var spec_item=temp[type_item.RL_TYPE_ID][doctor_item.DOCTOR_ID][location_item.SITE_ID][appointment_item.CAL_ID].SPEC_ITEMS[l];doctor_item.SPECS[spec_item.Specialties_name]||(doctor_item.SPECS[spec_item.Specialties_name]=spec_item.Specialties_name,doctor_item.SPECS_STR=doctor_item.SPECS_STR+spec_item.Specialties_name+"; "),appointment_item.SPEC_ITEMS.push(spec_item)}}}}arr.push(type_item)}$scope.appointmentsFilter=arr}).error(function(data){console.log("error")})["finally"](function(){})},$scope.$watch("usingForDialogFlag",function(newValue,oldValue){$scope.usingForDialogFlag&&($scope.updateCalendarPaginator(),$scope.updateAppoinmentsList())}),$scope.updateCalendarPaginator=function(){$scope.selectedFilter.var1=moment();var initPickers=function(){$(".date-picker").rlobdatepicker({rtl:Metronic.isRTL(),autoclose:!0})};initPickers();{var datePaginatorChanged=function(date){$scope.selectedFilter.var1=date,$scope.updateAppoinmentsList()};new MyDatePaginator("#rlob-datepaginator-choice",$scope.selectedFilter.var1,datePaginatorChanged)}},$scope.updateAppoinmentsList(),$scope.selectAppointmentCalendar=function(appointmentCalendar,RL_TYPE_ID,Specialties_id){appointmentCalendar.RL_TYPE_ID=RL_TYPE_ID,appointmentCalendar.Specialties_id=Specialties_id,$scope.selectedAppointmentCalendar=appointmentCalendar}}}}).directive("rlobChooseAppointmentMobileCalendar",function(){return{restrict:"E",transclude:!0,required:["^ngModel"],scope:{bookingType:"=",selectedAppointmentCalendar:"="},templateUrl:"modules/rediLegalOnlineBooking/directives/rlob_choose_appointment_calendar_mobile_template.html",controller:"rlobCalendarMobileMasterController"}}).directive("rlobChooseAppointmentMobileCalendarPatient",function(){return{restrict:"E",required:["^ngModel"],scope:{bookingType:"=",selectedAppointmentCalendar:"=",patientInfoCalendar:"="},templateUrl:"modules/rediLegalOnlineBooking/directives/rlob_choose_appointment_calendar_mobile_patient_template.html",controller:"rlobCalendarMobileMasterController"}}).directive("rlobBookingReport",function(){return{restrict:"E",transclude:!0,scope:{list:"=",listStatus:"="},templateUrl:"modules/rediLegalOnlineBooking/directives/rlob_booking_report_template.html"}}).directive("rlobAdminLocalNotification",function(rlobService){return{restrict:"E",transclude:!0,required:["^ngModel"],scope:{actionCenter:"=",groupName:"@"},templateUrl:"modules/rediLegalOnlineBooking/directives/rlob_admin_local_notification_template.html",controller:function($scope,rlobService,$cookieStore,$window,Mailto,$q){$scope.listBookingNotification=[],$scope.bookingType=rlobConstant.bookingType.REDiLEGAL.name,$scope.localNotificationType={type1:{header:"Need To Change Status",alias:"passBookingNotChangeStatus"},type2:{header:"Waiting On Paperwork",alias:"upcommingBookingHaveNotDucment"},type3:{header:"Outstanding",alias:"passBookingHaveNotResult"}},$scope.documentStatusDisplay=rlobConstant.documentStatusDisplay,$scope.listPassBookingNotChangeStatus=[],$scope.getPassBookingNotChangeStatus=function(doctorId){rlobService.getPassBookingNotChangeStatus($scope.bookingType,doctorId).then(function(data){"success"==data.status&&($scope.listPassBookingNotChangeStatus=data.data)},function(error){})},$scope.updatePassBookingNotChangeStatus=function(doctorId){rlobService.getPassBookingNotChangeStatus($scope.bookingType,doctorId).then(function(data){"success"==data.status&&($scope.listPassBookingNotChangeStatus=data.data,$scope.listBookingNotification=$scope.listPassBookingNotChangeStatus)},function(error){})},$scope.listUpcommingBookingWaitingPaperwork=[],$scope.getListUpcommingBookingWaitingPaperwork=function(doctorId){rlobService.getListUpcommingBookingWaitingPaperwork($scope.bookingType,doctorId).then(function(data){console.log(data),"success"==data.status&&($scope.listUpcommingBookingWaitingPaperwork=data.data)},function(error){})},$scope.updateListUpcommingBookingWaitingPaperwork=function(doctorId){rlobService.getListUpcommingBookingWaitingPaperwork($scope.bookingType,doctorId).then(function(data){console.log(data),"success"==data.status&&($scope.listUpcommingBookingWaitingPaperwork=data.data,$scope.listBookingNotification=$scope.listUpcommingBookingWaitingPaperwork)},function(error){})},$scope.listBookingOutstandingNotification=[],$scope.getListBookingOutstandingNotification=function(doctorId){rlobService.getListBookingOutstandingNotification($scope.bookingType,doctorId).then(function(data){"success"==data.status&&($scope.listBookingOutstandingNotification=data.data)},function(error){})},$scope.updateListBookingOutstandingNotification=function(doctorId){rlobService.getListBookingOutstandingNotification($scope.bookingType,doctorId).then(function(data){"success"==data.status&&($scope.listBookingOutstandingNotification=data.data,$scope.listBookingNotification=$scope.listBookingOutstandingNotification)},function(error){})},$scope.currentNotificationType=null,$scope.showListBookingNotification=function(notificationType){switch($scope.currentNotificationType=notificationType,notificationType){case $scope.localNotificationType.type1.alias:$scope.listBookingNotification=$scope.listPassBookingNotChangeStatus,$scope.listBookingNotificationHeader=$scope.localNotificationType.type1.header;break;case $scope.localNotificationType.type2.alias:$scope.listBookingNotification=$scope.listUpcommingBookingWaitingPaperwork,$scope.listBookingNotificationHeader=$scope.localNotificationType.type2.header;break;case $scope.localNotificationType.type3.alias:$scope.listBookingNotification=$scope.listBookingOutstandingNotification,$scope.listBookingNotificationHeader=$scope.localNotificationType.type3.header}$("#list_booking_admin_local_notification").modal({show:!0,backdrop:"static"})},$scope.documentStatusChangedFlag=0,$scope.$watch("documentStatusChangedFlag",function(newValue,oldValue){$scope.documentStatusChangedFlag&&$scope.updateListUpcommingBookingWaitingPaperwork()}),$("#list_booking_admin_local_notification").on("hidden.bs.modal",function(e){$scope.actionCenter[$scope.groupName].runWhenChanged()}),$scope.updateAdminLocalNotification=function(){var doctorId=$scope.doctorInfo?$scope.doctorInfo.doctor_id:null;

$scope.getPassBookingNotChangeStatus(doctorId),$scope.getListUpcommingBookingWaitingPaperwork(doctorId),$scope.getListBookingOutstandingNotification(doctorId)},$scope.userInfo=$cookieStore.get("userInfo"),$scope.doctorInfo=null,$scope.getDoctorInfoByUserId=function(){var deferred=$q.defer();return rlobService.getDoctorInfoByUserId($scope.userInfo.id).then(function(data){"success"==data.status&&($scope.doctorInfo=data.data)},function(err){console.log("Khong the lay thong tin doctor")}).then(function(){deferred.resolve()}),deferred.promise},$scope.userInfo.user_type==rlobConstant.userType.doctor?$scope.getDoctorInfoByUserId().then($scope.updateAdminLocalNotification):$scope.updateAdminLocalNotification(),$scope.actionCenter.scheduleList.rlobUpdateAdminLocalNotification=$scope.updateAdminLocalNotification,$scope.setSlimCroll=function(selector){$(selector).slimscroll({})},$scope.$watch("listBookingNotification",function(oldValue,newValue){$scope.selectedBooking&&($scope.selectedBooking=void 0)}),$scope.setSelectedBooking=function(bookingId){rlobService.getBookingById(bookingId).then(function(data){"success"==data.status&&($scope.selectedBooking=data.data)},function(error){})},$scope.isAdminGetFiles=!0,$scope.isAdminUpload=!0,$scope.accordionStatus={status1:!0},$scope.newsletter=function(){$scope.emailContent="{Title} Redimed Medico-Legal Newsletter\n\n{Title} News\nSection for us to easily update\n{Title} Appointment Availability\nSection for us to easily update\nContact Medico-Legal Department at Redimed on (08) 9230 0900 or log to the online booking system link\n",rlobService.listMailUserOnlineBooking().then(function(data){if("success"==data.status){var recepient=data.data,options={subject:"Medico-Legal Newsletter",body:$scope.emailContent,bcc:recepient};console.log(recepient),$scope.mailtoLink=Mailto.url("",options),$window.location.href=$scope.mailtoLink}})}}}}).directive("rlobChangeBookingStatus",function(rlobService){return{restrict:"E",transclude:!0,required:["^ngModel"],scope:{selectedBooking:"=",bookingStatusChangedFlag:"="},templateUrl:"modules/rediLegalOnlineBooking/directives/rlob_booking_change_status_template.html",controller:function($scope){$scope.bookingStatus=rlobConstant.bookingStatus,$scope.bookingStatusDisplay=rlobConstant.bookingStatusDisplay,$scope.rlob_change_status=function(assId,bookingId,bookingType,status){$scope.selectedBooking.STATUS==$scope.bookingStatus.cancel?rlobService.selectAppointment($scope.selectedBooking.CAL_ID).then(function(data){null===data.data.NOTES?rlobService.undoCancelBooking($scope.selectedBooking.CAL_ID,$scope.selectedBooking.PATIENT_ID).then(function(data){"success"==data.status?rlobService.changeBookingStatus(bookingId,status).then(function(data){if("success"==data.status){$scope.selectedBooking.STATUS=status,$scope.bookingStatusChangedFlag||($scope.bookingStatusChangedFlag=0),$scope.bookingStatusChangedFlag=$scope.bookingStatusChangedFlag+1;var refId=bookingId;rlobService.add_notification(assId,refId,bookingType,rlobConstant.bellType.changeStatus,rlobConstant.notificationType.bell,status),rlobMsg.popup(rlobLang.rlobHeader,rlobConstant.msgPopupType.success,"Change booking status success.")}else rlobMsg.popup(rlobLang.rlobHeader,rlobConstant.msgPopupType.error,"Change booking status fail.")}):rlobMsg.popup(rlobLang.rlobHeader,rlobConstant.msgPopupType.error,"Change booking status fail.")}):rlobMsg.popup(rlobLang.rlobHeader,rlobConstant.msgPopupType.error,"Change booking status fail.")}):status==$scope.bookingStatus.cancel?rlobService.cancelBooking($scope.selectedBooking.CAL_ID,$scope.selectedBooking.PATIENT_ID).then(function(data){"success"==data.status?rlobService.changeBookingStatus(bookingId,status).then(function(data){if("success"==data.status){$scope.selectedBooking.STATUS=status,$scope.bookingStatusChangedFlag||($scope.bookingStatusChangedFlag=0),$scope.bookingStatusChangedFlag=$scope.bookingStatusChangedFlag+1;var refId=bookingId;rlobService.add_notification(assId,refId,bookingType,rlobConstant.bellType.changeStatus,rlobConstant.notificationType.bell,status),rlobMsg.popup(rlobLang.rlobHeader,rlobConstant.msgPopupType.success,"Change booking status success.")}else rlobMsg.popup(rlobLang.rlobHeader,rlobConstant.msgPopupType.error,"Change booking status fail.")}):rlobMsg.popup(rlobLang.rlobHeader,rlobConstant.msgPopupType.error,"Change booking status fail.")}):rlobService.changeBookingStatus(bookingId,status).then(function(data){if("success"==data.status){$scope.selectedBooking.STATUS=status,$scope.bookingStatusChangedFlag||($scope.bookingStatusChangedFlag=0),$scope.bookingStatusChangedFlag=$scope.bookingStatusChangedFlag+1;var refId=bookingId;rlobService.add_notification(assId,refId,bookingType,rlobConstant.bellType.changeStatus,rlobConstant.notificationType.bell,status),rlobMsg.popup(rlobLang.rlobHeader,rlobConstant.msgPopupType.success,"Change booking status success.")}else rlobMsg.popup(rlobLang.rlobHeader,rlobConstant.msgPopupType.error,"Change booking status fail.")})}}}}).directive("rlobChoosePeriod",function(rlobService){return{restrict:"E",transclude:!0,required:["^ngModel"],scope:{fromDate:"=",toDate:"="},templateUrl:"modules/rediLegalOnlineBooking/directives/rlob_choose_period.html",controller:function($scope){$scope.showDialogChoose=function(){$scope.fromDate&&$scope.toDate&&($scope.FROM_DATE_TEMP=moment($scope.fromDate,"YYYY/MM/DD").toDate(),$scope.TO_DATE_TEMP=moment($scope.toDate,"YYYY/MM/DD").toDate()),$("#choose-period-dialog").modal({show:!0,backdrop:"static"})},$scope.$watch("[FROM_DATE_TEMP,TO_DATE_TEMP]",function(newValue,oldValue){$scope.FROM_DATE_TEMP&&$scope.TO_DATE_TEMP&&($scope.FROM_DATE_TEMP>$scope.TO_DATE_TEMP?($scope.localError=!0,$scope.hadForcused=!0):$scope.localError=!1)},!0),$scope.FROM_DATE_TEMP=null,$scope.TO_DATE_TEMP=null,$scope.localError=!1,$scope.periodDisplay="ALL",$scope.getPeriod=function(){if($scope.hadForcused=!0,!$scope.choosePeriodForm.$invalid&&null!=$scope.FROM_DATE_TEMP&&null!=$scope.TO_DATE_TEMP){if($scope.FROM_DATE_TEMP>$scope.TO_DATE_TEMP)return void($scope.localError=!0);$scope.localError=!1,$scope.fromDate=moment($scope.FROM_DATE_TEMP).format("YYYY/MM/DD"),$scope.toDate=moment($scope.TO_DATE_TEMP).format("YYYY/MM/DD"),$scope.periodDisplay=moment($scope.FROM_DATE_TEMP).format("DD/MM/YY")+"-"+moment($scope.TO_DATE_TEMP).format("DD/MM/YY"),$("#choose-period-dialog").modal("hide")}},$scope.resetDate=function(){$scope.FROM_DATE_TEMP=null,$scope.TO_DATE_TEMP=null,$scope.fromDate="",$scope.toDate="",$scope.localError=!1,$scope.hadForcused=!1,$scope.periodDisplay="ALL"},$scope.reset=function(){$scope.resetDate(),$("#choose-period-dialog").modal("hide")}}}}).directive("rlobChangeDocumentStatus",function(rlobService){return{restrict:"E",transclude:!0,required:["^ngModel"],scope:{selectedDocument:"=",documentStatusChangedFlag:"="},templateUrl:"modules/rediLegalOnlineBooking/directives/rlob_document_change_status_template.html",controller:function($scope){$scope.documentStatus=rlobConstant.documentStatus,$scope.documentStatusDisplay=rlobConstant.documentStatusDisplay,$scope.rlob_document_change_status=function(bookingId,status){rlobService.changeDocumentStatus(bookingId,status).then(function(data){"success"==data.status&&($scope.selectedDocument.DOCUMENT_STATUS=status,$scope.documentStatusChangedFlag||($scope.documentStatusChangedFlag=0),$scope.documentStatusChangedFlag=$scope.documentStatusChangedFlag+1)})}}}}).directive("rlobSendClientMessage",function(rlobService){return{restrict:"E",transclude:!0,required:["^ngModel"],scope:{actionCenter:"=",selectedBooking:"="},templateUrl:"modules/rediLegalOnlineBooking/directives/rlob_send_client_message.html",controller:function($scope,rlobService){$scope.showDialogSendBookingMessage=function(){$scope.bookingMessage={},$scope.bookingMessage.assId=$scope.selectedBooking.ASS_ID,$scope.bookingMessage.bookingId=$scope.selectedBooking.BOOKING_ID,$("#rlob-send-client-message").modal({show:!0,backdrop:"static"})},$scope.sendBookingMessage=function(){rlobService.add_notification($scope.bookingMessage.assId,$scope.bookingMessage.bookingId,rlobConstant.bookingType.REDiLEGAL.name,rlobConstant.bellType.message,rlobConstant.notificationType.bell,$scope.bookingMessage.message),$("#rlob-send-client-message").modal("hide")},rlobService.getListBookingMessages().then(function(data){"success"==data.status&&($scope.ListBookingMessages=data.data)}),$scope.check=function(data){$scope.bookingMessage.message=data},$scope.actionCenter.sendClientMessage=function(){$scope.showDialogSendBookingMessage()}}}}).directive("rlobChangeBookingCalendar",function(rlobService){return{restrict:"E",transclude:!0,required:["^ngModel"],scope:{actionCenter:"=",groupName:"@",selectedBooking:"=",currentUpdatingItem:"="},templateUrl:"modules/rediLegalOnlineBooking/directives/rlob_change_booking_calendar.html",controller:function($scope,rlobService){$scope.bookingType=rlobConstant.bookingType.REDiLEGAL.name,$scope.currentUpdatingItem.bookingId=null,$scope.currentUpdatingItem.calId=null,$scope.currentUpdatingItem.appointmentDateTime=null,$scope.currentUpdatingItem.newAppoimentDateTime=null,$scope.currentUpdatingItem.bookingIdChangeSuccess=null,$scope.currentUpdatingItem.assId=null,$scope.currentUpdatingItem.newCalId=null,$("#rlob_change_booking_calendar_dialog").on("shown.bs.modal",function(e){$scope.usingForDialogFlag||($scope.usingForDialogFlag=0),$scope.usingForDialogFlag=$scope.usingForDialogFlag+1}),$scope.actionCenter[$scope.groupName].showDialog=function(){$("#rlob_change_booking_calendar_dialog").modal({show:!0,backdrop:"static"}),$scope.currentUpdatingItem.bookingId=$scope.selectedBooking.BOOKING_ID,$scope.currentUpdatingItem.calId=$scope.selectedBooking.CAL_ID,$scope.currentUpdatingItem.appointmentDateTime=$scope.selectedBooking.APPOINTMENT_DATE,$scope.currentUpdatingItem.assId=$scope.selectedBooking.ASS_ID},$scope.$watch("selectedAppointmentCalendar",function(oldValue,newValue){if($scope.selectedAppointmentCalendar){var handlePeriodInfo={doctorId:$scope.selectedAppointmentCalendar.DOCTOR_ID,siteId:$scope.selectedAppointmentCalendar.SITE_ID,selectedAppFromTime:$scope.selectedAppointmentCalendar.FROM_TIME,rlTypeId:$scope.selectedAppointmentCalendar.RL_TYPE_ID,oldCalId:$scope.currentUpdatingItem.calId};rlobService.core.checkPeriodTimeToBooking(handlePeriodInfo).then(function(data){"success"==data.status?$scope.changeAppointmentCalendar($scope.selectedAppointmentCalendar.CAL_ID,$scope.selectedAppointmentCalendar.FROM_TIME,$scope.selectedAppointmentCalendar.DOCTOR_ID,$scope.selectedAppointmentCalendar.SITE_ID,$scope.selectedAppointmentCalendar.RL_TYPE_ID,$scope.selectedAppointmentCalendar.Specialties_id):rlobMsg.popup(rlobLang.rlobHeader,rlobConstant.msgPopupType.error,"Not enough time.")},function(err){rlobMsg.popup(rlobLang.rlobHeader,rlobConstant.msgPopupType.error,"Check fail.")})}}),$scope.changeAppointmentCalendar=function(newCalId,newAppointmentDateTime,doctorId,siteId,rlTypeId,specialityId){var actionInfo={oldCalId:$scope.selectedBooking.CAL_ID,newCalId:newCalId,patientId:$scope.selectedBooking.PATIENT_ID,doctorId:doctorId,siteId:siteId,appointmentDate:newAppointmentDateTime,rlTypeId:rlTypeId,specialtyId:specialityId,bookingId:$scope.currentUpdatingItem.bookingId};rlobService.core.changeBookingCalendar(actionInfo).then(function(data){if("success"==data.status){$("#rlob_change_booking_calendar_dialog").modal("hide"),rlobMsg.popup(rlobLang.rlobHeader,rlobConstant.msgPopupType.success,"Change appointment calendar success."),$scope.currentUpdatingItem.newAppoimentDateTime=newAppointmentDateTime,$scope.currentUpdatingItem.bookingIdChangeSuccess=$scope.currentUpdatingItem.bookingId,$scope.currentUpdatingItem.newCalId=newCalId;var mapUrl=null,siteAddress=$scope.selectedBooking.Site_addr,bookingId=$scope.selectedBooking.BOOKING_ID;GMaps.geocode({address:siteAddress,callback:function(results,status){"OK"==status?(latlng1=results[0].geometry.location,mapUrl=GMaps.staticMapURL({lat:latlng1.lat(),lng:latlng1.lng(),markers:[{lat:latlng1.lat(),lng:latlng1.lng()}]}),handle()):handle()}});var handle=function(){rlobService.core.rescheduleConfirmEmail(bookingId,siteAddress,mapUrl)};$scope.actionCenter[$scope.groupName].runWhenSuccess()}else rlobMsg.popup(rlobLang.rlobHeader,rlobConstant.msgPopupType.error,"Change fail.")},function(err){rlobMsg.popup(rlobLang.rlobHeader,rlobConstant.msgPopupType.error,"Change fail.")})}}}}).directive("rlobInlineMessage",function(rlobService){return{restrict:"E",transclude:!0,required:["^ngModel"],scope:{message:"@",type:"="},templateUrl:"modules/rediLegalOnlineBooking/directives/rlob_fade_in_out_template.html",controller:function($scope){angular.element(".rlob_fade_in_out").fadeIn(2e3)}}}).directive("showErrors",function($timeout,showErrorsConfig){var getShowSuccess,linkFn;return getShowSuccess=function(options){var showSuccess;return showSuccess=showErrorsConfig.showSuccess,options&&null!=options.showSuccess&&(showSuccess=options.showSuccess),showSuccess},linkFn=function(scope,el,attrs,formCtrl){var blurred,inputEl,inputName,inputNgEl,options,showSuccess,toggleClasses;if(blurred=!1,options=scope.$eval(attrs.showErrors),showSuccess=getShowSuccess(options),inputEl=el[0].querySelector("[name]"),inputNgEl=angular.element(inputEl),inputName=inputNgEl.attr("name"),!inputName)throw"show-errors element has no child input elements with a 'name' attribute";return inputNgEl.bind("blur",function(){return blurred=!0,toggleClasses(formCtrl[inputName].$invalid)}),scope.$watch(function(){return formCtrl[inputName]&&formCtrl[inputName].$invalid},function(invalid){return blurred?toggleClasses(invalid):void 0}),scope.$on("show-errors-check-validity",function(){return toggleClasses(formCtrl[inputName].$invalid)}),scope.$on("show-errors-reset",function(){return $timeout(function(){return el.removeClass("has-error"),el.removeClass("has-success"),blurred=!1},0,!1)}),toggleClasses=function(invalid){return el.toggleClass("has-error",invalid),showSuccess?el.toggleClass("has-success",!invalid):void 0}},{restrict:"A",require:"^form",compile:function(elem,attrs){if(!elem.hasClass("form-group"))throw"show-errors element does not have the 'form-group' class";return linkFn}}}).provider("showErrorsConfig",function(){var _showSuccess;_showSuccess=!1,this.showSuccess=function(showSuccess){return _showSuccess=showSuccess},this.$get=function(){return{showSuccess:_showSuccess}}}),angular.module("app.loggedIn.rlob.services",[]).service("appointmentCalendarService",function(){var selectedAppointmentCalendar={};this.setSelectedAppointmentCalendar=function(appointment){selectedAppointmentCalendar=appointment},this.getSelectedAppointmentCalendar=function(){return selectedAppointmentCalendar}}).service("bookingService",function(){var selectedInfo={},bookingInfo={},bookingList=[],registerInfo={},bookingInfoReuse=null,bookingBehalfInfo=null,currentBookingUpdating=null;this.getRegisterInfo=function(){return registerInfo},this.setRegisterInfo=function(b){registerInfo=JSON.parse(JSON.stringify(b))},this.getSelectedInfo=function(){return selectedInfo},this.getBookingInfo=function(){return bookingInfo},this.setBookingInfo=function(b){bookingInfo=JSON.parse(JSON.stringify(b))},this.getBookingList=function(){return bookingList},this.setBookingInfoReuse=function(booking){bookingInfoReuse=angular.copy(booking)},this.getBookingInfoResuse=function(){return bookingInfoReuse},this.setBookingBehalfInfo=function(b){bookingBehalfInfo=b},this.getBookingBehalfInfo=function(){return bookingBehalfInfo},this.setCurrentBookingUpdating=function(booking){currentBookingUpdating=booking},this.getCurrentBookingUpdating=function(){return currentBookingUpdating}}).factory("timeoutService",function(){var timeoutService={};return timeoutService}).factory("rlobService",function(Restangular,$http,$q){var rlobService={},api=Restangular.all("api");return rlobService.bookingInfoPaperless={id:null},rlobService.getRlTypeList=function(sourceType){var result=api.one("rlob/rl_types/list");return result.get({sourceType:sourceType})},rlobService.getBookingById=function(bookingId){var booking=api.all("rlob/rl_bookings/get-booking-by-id");return booking.post({bookingId:bookingId})},rlobService.changeBookingStatus=function(bookingId,status){var result=api.all("rlob/rl_bookings/lob-change-status");return result.post({bookingId:bookingId,status:status})},rlobService.changeDocumentStatus=function(bookingId,status){var result=api.all("rlob/rl_bookings/lob-change-documents-status");return result.post({bookingId:bookingId,status:status})},rlobService.getCountReportUpcommingBookings=function(bookingType,doctorId,filterInfo){var TotalBookings=api.all("rlob/rl_bookings/admin/report-1/count-report-upcomming-bookings");return TotalBookings.post({bookingType:bookingType,doctorId:doctorId,filterInfo:filterInfo})},rlobService.getItemsOfPageReportUpcommingBookings=function(info){var getItemsBookings=api.all("rlob/rl_bookings/admin/report-1/get-items-of-paging-report-upcomming-bookings");return getItemsBookings.post({currentPage:info.currentPage,itemsPerPage:info.itemsPerPage,bookingType:info.bookingType,doctorId:info.doctorId,filterInfo:info.filterInfo})},rlobService.getCountReportOutstandingBookings=function(bookingType,doctorId,filterInfo){var TotalBookings=api.all("rlob/rl_bookings/admin/report-2/count-report-outstanding-bookings");return TotalBookings.post({bookingType:bookingType,doctorId:doctorId,filterInfo:filterInfo})},rlobService.getItemsOfPageReportOutstandingBookings=function(info){var getItemsBookings=api.all("rlob/rl_bookings/admin/report-2/get-items-of-paging-report-outstanding-bookings");return getItemsBookings.post({currentPage:info.currentPage,itemsPerPage:info.itemsPerPage,bookingType:info.bookingType,doctorId:info.doctorId,filterInfo:info.filterInfo})},rlobService.getListBookingMessages=function(){var getListMessages=api.one("rlob/rl_messages/getListMessages");return getListMessages.get()},rlobService.addNewBookingMessages=function(messageContent){var addNewMessages=api.one("rlob/rl_messages/addNewMessages");return addNewMessages.get({messageContent:messageContent})},rlobService.changeIsenableMessage=function(ID){var changeMessages=api.one("rlob/rl_messages/changeIsenableMessages");return changeMessages.get({ID:ID})},rlobService.updateBookingMessage=function(ID,CONTENTS){var changeMessages=api.one("rlob/rl_messages/updateMessages");return changeMessages.get({ID:ID,CONTENTS:CONTENTS})},rlobService.getListDateAppoinmentCalendar=function(rlTypeId,specialtyName,doctorId,locationId,startDate,endDate,bookingType){var result=api.one("rlob/appointment-calendar/get-list-date-appointment-calendar");return result.get({RL_TYPE_ID:rlTypeId,Specialties_name:specialtyName,DOCTOR_ID:doctorId,SITE_ID:locationId,STARTDATE:startDate,ENDDATE:endDate,sourceType:bookingType})},rlobService.addNewFromAms6=function(info){var addAMS6=api.all("rlob/rl_form_ams6/addNewFormAms6");return addAMS6.post({info:info})},rlobService.updateFromAms6=function(info){var addAMS6=api.all("rlob/rl_form_ams6/rl_form_ams6_update");return addAMS6.post({info:info})},rlobService.getBookingDoctorCompany=function(BOOKING_ID){var getBooking=api.one("rlob/rl_form_ams6/get_booking_doctor_company");return getBooking.get({BOOKING_ID:BOOKING_ID})},rlobService.checkBookingInFormAms6=function(BOOKING_ID){var getMAS6=api.one("rlob/rl_form_ams6/select_Item_rl_form_ams6_bookingid");return getMAS6.get({BOOKING_ID:BOOKING_ID})},rlobService.addNewFromAms5=function(info){var addAMS5=api.all("rlob/rl_form_ams5/addNewFormAms5");return addAMS5.post({info:info})},rlobService.updateFromAms5=function(info){var addAMS5=api.all("rlob/rl_form_ams5/rl_form_ams5_update");return addAMS5.post({info:info})},rlobService.checkBookingInFormAms5=function(BOOKING_ID){var getMAS6=api.one("rlob/rl_form_ams5/select_Item_rl_form_ams5_bookingid");return getMAS6.get({BOOKING_ID:BOOKING_ID})},rlobService.addClaim=function(data){var Claim=api.all("restful/Claim");return Claim.post(data)},rlobService.addPatient=function(data){var Patient=api.all("restful/Patient");return Patient.post(data)},rlobService.addApptPatient=function(Patient_id,CAL_ID){var Patient=api.all("restful/ApptPatient");return Patient.post({Patient_id:Patient_id,CAL_ID:CAL_ID})},rlobService.checkApptPatient=function(Patient_id,CAL_ID){var Patient=api.one("restful/ApptPatient");return Patient.get({Patient_id:Patient_id,CAL_ID:CAL_ID})},rlobService.updatePatientIdBooking=function(BOOKING_ID,PATIENT_ID){var result=api.all("rlob/rl_bookings/update-patient-booking");return result.post({BOOKING_ID:BOOKING_ID,PATIENT_ID:PATIENT_ID})},rlobService.selectAppointment=function(CAL_ID){var Patient=api.one("restful/Appointment/"+CAL_ID);return Patient.get()},rlobService.cancelBooking=function(CAL_ID,PATIENT_ID){var result=api.all("rlob/rl_bookings/cancel-booking");return result.post({CAL_ID:CAL_ID,PATIENT_ID:PATIENT_ID})},rlobService.undoCancelBooking=function(CAL_ID,PATIENT_ID){var result=api.all("rlob/rl_bookings/undo-cancel-booking");return result.post({CAL_ID:CAL_ID,PATIENT_ID:PATIENT_ID})},rlobService.getlistRlType=function(){var result=api.one("rlob/rl_types/get-list-rltype");return result.get()},rlobService.updateRlTypes=function(TYPEID,TYPENAME,SOURCETYPE,ISENABLE){var result=api.all("rlob/rl_types/update-rltype");return result.post({TYPEID:TYPEID,TYPENAME:TYPENAME,SOURCETYPE:SOURCETYPE,ISENABLE:ISENABLE})},rlobService.insertRlTypes=function(TYPENAME,SOURCETYPE){var result=api.all("rlob/rl_types/insert-rltype");return result.post({TYPENAME:TYPENAME,SOURCETYPE:SOURCETYPE})},rlobService.getListSpecialties=function(){var result=api.one("rlob/cln_specialties/get-list-specialties");return result.get()},rlobService.updateSpecialties=function(SPECIALTIESID,SPECIALTIESNAME,SPECIALTIESTYPE,ISENABLE){var result=api.all("rlob/cln_specialties/update-specialties");return result.post({SPECIALTIESID:SPECIALTIESID,SPECIALTIESNAME:SPECIALTIESNAME,SPECIALTIESTYPE:SPECIALTIESTYPE,ISENABLE:ISENABLE})},rlobService.insertSpecialties=function(SPECIALTIESNAME,SPECIALTIESTYPE){var result=api.all("rlob/cln_specialties/edit-specialties");return result.post({SPECIALTIESNAME:SPECIALTIESNAME,SPECIALTIESTYPE:SPECIALTIESTYPE})},rlobService.insertEmergency=function(info){var result=api.all("rlob/sponsor/insert-emergency");return result.post({info:info})},rlobService.insertNonEmergency=function(info){var result=api.all("rlob/sponsor/insert-nonemergency");return result.post({info:info})},rlobService.listMailUserOnlineBooking=function(){var result=api.one("rlob/rl_bookings/admin/list-mail-user-online-booking");return result.get()},rlobService.listDoctorReport=function(){var result=api.one("rlob/rl_bookings/admin/report/list-doctor-report");return result.get()},rlobService.listLocationReport=function(){var result=api.one("rlob/rl_bookings/admin/report/list-location-report");return result.get()},rlobService.ListDoctorMobile=function(date){var result=api.all("rlob/doctors/get-doctors-for-source-type-mobile");return result.post({date:date})},rlobService.ListLocationMobile=function(date){var result=api.all("rlob/redimedsites/list-mobile");return result.post({date:date})},rlobService.getPassBookingNotChangeStatus=function(bookingType,doctorId){var result=api.one("rlob/rl_bookings/admin/get-pass-booking-not-change-status");return result.get({bookingType:bookingType,doctorId:doctorId})},rlobService.getListUpcommingBookingWaitingPaperwork=function(bookingType,doctorId){var result=api.one("rlob/rl_bookings/admin/get-list-upcomming-booking-waiting-paperwork");return result.get({bookingType:bookingType,doctorId:doctorId})},rlobService.getListBookingOutstandingNotification=function(bookingType,doctorId){var result=api.one("rlob/rl_bookings/admin/list-booking-outstanding-notification");return result.get({bookingType:bookingType,doctorId:doctorId})},rlobService.getCountReportArchiveBooking=function(bookingType,doctorId,searchKeys){var result=api.all("rlob/rl_bookings/admin/report-3/get-count-archive-booking");return result.post({bookingType:bookingType,doctorId:doctorId,searchKeys:searchKeys})},rlobService.getItemsOfPageReportArchiveBooking=function(info){var result=api.all("rlob/rl_bookings/admin/report-3/get-items-of-page-archive-booking");return result.post({bookingType:info.bookingType,doctorId:info.doctorId,pageIndex:info.pageIndex,itemsPerPage:info.itemsPerPage,searchKeys:info.searchKeys})},rlobService.getDocumentStatusSummary=function(fromDate,toDate){var result=api.one("rlob/rl_bookings/admin/get-document-status-summary");return result.get({fromDate:fromDate,toDate:toDate})},rlobService.add_notification=function(assId,refId,sourceName,bellType,notificationType,content){var deferred=$q.defer(),promise=deferred.promise;promise.then(function(data){var msg="";notificationType==rlobConstant.notificationType.letter?msg="["+rlobConstant.bookingType[sourceName].display+"] - "+data.Rl_TYPE_NAME+" - "+data.WRK_SURNAME+" - "+(sourceName==rlobConstant.bookingType.REDiLEGAL.name?data.CLAIM_NO:"")+(sourceName==rlobConstant.bookingType.Vaccination.name?data.EMPLOYEE_NUMBER:"")+" - "+moment(data.APPOINTMENT_DATE).format("HH:mm DD/MM/YYYY"):notificationType==rlobConstant.notificationType.bell&&(msg=moment(data.APPOINTMENT_DATE).format("HH:mm DD/MM/YYYY")+" - "+data.Rl_TYPE_NAME+" - "+data.WRK_SURNAME+" - "+data.WRK_OTHERNAMES+" - "+data.CLAIM_NO+" - "+bellType+(void 0!=content&&null!=content&&""!=content?":"+content:"")),$http({method:"POST",url:"/api/rlob/sys_user_notifications/add-notification",data:{assId:assId,refId:refId,sourceName:sourceName,type:notificationType,msg:msg}}).success(function(data){"success"==data.status}).error(function(data){})["finally"](function(){})},function(reason){}),$http({method:"POST",url:"/api/rlob/rl_bookings/get-booking-by-id",data:{bookingId:refId}}).success(function(data){"success"==data.status?deferred.resolve(data.data):alert("data not exist!")}).error(function(data){console.log("error")})["finally"](function(){})},rlobService.showNotificationPopup=function(styleClass,msg,notifyColor){$(styleClass).notify({message:{text:msg},type:notifyColor}).show()},rlobService.checkNotificationExist=function(bookingId,bookingType,appearance){var result=api.one("rlob/sys_user_notifications/check-notification-exist");return result.get({bookingType:bookingType,bookingId:bookingId,appearance:appearance})},rlobService.recreateNotification=function(bookingId,appearance){var result=api.one("rlob/sys_user_notifications/recreate-notification");return result.get({bookingId:bookingId,appearance:appearance})},rlobService.insertNewUser=function(newUser){var result=api.all("rlob/register/insert-new-user");return result.post({newUser:newUser})},rlobService.getUsersList=function(searchInfo){var result=api.all("rlob/register/list-redilegal-users");return result.post({searchInfo:searchInfo})},rlobService.updateRedilegalUserStatus=function(redilegalUserName,status){var result=api.all("rlob/register/update-redilegal-user-status");return result.post({redilegalUserName:redilegalUserName,status:status})},rlobService.updateUserInfo=function(updateInfo){var result=api.all("rlob/register/update-user-info");return result.post({updateInfo:updateInfo})},rlobService.getUpcommingBookingHaveNotDocumentToNotificationCustomer=function(bookingType){var result=api.one("rlob/rl_bookings/get-upcomming-booking-have-not-document-to-notification-customer");return result.get({bookingType:bookingType})},rlobService.getStates=function(nation){var result=api.one("rlob/register/get-states");return result.get({nation:nation})},rlobService.getDoctorInfoByUserId=function(userId){var result=api.one("rlob/doctors/get-doctors-info-by-userid");return result.get({userId:userId})},rlobService.core={getListAppointmentAfterTime:function(doctorId,siteId,selectedAppFromTime){var result=api.all("rlob/core/get-list-appointment-after-time");return result.post({doctorId:doctorId,siteId:siteId,selectedAppFromTime:selectedAppFromTime})},handlePeriodTimeAppointmentCalendar:function(doctorId,siteId,selectedAppFromTime,rlTypeId){var result=api.all("rlob/core/handle-periodtime-appointment-calendar");return result.post({doctorId:doctorId,siteId:siteId,selectedAppFromTime:selectedAppFromTime,rlTypeId:rlTypeId})},saveBookingInfo:function(bookingInfo){var result=api.all("rlob/core/save-booking-info");return result.post({bookingInfo:bookingInfo})},checkPeriodTimeToBooking:function(handlePeriodInfo){var result=api.all("rlob/core/check-period-time-to-booking");return result.post({handlePeriodInfo:handlePeriodInfo})},changeBookingCalendar:function(actionInfo){var result=api.all("rlob/core/handle-change-booking-calendar");return result.post({actionInfo:actionInfo})},rescheduleConfirmEmail:function(bookingId,siteAddress,mapUrl){var result=api.all("rlob/core/reschedule-confirm-email");return result.post({bookingId:bookingId,siteAddress:siteAddress,mapUrl:mapUrl})}},rlobService.rlobBookingFile={setListResultFiles:function(listResult){var result=api.all("rlob/core/set-list-result-files");return result.post({listResult:listResult})},unselectAllFileResult:function(bookingId){var result=api.all("rlob/core/unselect-all-file-result");return result.post({bookingId:bookingId})}},rlobService}),angular.module("app.loggedIn.rlob",["app.loggedIn.rlob.controller","app.loggedIn.rlob.booking.controller","app.loggedIn.rlob.list.controller","app.loggedIn.rlob.patientDetail.controller","app.loggedIn.rlob.adminBookingList.controller","app.loggedIn.rlob.bookingDetail.controller","app.loggedIn.rlob.services","app.loggedIn.rlob.directive","app.loggedIn.rlob.adminBookingReport.controller","app.loggedIn.rlob.adminBookingReport.type3.controller","app.loggedIn.rlob.adminBookingReport.type1.controller","app.loggedIn.rlob.adminBookingReport.type2.controller","app.loggedIn.rlob.adminDocumentStatusSummary.controller","app.loggedIn.rlob.adminBookingMessages.controller","app.loggedIn.rlob.paperless.controller","app.loggedIn.rlob.paperless.ams6.controller","app.loggedIn.rlob.paperless.ams5.controller","app.loggedIn.rlob.rltype.controller","app.loggedIn.rlob.specialties.controller","app.loggedIn.rlob.redilegalUsersListController.controller","app.loggedIn.rlob.bookingBehalf.controller","app.loggedIn.rlob.SpecialistsProfiles.controller"]).config(function($stateProvider){$stateProvider.state("loggedIn.rlob",{url:"/rlob",templateUrl:"modules/rediLegalOnlineBooking/views/rlob.html",controller:"rlobController"}).state("loggedIn.rlob.contactus",{url:"/contactus",templateUrl:"modules/rediLegalOnlineBooking/views/contactus.html"}).state("loggedIn.rlob.rlob_booking",{url:"/booking",templateUrl:"modules/rediLegalOnlineBooking/views/booking.html",controller:"rlob_bookingController"}).state("loggedIn.rlob.rlob_patient_detail",{url:"/booking/patient-detail",templateUrl:"/modules/rediLegalOnlineBooking/views/patient-detail.html",controller:"rlob_patientDetailController"}).state("loggedIn.rlob.rlob_admin_booking_list",{url:"/booking/admin-booking-list",templateUrl:"/modules/rediLegalOnlineBooking/views/admin-booking-list.html",controller:"rlob_admin_bookingListController"}).state("loggedIn.rlob.rlob_booking_list",{url:"/booking/list",templateUrl:"/modules/rediLegalOnlineBooking/views/booking-list.html",controller:"rlob_bookingListController"}).state("loggedIn.rlob.rlob_booking_detail",{url:"/booking/booking-detail/:bookingId",templateUrl:"/modules/rediLegalOnlineBooking/views/booking-detail.html",controller:"rlob_bookingDetailController"}).state("loggedIn.rlob.rlob_booking_report",{url:"/booking/report",templateUrl:"/modules/rediLegalOnlineBooking/views/admin-booking-report.html",controller:"rlob_admin_bookingReportController"}).state("loggedIn.rlob.rlob_booking_report.type3",{url:"/type3",templateUrl:"/modules/rediLegalOnlineBooking/views/admin-booking-report-type3.html",controller:"rlob_admin_bookingReport_type3Controller"}).state("loggedIn.rlob.rlob_booking_report.type1",{url:"/type1",templateUrl:"/modules/rediLegalOnlineBooking/views/admin-booking-report-type1.html",
controller:"rlob_admin_bookingReport_type1Controller"}).state("loggedIn.rlob.rlob_booking_report.type2",{url:"/type2",templateUrl:"/modules/rediLegalOnlineBooking/views/admin-booking-report-type2.html",controller:"rlob_admin_bookingReport_type2Controller"}).state("loggedIn.rlob.rlob_document_status_summary",{url:"/booking/document-status-summary",templateUrl:"/modules/rediLegalOnlineBooking/views/admin-document-status-summary.html",controller:"rlob_admin_documentStatusSummaryController"}).state("loggedIn.rlob.rlob_booking_messages",{url:"/booking/messages",templateUrl:"/modules/rediLegalOnlineBooking/views/admin-booking-messages.html",controller:"rlob_admin_bookingMessagesController"}).state("loggedIn.rlob.paperless",{url:"/booking/paperless",templateUrl:"/modules/rediLegalOnlineBooking/views/paperless.html",controller:"rlob_paperlessController"}).state("loggedIn.rlob.paperless.ams6",{url:"/ams6",templateUrl:"/modules/rediLegalOnlineBooking/views/paperless/ams6.html",controller:"rlob_paperless_ams6Controller"}).state("loggedIn.rlob.paperless.ams5",{url:"/ams5",templateUrl:"/modules/rediLegalOnlineBooking/views/paperless/ams5.html",controller:"rlob_paperless_ams5Controller"}).state("loggedIn.rlob.rltype",{url:"/type",templateUrl:"/modules/rediLegalOnlineBooking/views/rltype.html",controller:"rlob_rltypeController"}).state("loggedIn.rlob.specialties",{url:"/specialties",templateUrl:"/modules/rediLegalOnlineBooking/views/specialties.html",controller:"rlob_specialtiesController"}).state("loggedIn.rlob.rlob_admin_redilegalUsersList",{url:"/users-list",templateUrl:"/modules/rediLegalOnlineBooking/views/redilegalUsersList.html",controller:"rlob_admin_redilegalUsersListController"}).state("loggedIn.rlob.rlob_admin_bookingBehalf",{url:"/booking-behalf",templateUrl:"/modules/rediLegalOnlineBooking/views/bookingBehalf.html",controller:"rlob_admin_bookingBehalfController"}).state("loggedIn.rlob.rlob_specialists_profiles",{url:"/specialists-profiles",templateUrl:"/modules/rediLegalOnlineBooking/views/specialists-profiles.html",controller:"rlob_specialists_profilesController"})}),angular.module("app.loggedIn.rlob.adminBookingReport.controller",[]).controller("rlob_admin_bookingReportController",function($scope,$http,$cookieStore,$q,$state,rlobService,bookingService){$scope.currentReport={},$scope.status="Confirmed",$scope.loginInfo=$cookieStore.get("userInfo"),$scope.documentStatusDisplay=rlobConstant.documentStatusDisplay,$scope.actionCenter={},$scope.actionCenter.changeBookingCalendar={},$scope.actionCenter.adminReport={},$scope.actionCenter.scheduleList=$scope.scheduleList,$scope.actionCenter.adminLocalNotification={},$scope.reportType={report1:"report1",report2:"report2",report3:"report3"},$scope.gotoReport=function(reportType){switch(reportType){case $scope.reportType.report1:$state.go("loggedIn.rlob.rlob_booking_report.type1");break;case $scope.reportType.report2:$state.go("loggedIn.rlob.rlob_booking_report.type2");break;case $scope.reportType.report3:$state.go("loggedIn.rlob.rlob_booking_report.type3")}},$scope.selectedBooking=null,$scope.isAdminGetFiles=!0,$scope.accordionStatus={status1:!0},$scope.isAdminUpload=!0,$scope.removeSelectedBooking=function(){$scope.selectedBooking=void 0},$scope.setSelectedBooking=function(bookingId){rlobService.getBookingById(bookingId).then(function(data){"success"==data.status?$scope.selectedBooking=data.data:rlobMsg.popup(rlobLang.rlobHeader,rlobConstant.msgPopupType.error,"Cannot get booking info!")},function(error){rlobMsg.popup(rlobLang.rlobHeader,rlobConstant.msgPopupType.error,"Cannot get booking info!")})},$scope.documentStatusChangedFlag=0,$scope.bookingStatusChangedFlag=0,$scope.copyBooking=function(){var bookingBehalfInfo={ASS_SURNAME:$scope.selectedBooking.ASS_SURNAME,ASS_OTHERNAMES:$scope.selectedBooking.ASS_OTHERNAMES,ASS_CONTACT_NO:$scope.selectedBooking.ASS_CONTACT_NO,ASS_EMAIL:$scope.selectedBooking.ASS_EMAIL,ASS_ID:$scope.selectedBooking.ASS_ID,COMPANY_ID:$scope.selectedBooking.COMPANY_ID};bookingService.setBookingBehalfInfo(bookingBehalfInfo),bookingService.setBookingInfoReuse($scope.selectedBooking),rlobMsg.popup(rlobLang.rlobHeader,rlobConstant.msgPopupType.success,"Please choose appointment calendar!"),$state.go("loggedIn.rlob.rlob_booking")},$scope.currentUpdatingItem={bookingId:null,calId:null,appointmentDateTime:null,newAppoimentDateTime:null,bookingIdChangeSuccess:null,assId:null,newCalId:null},$scope.actionCenter.changeBookingCalendar.runWhenSuccess=function(){switch($scope.currentReport.name){case $scope.reportType.report1:$scope.actionCenter.adminReport.reloadReport1();break;case $scope.reportType.report2:$scope.actionCenter.adminReport.reloadReport2();break;case $scope.reportType.report3:$scope.actionCenter.adminReport.reloadReport3()}},$scope.actionCenter.adminLocalNotification.runWhenChanged=function(){switch($scope.currentReport.name){case $scope.reportType.report1:$scope.actionCenter.adminReport.reloadReport1();break;case $scope.reportType.report2:$scope.actionCenter.adminReport.reloadReport2();break;case $scope.reportType.report3:$scope.actionCenter.adminReport.reloadReport3()}}}),angular.module("app.loggedIn.rlob.adminBookingMessages.controller",[]).controller("rlob_admin_bookingMessagesController",function($scope,rlobService,toastr){$scope.editMessageContent="",$scope.setListMessagess=function(){rlobService.getListBookingMessages().then(function(data){"success"==data.status&&($scope.ListBookingMessages=data.data)})},$scope.setListMessagess(),$scope.showModalAddNew=function(){$("#addNewModal").modal("show")},$scope.submitAddNewMessage=function(){rlobService.addNewBookingMessages($scope.messageContent).then(function(data){"success"==data.status?($scope.setListMessagess(),$scope.messageContent="",$("#addNewModal").modal("hide"),toastr.success("Add Message Successfully!","Success")):($("#addNewModal").modal("hide"),toastr.error("Add Message Failed!","Error"))})},$scope.changeIsenableBookingMessage=function(ID){rlobService.changeIsenableMessage(ID).then(function(data){"success"==data.status?($scope.setListMessagess(),toastr.success("Delete Successfully!","Success")):toastr.error("Delete Failed!","Error")})},$scope.editBookingMessage=function(ID,CONTENTS){$scope.editMessageID=ID,$scope.editMessageContent=CONTENTS,$("#editModal").modal("show")},$scope.submitEditMessage=function(){rlobService.updateBookingMessage($scope.editMessageID,$scope.editMessageContent).then(function(data){"success"==data.status?($scope.setListMessagess(),$("#editModal").modal("hide"),toastr.success("Edit Successfully!","Success")):($("#editModal").modal("hide"),toastr.error("Edit Failed!","Error"))})}}),angular.module("app.loggedIn.rlob.adminBookingReport.type3.controller",[]).controller("rlob_admin_bookingReport_type3Controller",function($scope,$http,$cookieStore,$q,rlobService){$scope.removeSelectedBooking(),$scope.currentReport.name="report3",$scope.status="Confirmed",$scope.bookingStatus=rlobConstant.bookingStatus,$scope.documentStatus=rlobConstant.documentStatusFilter,$scope.rlTypeList=[],rlobService.getRlTypeList($scope.bookingType).then(function(data){$scope.rlTypeList=data}),$scope.doctorList=[],rlobService.listDoctorReport().then(function(data){"success"==data.status&&($scope.doctorList=data.data)}),$scope.locationList=[],rlobService.listLocationReport().then(function(data){"success"==data.status&&($scope.locationList=data.data)}),$scope.listArchiveBookings=[],$scope.getReportArchiveBooking=function(doctorId){rlobService.getReportArchiveBooking($scope.bookingType,doctorId).then(function(data){"success"==data.status&&($scope.listArchiveBookings=data.data)},function(error){})},$scope.currentPage=1,$scope.searchKeys={doctor:"",location:"",surname:"",rltype:"",fromAppointmentDate:"",toAppointmentDate:"",bookingStatus:"",documentStatus:""},$scope.initPagingReportArchiveBooking=function(doctorId){$scope.removeSelectedBooking(),$scope.searchKeys.rltype=$scope.rlTypeSelected&&$scope.rlTypeSelected.Rl_TYPE_NAME?$scope.rlTypeSelected.Rl_TYPE_NAME:"",$scope.searchKeys.location=$scope.locationSelected&&$scope.locationSelected.Site_name?$scope.locationSelected.Site_name:"",$scope.searchKeys.doctor=$scope.doctorSelected&&$scope.doctorSelected.NAME?$scope.doctorSelected.NAME:"",rlobService.getCountReportArchiveBooking($scope.bookingType,doctorId,$scope.searchKeys).then(function(data){return $scope.totalItems=data.data.count_archive_bookings,$scope.itemsPerPage=10,$scope.maxSize=10,$scope.currentPage=1,{bookingType:$scope.bookingType,doctorId:doctorId,pageIndex:$scope.currentPage,itemsPerPage:$scope.itemsPerPage,searchKeys:$scope.searchKeys}}).then(rlobService.getItemsOfPageReportArchiveBooking).then(function(data){$scope.listArchiveBookings="success"==data.status?data.data:""})},$scope.pagingHandlerArchiveBooking=function(){$scope.removeSelectedBooking();var info={bookingType:$scope.bookingType,doctorId:$scope.doctorId,pageIndex:$scope.currentPage,itemsPerPage:$scope.itemsPerPage,searchKeys:$scope.searchKeys};rlobService.getCountReportArchiveBooking(info.bookingType,info.doctorId,info.searchKeys).then(function(data){return $scope.totalItems=data.data.count_archive_bookings,console.log($scope.totalItems),info}).then(rlobService.getItemsOfPageReportArchiveBooking).then(function(data){"success"==data.status&&($scope.listArchiveBookings=data.data)})},$scope.$watch("[searchKeys.fromAppointmentDate,searchKeys.toAppointmentDate]",function(newValue,oldValue){$scope.initPagingReportArchiveBooking($scope.doctorId)},!0),$scope.userInfo=$cookieStore.get("userInfo"),$scope.doctorInfo=null,$scope.doctorId=null,$scope.getDoctorInfoByUserId=function(){var deferred=$q.defer();return rlobService.getDoctorInfoByUserId($scope.userInfo.id).then(function(data){"success"==data.status&&($scope.doctorInfo=data.data,$scope.doctorId=$scope.doctorInfo?$scope.doctorInfo.doctor_id:null)},function(err){console.log("Loi lay thong tin doctor")}).then(function(){deferred.resolve()}),deferred.promise},$scope.getDoctorInfoByUserId().then(function(){$scope.initPagingReportArchiveBooking($scope.doctorId)}),$scope.actionCenter.adminReport.reloadReport3=function(){$scope.initPagingReportArchiveBooking()}}),angular.module("app.loggedIn.rlob.adminBookingReport.type1.controller",[]).controller("rlob_admin_bookingReport_type1Controller",function($scope,$http,$cookieStore,$q,rlobService){$scope.removeSelectedBooking(),$scope.currentReport.name="report1",$scope.status="Confirmed",$scope.bookingStatus=rlobConstant.bookingStatus,$scope.documentStatus=rlobConstant.documentStatusFilter,$scope.rlTypeList=[],rlobService.getRlTypeList($scope.bookingType).then(function(data){$scope.rlTypeList=data}),$scope.doctorList=[],rlobService.listDoctorReport().then(function(data){"success"==data.status&&($scope.doctorList=data.data)}),$scope.locationList=[],rlobService.listLocationReport().then(function(data){"success"==data.status&&($scope.locationList=data.data)}),$scope.filterInfo={Doctor:"",Surname:"",Type:"",Location:"",FromAppointmentDate:"",ToAppointmentDate:"",bookingStatus:"",documentStatus:""},$scope.initPagingReportUpcommingBooking=function(){$scope.removeSelectedBooking(),$scope.filterInfo.Type=$scope.rlTypeSelected&&$scope.rlTypeSelected.Rl_TYPE_NAME?$scope.rlTypeSelected.Rl_TYPE_NAME:"",$scope.filterInfo.Location=$scope.locationSelected&&$scope.locationSelected.Site_name?$scope.locationSelected.Site_name:"",$scope.filterInfo.Doctor=$scope.doctorSelected&&$scope.doctorSelected.NAME?$scope.doctorSelected.NAME:"",rlobService.getCountReportUpcommingBookings($scope.bookingType,$scope.doctorId,$scope.filterInfo).then(function(data){return $scope.totalItemsReport1=data.data.count_upcomming_bookings,$scope.itemsPerPageReport1=10,$scope.currentPageReport1=1,$scope.maxSizeReport1=10,{bookingType:$scope.bookingType,doctorId:$scope.doctorId,currentPage:$scope.currentPageReport1,itemsPerPage:$scope.itemsPerPageReport1,filterInfo:$scope.filterInfo}}).then(rlobService.getItemsOfPageReportUpcommingBookings).then(function(data){if("success"==data.status){for(var i=0;i<data.data.length;i++)data.data[i].DOCUMENT_STATUS==$scope.documentStatus.checked.value?data.data[i].style_class="info":data.data[i].DOCUMENT_STATUS==$scope.documentStatus.noDocuments.value&&(data.data[i].style_class="danger");$scope.listUpcommingBookings=data.data}else $scope.listUpcommingBookings=""})},$scope.pagingHandlerUpcommingBooking=function(){var info={bookingType:$scope.bookingType,doctorId:$scope.doctorId,currentPage:$scope.currentPageReport1,itemsPerPage:$scope.itemsPerPageReport1,filterInfo:$scope.filterInfo};rlobService.getCountReportUpcommingBookings(info.bookingType,info.doctorId,$scope.filterInfo).then(function(data){return $scope.totalItemsReport1=data.data.count_upcomming_bookings,info}).then(rlobService.getItemsOfPageReportUpcommingBookings).then(function(data){if("success"==data.status){for(var i=0;i<data.data.length;i++)data.data[i].DOCUMENT_STATUS==$scope.documentStatus.checked.value?data.data[i].style_class="info":data.data[i].DOCUMENT_STATUS==$scope.documentStatus.noDocuments.value&&(data.data[i].style_class="danger");$scope.listUpcommingBookings=data.data}})},$scope.$watch("[filterInfo.FromAppointmentDate,filterInfo.ToAppointmentDate]",function(newValue,oldValue){$scope.initPagingReportUpcommingBooking()},!0),$scope.userInfo=$cookieStore.get("userInfo"),$scope.doctorInfo=null,$scope.doctorId=null,$scope.getDoctorInfoByUserId=function(){var deferred=$q.defer();return rlobService.getDoctorInfoByUserId($scope.userInfo.id).then(function(data){"success"==data.status&&($scope.doctorInfo=data.data,$scope.doctorId=$scope.doctorInfo?$scope.doctorInfo.doctor_id:null)},function(err){console.log("Loi lay thong tin doctor")}).then(function(){deferred.resolve()}),deferred.promise},$scope.getDoctorInfoByUserId().then(function(){$scope.initPagingReportUpcommingBooking()}),$scope.actionCenter.adminReport.reloadReport1=function(){$scope.initPagingReportUpcommingBooking()}}),angular.module("app.loggedIn.rlob.adminBookingReport.type2.controller",[]).controller("rlob_admin_bookingReport_type2Controller",function($scope,$http,$cookieStore,$q,rlobService){$scope.removeSelectedBooking(),$scope.currentReport.name="report2",$scope.status="Confirmed",$scope.bookingStatus=rlobConstant.bookingStatus,$scope.documentStatus=rlobConstant.documentStatusFilter,$scope.rlTypeList=[],rlobService.getRlTypeList($scope.bookingType).then(function(data){$scope.rlTypeList=data}),$scope.doctorList=[],rlobService.listDoctorReport().then(function(data){"success"==data.status&&($scope.doctorList=data.data)}),$scope.locationList=[],rlobService.listLocationReport().then(function(data){"success"==data.status&&($scope.locationList=data.data)}),$scope.filterInfo1={Surname:"",Location:"",Type:"",Doctor:"",employeeNumber:"",FromAppointmentDate:"",ToAppointmentDate:"",bookingStatus:"",documentStatus:""},$scope.initPagingReportOutstandingBooking=function(){$scope.removeSelectedBooking(),$scope.filterInfo1.Type=$scope.rlTypeSelected&&$scope.rlTypeSelected.Rl_TYPE_NAME?$scope.rlTypeSelected.Rl_TYPE_NAME:"",$scope.filterInfo1.Location=$scope.locationSelected&&$scope.locationSelected.Site_name?$scope.locationSelected.Site_name:"",$scope.filterInfo1.Doctor=$scope.doctorSelected&&$scope.doctorSelected.NAME?$scope.doctorSelected.NAME:"",rlobService.getCountReportOutstandingBookings($scope.bookingType,$scope.doctorId,$scope.filterInfo1).then(function(data){return $scope.totalItemsReport2=data.data.count_outstanding_bookings,$scope.itemsPerPageReport2=10,$scope.maxSizeReport2=10,$scope.currentPageReport2=1,{bookingType:$scope.bookingType,doctorId:$scope.doctorId,currentPage:$scope.currentPageReport2,itemsPerPage:$scope.itemsPerPageReport2,filterInfo:$scope.filterInfo1}}).then(rlobService.getItemsOfPageReportOutstandingBookings).then(function(data){$scope.listOutstandingBookings="success"==data.status?data.data:""})},$scope.pagingHandlerOutstandingBooking=function(){var info={bookingType:$scope.bookingType,doctorId:$scope.doctorId,currentPage:$scope.currentPageReport2,itemsPerPage:$scope.itemsPerPageReport2,filterInfo:$scope.filterInfo1};rlobService.getCountReportOutstandingBookings(info.bookingType,info.doctorId,$scope.filterInfo1).then(function(data){return $scope.totalItemsReport2=data.data.count_outstanding_bookings,info}).then(rlobService.getItemsOfPageReportOutstandingBookings).then(function(data){"success"==data.status&&($scope.listOutstandingBookings=data.data)})},$scope.$watch("[filterInfo1.FromAppointmentDate,filterInfo1.ToAppointmentDate]",function(newValue,oldValue){$scope.initPagingReportOutstandingBooking()},!0),$scope.userInfo=$cookieStore.get("userInfo"),$scope.doctorInfo=null,$scope.doctorId=null,$scope.getDoctorInfoByUserId=function(){var deferred=$q.defer();return rlobService.getDoctorInfoByUserId($scope.userInfo.id).then(function(data){"success"==data.status&&($scope.doctorInfo=data.data,$scope.doctorId=$scope.doctorInfo?$scope.doctorInfo.doctor_id:null)},function(err){console.log("Loi lay thong tin doctor")}).then(function(){deferred.resolve()}),deferred.promise},$scope.getDoctorInfoByUserId().then(function(){$scope.initPagingReportOutstandingBooking()}),$scope.actionCenter.adminReport.reloadReport2=function(){$scope.initPagingReportOutstandingBooking()}}),angular.module("app.loggedIn.rlob.patientDetail.controller",[]).controller("rlob_patientDetailController",function($scope,$state,$http,$cookieStore,bookingService,appointmentCalendarService,FileUploader,Mailto,$location,$window,rlobService,PatientModel,ClaimModel){function codeAddress(){var address=selectedInfo.locationSelected.Site_addr;geocoder.geocode({address:address},function(results,status){if(status==google.maps.GeocoderStatus.OK){map.setCenter(results[0].geometry.location);{new google.maps.Marker({map:map,position:results[0].geometry.location})}}else alert("Geocode was not successful for the following reason: "+status)})}if($scope.selectedAppointmentCalendar=appointmentCalendarService.getSelectedAppointmentCalendar(),void 0===$scope.selectedAppointmentCalendar.CAL_ID||null===$scope.selectedAppointmentCalendar.CAL_ID||""===$scope.selectedAppointmentCalendar.CAL_ID)return void $state.go("loggedIn.home");var bookingInfoReuse=bookingService.getBookingInfoResuse();$scope.isCopyBooking=0,bookingInfoReuse?($scope.isCopyBooking=1,$scope.newBooking={CLAIM_NO:bookingInfoReuse.CLAIM_NO,WRK_SURNAME:bookingInfoReuse.WRK_SURNAME,WRK_OTHERNAMES:bookingInfoReuse.WRK_OTHERNAMES,WRK_EMAIL:bookingInfoReuse.WRK_EMAIL,WRK_CONTACT_NO:bookingInfoReuse.WRK_CONTACT_NO,DESC_INJURY:bookingInfoReuse.DESC_INJURY,COMPANY_ID:bookingInfoReuse.COMPANY_ID},$scope.WRK_DOB_TEMP=new Date(bookingInfoReuse.WRK_DOB),$scope.WRK_DATE_OF_INJURY_TEMP=new Date(bookingInfoReuse.WRK_DATE_OF_INJURY),bookingService.setBookingInfoReuse(null)):$scope.newBooking={},$scope.selectedAppointmentCalendar=appointmentCalendarService.getSelectedAppointmentCalendar();angular.copy(PatientModel),angular.copy(ClaimModel);$scope.loginInfo=$cookieStore.get("userInfo");var bookingBehalfInfo=angular.copy(bookingService.getBookingBehalfInfo());null!=bookingBehalfInfo?($scope.newBooking.ASS_ID=bookingBehalfInfo.ASS_ID,$scope.newBooking.ASS_SURNAME=bookingBehalfInfo.ASS_SURNAME,$scope.newBooking.ASS_OTHERNAMES=bookingBehalfInfo.ASS_OTHERNAMES,$scope.newBooking.ASS_CONTACT_NO=bookingBehalfInfo.ASS_CONTACT_NO,$scope.newBooking.ASS_EMAIL=bookingBehalfInfo.ASS_EMAIL,$scope.newBooking.COMPANY_ID=bookingBehalfInfo.COMPANY_ID,bookingService.setBookingBehalfInfo(null)):($scope.newBooking.ASS_ID=$scope.loginInfo.id,$scope.newBooking.ASS_SURNAME=$scope.loginInfo.Booking_Person,$scope.newBooking.ASS_OTHERNAMES=$scope.loginInfo.Booking_Person,$scope.newBooking.ASS_CONTACT_NO=$scope.loginInfo.Contact_number,$scope.newBooking.ASS_EMAIL=$scope.loginInfo.Contact_email),$scope.companyId=null,$scope.companyId=null!==$scope.newBooking.COMPANY_ID&&void 0!==$scope.newBooking.COMPANY_ID?$scope.newBooking.COMPANY_ID:$scope.loginInfo.company_id,$http({method:"POST",url:"/api/company/info",data:{comId:$scope.companyId}}).success(function(data){$scope.companyInfo=data}).error(function(data){$scope.companyInfo={id:null,Company_name:"[Name of Company]"}})["finally"](function(){}),$scope.disabled=function(date,mode){return"day"===mode&&(0===date.getDay()||6===date.getDay())},$scope.toggleMin=function(){$scope.minDate=$scope.minDate?null:new Date},$scope.toggleMin(),$scope.open=function($event){$event.preventDefault(),$event.stopPropagation(),$scope.openedDateOfInjury=!1,$scope.opened=!0},$scope.openDateOfInjury=function($event){$event.preventDefault(),$event.stopPropagation(),$scope.opened=!1,$scope.openedDateOfInjury=!0},$scope.dateOptions={formatYear:"yy",startingDay:1},$scope.formats=["d/M/yyyy","dd/MM/yyyy","dd/MMMM/yyyy","yyyy/MM/dd","dd.MM.yyyy","shortDate"],$scope.format=$scope.formats[0],$scope.bookingSuccess=!1,$scope.isSaving=!1;var selectedInfo=bookingService.getSelectedInfo();$scope.booking_detail={};var locationId=$scope.selectedAppointmentCalendar.SITE_ID;$http({method:"POST",url:"/api/redimedsite/info",data:{id:locationId}}).success(function(data){selectedInfo.locationSelected=data,$scope.booking_detail.address=selectedInfo.locationSelected.Site_addr,codeAddress()}).error(function(data){alert("insert fail")})["finally"](function(){});var doctorid=$scope.selectedAppointmentCalendar.DOCTOR_ID;$http({method:"GET",url:"/api/rlob/doctors/get-doctors-by-id",params:{doctorId:doctorid}}).success(function(data){"success"==data.status&&(selectedInfo.doctorSelected=data.data,$scope.booking_detail.doctor_name=selectedInfo.doctorSelected.NAME)}).error(function(data){alert("insert fail")})["finally"](function(){});var cal_id=$scope.selectedAppointmentCalendar.CAL_ID;$http({method:"GET",url:"/api/rlob/appointment-calendar/get-by-id",params:{calId:cal_id}}).success(function(data){"success"==data.status&&(selectedInfo.selectedAppointment=data.data,$scope.from_time=moment(new Date(selectedInfo.selectedAppointment.FROM_TIME)),$scope.booking_detail.date=$scope.from_time.format("DD/MM/YYYY"),$scope.booking_detail.time=$scope.from_time.format("HH:mm"))}).error(function(data){alert("insert fail")})["finally"](function(){});var rlTypeId=$scope.selectedAppointmentCalendar.RL_TYPE_ID;$http({method:"GET",url:"/api/rlob/rl_types/get-rltype-by-id",params:{rlTypeId:rlTypeId}}).success(function(data){"success"==data.status&&(selectedInfo.rltypeSelected=data.data,$scope.booking_detail.type=selectedInfo.rltypeSelected.Rl_TYPE_NAME)}).error(function(data){alert("insert fail")})["finally"](function(){});var specialityId=$scope.selectedAppointmentCalendar.Specialties_id;$http({method:"GET",url:"/api/rlob/cln_specialties/get-speciality-by-id",params:{specialityId:specialityId}}).success(function(data){"success"==data.status&&(selectedInfo.clnSpecialitySelected=data.data)}).error(function(data){alert("insert fail")})["finally"](function(){});var geocoder,map;geocoder=new google.maps.Geocoder;var latlng=new google.maps.LatLng(-34.397,150.644),mapOptions={zoom:16,center:latlng};map=new google.maps.Map(document.getElementById("map-canvas"),mapOptions),$scope.newBooking.BOOKING_ID=2e4,$http({method:"GET",url:"/api/rlob/rl_bookings/get-new-key"}).success(function(data){$scope.newBooking.BOOKING_ID=data.key}).error(function(data){alert("insert fail")})["finally"](function(){}),$scope.scrollTo=function(el,offeset){var pos=el&&el.size()>0?el.offset().top:0;el&&($("body").hasClass("page-header-fixed")&&(pos-=$(".page-header").height()),pos+=offeset?offeset:-1*el.height()),$("html,body").animate({scrollTop:pos},"slow")},$scope.showMsgDialog=function(styleClass,header,status,content){$scope.msgHeader=header,$scope.msgStatus=status,$scope.msgContent=content,$(styleClass).modal({show:!0,backdrop:"static"})},$scope.sendConfirmEmail=function(){var mapUrl=null,siteAddress=selectedInfo.locationSelected.Site_addr;GMaps.geocode({address:siteAddress,callback:function(results,status){"OK"==status?(latlng1=results[0].geometry.location,mapUrl=GMaps.staticMapURL({lat:latlng1.lat(),lng:latlng1.lng(),markers:[{lat:latlng1.lat(),lng:latlng1.lng()}]}),handle()):handle()}});var handle=function(){$http({method:"POST",url:"/api/rlob/rl_bookings/admin/send-comfirm-email",data:{bookingId:$scope.newBooking.BOOKING_ID,siteAddress:siteAddress,mapUrl:mapUrl,isCopyBooking:$scope.isCopyBooking}}).success(function(data){console.log("success"==data.status?"Send email confirm success!":"Send email confirm fail!")}).error(function(data){})["finally"](function(){})}},$scope.isSaving=!1,$scope.save=function(){if(void 0==$scope.loginInfo.company_id||null==$scope.loginInfo.company_id||""==$scope.loginInfo.company_id)return void rlobMsg.popup(rlobLang.rlobHeader,rlobConstant.msgPopupType.error,"Create booking fail because the company is unknown!");if(void 0==selectedInfo.rltypeSelected.RL_TYPE_ID||null==selectedInfo.rltypeSelected.RL_TYPE_ID||""==selectedInfo.rltypeSelected.RL_TYPE_ID)return void rlobMsg.popup(rlobLang.rlobHeader,rlobConstant.msgPopupType.error,"Create booking fail because the type of injury is unknown!");if(void 0==selectedInfo.clnSpecialitySelected.Specialties_id||null==selectedInfo.clnSpecialitySelected.Specialties_id||""==selectedInfo.clnSpecialitySelected.Specialties_id)return void rlobMsg.popup(rlobLang.rlobHeader,rlobConstant.msgPopupType.error,"Create booking fail because the doctor's specialties is unknown!");if(void 0==selectedInfo.doctorSelected.doctor_id||null==selectedInfo.doctorSelected.doctor_id||""==selectedInfo.doctorSelected.doctor_id)return void rlobMsg.popup(rlobLang.rlobHeader,rlobConstant.msgPopupType.error,"Create booking fail because the doctor's name is unknown!");if(void 0==selectedInfo.locationSelected.id||null==selectedInfo.locationSelected.id||""==selectedInfo.locationSelected.id)return void rlobMsg.popup(rlobLang.rlobHeader,rlobConstant.msgPopupType.error,"Create booking fail because the site is unknown!");if(void 0==cal_id||null==cal_id||""==cal_id)return void rlobMsg.popup(rlobLang.rlobHeader,rlobConstant.msgPopupType.error,"Create booking fail because the appointment calendar is not selected!");if($scope.$broadcast("show-errors-check-validity"),$scope.bookingForm.$invalid)return $scope.hadForcused=!0,$(".errorSummary").show(),void $scope.scrollTo($(".errorSummary"),-200);$scope.mailBodyData={requestBy:$scope.loginInfo.FIRST_NAME?$scope.loginInfo.FIRST_NAME:"",company:$scope.companyInfo.Company_name?$scope.companyInfo.Company_name:"",time:$scope.from_time.format("HH:mm"),date:$scope.from_time.format("DD/MM/YYYY"),typeOfAppointment:$scope.bookingTypeObj.display,doctor:selectedInfo.doctorSelected.NAME?selectedInfo.doctorSelected.NAME:"",address:selectedInfo.locationSelected.Site_addr?selectedInfo.locationSelected.Site_addr:"",isContactPatient:$scope.newBooking.ISCONTACTPATIENT?$scope.newBooking.ISCONTACTPATIENT:"",notes:$scope.newBooking.NOTES?$scope.newBooking.NOTES:"",claimNumber:$scope.newBooking.CLAIM_NO?$scope.newBooking.CLAIM_NO:"",wrkName:$scope.newBooking.WRK_SURNAME?$scope.newBooking.WRK_SURNAME:"",wrkDOB:moment($scope.WRK_DOB_TEMP).format("DD/MM/YYYY"),wrkContactNo:$scope.newBooking.WRK_CONTACT_NO?$scope.newBooking.WRK_CONTACT_NO:"",injuryDesc:$scope.newBooking.DESC_INJURY?$scope.newBooking.DESC_INJURY:""},$scope.emailContent="The below appointment has been requested by "+$scope.mailBodyData.requestBy+" from "+$scope.mailBodyData.company+".\n\nAppointment Details:\n\nDate: "+$scope.mailBodyData.date+"\nTime: "+$scope.mailBodyData.time+"\nType of appointment: "+selectedInfo.rltypeSelected.Rl_TYPE_NAME+"\nDoctor: "+$scope.mailBodyData.doctor+"\nAddress: "+$scope.mailBodyData.address+"\nNotes: "+$scope.mailBodyData.notes+" \n\nPatient information:\n\nClaim number: "+$scope.mailBodyData.claimNumber+"\nName: "+$scope.mailBodyData.wrkName+"\nDate of Birth: "+$scope.mailBodyData.wrkDOB+"\nContact number: "+$scope.mailBodyData.wrkContactNo+" \nInjury description: "+$scope.mailBodyData.injuryDesc+"\n";var recepient="medicolegal@redimed.com.au",options={subject:"Medico-Legal Paperwork "+$scope.mailBodyData.wrkName,body:$scope.emailContent};$scope.mailtoLink=Mailto.url(recepient,options),$scope.newBooking.BOOKING_DATE=moment().format("YYYY-MM-DD HH:mm"),$scope.newBooking.APPOINTMENT_DATE=$scope.from_time.format("YYYY-MM-DD HH:mm"),$scope.newBooking.COMPANY_ID=$scope.companyInfo.id,$scope.newBooking.RL_TYPE_ID=selectedInfo.rltypeSelected.RL_TYPE_ID,$scope.newBooking.SPECIALITY_ID=selectedInfo.clnSpecialitySelected.Specialties_id,$scope.newBooking.DOCTOR_ID=selectedInfo.doctorSelected.doctor_id,$scope.newBooking.SITE_ID=selectedInfo.locationSelected.id,$scope.newBooking.CAL_ID=cal_id,$scope.newBooking.refered_date_string=$scope.from_time.format("ddd DD/MM/YYYY HH-mm")+" "+selectedInfo.locationSelected.Site_name,$scope.newBooking.STATUS="Confirmed",$scope.newBooking.BOOKING_TYPE=$scope.bookingType,void 0!=$scope.WRK_DOB_TEMP&&null!=$scope.WRK_DOB_TEMP&&($scope.newBooking.WRK_DOB=moment($scope.WRK_DOB_TEMP).format("YYYY-MM-DD")),void 0!=$scope.WRK_DATE_OF_INJURY_TEMP&&null!=$scope.WRK_DATE_OF_INJURY_TEMP&&($scope.newBooking.WRK_DATE_OF_INJURY=moment($scope.WRK_DATE_OF_INJURY_TEMP).format("YYYY-MM-DD")),$scope.showDialogAddSuccess=function(){$("#lob-client-add-booking-success").modal({show:!0,backdrop:"static"})},$scope.uploadDocument=function(){$("#lob-client-add-booking-success").modal("hide"),$("#lob-client-send-document-dialog").modal("hide"),$("#lob-client-upload-dialog").modal({show:!0,backdrop:"static"})},$scope.sendEmail=function(){$window.location.href=$scope.mailtoLink,$("#lob-client-add-booking-success").modal("hide"),$("#lob-client-send-document-dialog").modal("hide")},$scope.showDialogSendDocument=function(){$("#lob-client-send-document-dialog").modal({show:!0,backdrop:"static"})},rlobService.core.saveBookingInfo($scope.newBooking).then(function(data){if("success"==data.status){$scope.scrollTo($(".bookingSuccess"),-200),bookingService.setBookingInfo($scope.newBooking),$scope.isSaving=!0,$scope.bookingSuccess=!0,$scope.showDialogAddSuccess(),$scope.getAppointmentCalendarUpcoming(),$scope.sendConfirmEmail();for(var i=0;i<data.data.length;i++)JSON.stringify(data.data[i])}else $scope.showMsgDialog(".patient-detail-msg-dialog","Fail","fail","Create booking fail!")},function(err){$scope.showMsgDialog(".patient-detail-msg-dialog","Fail","fail","Create booking fail!")})},$scope.filesUpdateFlag=0,$scope.$watch("filesUpdateFlag",function(newValue,oldValue){$scope.filesUpdateFlag&&$scope.filesUpdateFlag>0&&rlobMsg.popup(rlobLang.rlobHeader,rlobConstant.msgPopupType.success,"Upload documents success!")})}),angular.module("app.loggedIn.rlob.adminBookingList.controller",[]).controller("rlob_admin_bookingListController",function($scope,$http,$state,$window,$q,$stateParams,FileUploader,$cookieStore,$interval,rlobService,Mailto,bookingService){$scope.haveNodeFile=!1,$scope.isAdminUpload=!0,$scope.isAdminGetFiles=!0,$scope.accordionStatus={status1:!0},$scope.documentStatus=rlobConstant.documentStatusFilter,$scope.documentStatusDisplay=rlobConstant.documentStatusDisplay,$scope.actionCenter={},$scope.actionCenter.changeBookingCalendar={},$scope.actionCenter.scheduleList=$scope.scheduleList,$scope.actionCenter.adminLocalNotification={},$scope.newAppointmentPositionFlag=!1,$scope.scrollTo=function(el,offeset){var pos=el&&el.size()>0?el.offset().top:0;el&&($("body").hasClass("page-header-fixed")&&(pos-=$(".page-header").height()),pos+=offeset?offeset:-1*el.height()),$("html,body").animate({scrollTop:pos},"slow")},$scope.status=!1,$scope.sourceName=$scope.bookingType,$scope.notificationType=rlobConstant.notificationType,$scope.bellType=rlobConstant.bellType,$scope.mydata=[],$scope.parseBookingList=function(data){$scope.mydata=[];var dateMaker={};dateMaker.DATE_ITEMS=[];for(var i=0;i<data.length;i++){var item=data[i];if(dateMaker[item.APPOINTMENT_DATE]||(dateMaker[item.APPOINTMENT_DATE]={DOCTOR_ITEMS:[]},dateMaker.DATE_ITEMS.push({APPOINTMENT_DATETIME:item.APPOINTMENT_DATETIME,
APPOINTMENT_DATE:item.APPOINTMENT_DATE,DISPLAY:"["+item.APPOINTMENT_DATE+"]",style_class:"lob_admin_date_node"})),dateMaker[item.APPOINTMENT_DATE][item.DOCTOR_ID]||(dateMaker[item.APPOINTMENT_DATE][item.DOCTOR_ID]={BOOKING_ITEMS:[]},dateMaker[item.APPOINTMENT_DATE].DOCTOR_ITEMS.push({DOCTOR_ID:item.DOCTOR_ID,NAME:item.NAME,DISPLAY:"["+item.NAME+"]",style_class:"lob_admin_doctor_node"})),!dateMaker[item.APPOINTMENT_DATE][item.DOCTOR_ID][item.BOOKING_ID]){dateMaker[item.APPOINTMENT_DATE][item.DOCTOR_ID][item.BOOKING_ID]={BOOKING_FILE_ITEMS:[]};var styleClass="";item.DOCUMENT_STATUS==$scope.documentStatus.checked.value?styleClass="rlob_document_status_checked":item.DOCUMENT_STATUS==$scope.documentStatus.noDocuments.value&&(styleClass="rlob_document_status_no_document"),dateMaker[item.APPOINTMENT_DATE][item.DOCTOR_ID].BOOKING_ITEMS.push({APPOINTMENT_TIME:item.APPOINTMENT_TIME,APPOINTMENT_DATETIME:item.APPOINTMENT_DATETIME,CAL_ID:item.CAL_ID,ASS_ID:item.ASS_ID,BOOKING_ID:item.BOOKING_ID,Company_name:item.Company_name,WRK_SURNAME:item.WRK_SURNAME,STATUS:item.STATUS,DISPLAY:"["+item.APPOINTMENT_TIME+" - "+item.Site_name+"] - ["+item.WRK_OTHERNAMES+" "+item.WRK_SURNAME+"] - ["+item.ASS_OTHERNAMES+" - "+item.Company_name+"]",DISPLAY1:"- Site: "+item.Site_name,DISPLAY2:"- Patient: "+item.WRK_SURNAME,DISPLAY3:"- Company: "+item.Company_name,DOCUMENT_STATUS:item.DOCUMENT_STATUS,style_class:styleClass})}$scope.haveNodeFile&&(null==item.FILE_ID||dateMaker[item.APPOINTMENT_DATE][item.DOCTOR_ID][item.BOOKING_ID][item.FILE_ID]||(dateMaker[item.APPOINTMENT_DATE][item.DOCTOR_ID][item.BOOKING_ID][item.FILE_ID]={},dateMaker[item.APPOINTMENT_DATE][item.DOCTOR_ID][item.BOOKING_ID].BOOKING_FILE_ITEMS.push({PARENT_ID:item.BOOKING_ID,ASS_ID:item.ASS_ID,FILE_ID:item.FILE_ID,FILE_NAME:item.FILE_NAME,FILE_PATH:item.FILE_PATH,isClientDownLoad:item.isClientDownLoad,DISPLAY:item.FILE_NAME,style_class:"lob_admin_booking_file_node"})))}for(var i=0;i<dateMaker.DATE_ITEMS.length;i++){var date_item=dateMaker.DATE_ITEMS[i],node={APPOINTMENT_DATETIME:date_item.APPOINTMENT_DATETIME,APPOINTMENT_DATE:date_item.APPOINTMENT_DATE,DISPLAY:date_item.DISPLAY,nodes:[],style_class:"lob_admin_date_node",IS_DATE_ITEM:"1"};node.nodes=dateMaker[date_item.APPOINTMENT_DATE].DOCTOR_ITEMS;for(var j=0;j<dateMaker[date_item.APPOINTMENT_DATE].DOCTOR_ITEMS.length;j++){var doctor_item=dateMaker[date_item.APPOINTMENT_DATE].DOCTOR_ITEMS[j];if(node.nodes[j].nodes=[],node.nodes[j].nodes=dateMaker[date_item.APPOINTMENT_DATE][doctor_item.DOCTOR_ID].BOOKING_ITEMS,$scope.haveNodeFile)for(var k=0;k<dateMaker[date_item.APPOINTMENT_DATE][doctor_item.DOCTOR_ID].BOOKING_ITEMS.length;k++){var booking_item=dateMaker[date_item.APPOINTMENT_DATE][doctor_item.DOCTOR_ID].BOOKING_ITEMS[k];node.nodes[j].nodes[k].nodes=[],node.nodes[j].nodes[k].nodes=dateMaker[date_item.APPOINTMENT_DATE][doctor_item.DOCTOR_ID][booking_item.BOOKING_ID].BOOKING_FILE_ITEMS}}$scope.mydata.push(node)}$scope.newAppointmentPositionFlag&&$scope.goToNewAppoinmentPosition()},$scope.lobAdminSearch={fromDateKey:moment().toDate(),toDateKey:moment().add(30,"d").toDate(),doctorKey:"",workerKey:"",documentStatusKey:{}},$scope.filterBooking=function(){var fromDate=moment($scope.lobAdminSearch.fromDateKey),toDate=moment($scope.lobAdminSearch.toDateKey),doctorKey=$scope.lobAdminSearch.doctorKey,workerKey=$scope.lobAdminSearch.workerKey,documentStatusKey=$scope.lobAdminSearch.documentStatusKey.value;$http({method:"GET",url:"/api/rlob/rl_bookings/admin/filter-booking",params:{fromDateKey:fromDate.format("YYYY-MM-DD"),toDateKey:toDate.format("YYYY-MM-DD"),doctorKey:doctorKey,workerKey:workerKey,documentStatusKey:documentStatusKey,doctorId:$scope.doctorInfo?$scope.doctorInfo.doctor_id:null,bookingType:$scope.bookingType}}).success(function(data){data.length<=0&&($scope.showDetailPanel=!1),$scope.parseBookingList(data)}).error(function(data){console.log("error")})["finally"](function(){})},$scope.remove=function(scope){scope.remove()},$scope.toggle=function(scope){scope.toggle()},$scope.moveLastToTheBegginig=function(){var a=$scope.data.pop();$scope.data.splice(0,0,a)},$scope.newSubItem=function(scope){var nodeData=scope.$modelValue;nodeData.nodes.push({FILE_ID:item.FILE_ID,FILE_NAME:item.FILE_NAME,FILE_PATH:item.FILE_PATH,isClientDownLoad:item.isClientDownLoad,DISPLAY:item.FILE_NAME,style_class:"lob_admin_booking_file_node"})},$scope.collapseAll=function(){$scope.$broadcast("collapseAll")},$scope.expandAll=function(){$scope.$broadcast("expandAll")},$scope.message="Right click triggered",$scope.panels=[{name:"Panel 1"},{name:"Panel 2"},{name:"Panel 3"}],$scope.addPanel=function(){$scope.panels.push({name:"Panel "+($scope.panels.length+1)})},$scope.onRightClick=function(msg){console.log(msg)},$scope.recreatePanels=function(){$scope.panels=angular.copy($scope.panels),console.log($scope.panels)},$scope.getTimeString=function(datetime){var d=moment(new Date(datetime));return d.format("HH-mm")},$scope.getShortDateString=function(datetime){var d=moment(new Date(datetime));return d.format("DD/MM/YYYY")},$scope.showBookingDetailDialog=function(bookingId){$http({method:"POST",url:"/api/rlob/rl_bookings/get-booking-by-id",data:{bookingId:bookingId}}).success(function(data){"success"==data.status?($scope.selectedBooking=data.data,$("#view-detail-booking-dialog").modal({show:!0,backdrop:"static"})):alert("data not exist!")}).error(function(data){console.log("error")})["finally"](function(){})},$scope.lob_download_file=function(fileId){$window.location.href="/api/download/lob/document/"+fileId},$scope.show_lob_upload_file_dialog=function(bookingId,scope){$http({method:"POST",url:"/api/rlob/rl_bookings/get-booking-by-id",data:{bookingId:bookingId}}).success(function(data){"success"==data.status?($scope.selectedBooking=data.data,$("#lob-upload-file-dialog").modal({show:!0,backdrop:"static"}),$scope.currentNode=scope.$modelValue):alert("data not exist!")}).error(function(data){console.log("error")})["finally"](function(){})},$scope.showMsgDialog=function(styleClass,header,status,content){$scope.msgHeader=header,$scope.msgStatus=status,$scope.msgContent=content,$(styleClass).modal({show:!0,backdrop:"static"})},$scope.rlob_add_notification=$scope.add_notification,$scope.bookingStatus=rlobConstant.bookingStatus,$scope.lob_change_status=function(assId,bookingId,status,scope,calID,patientID){rlobService.getBookingById(bookingId).then(function(data){return"success"==data.status?(data.data.DOCUMENT_STATUS==$scope.documentStatus.checked.value?data.data.style_class="rlob_document_status_checked":data.data.DOCUMENT_STATUS==$scope.documentStatus.noDocuments.value&&(data.data.style_class="rlob_document_status_no_document"),$scope.selectedBooking=data.data,{status:"success"}):{status:"fail"}}).then(function(data){"success"==data.status&&(console.log($scope.selectedBooking),$scope.selectedBooking.STATUS==$scope.bookingStatus.cancel?rlobService.selectAppointment($scope.selectedBooking.CAL_ID).then(function(data){if(null===data.data.NOTES){{$scope.selectedBooking.WRK_OTHERNAMES+" "+$scope.selectedBooking.WRK_SURNAME}rlobService.undoCancelBooking(calID,patientID).then(function(data){"success"==data.status?rlobService.changeBookingStatus(bookingId,status).then(function(data){if("success"==data.status){scope.$modelValue.STATUS=status,$scope.selectedBooking.STATUS=status;var refId=bookingId;$scope.rlob_add_notification(assId,refId,$scope.sourceName,$scope.bellType.changeStatus,$scope.notificationType.bell,status),angular.element("#bookingstatus").fadeOut(),$scope.showMsgDialog(".lob-msg-dialog","Change Booking Status","success","Changing status to ["+status+"] success!")}else angular.element("#bookingstatus").fadeOut(),$scope.showMsgDialog(".lob-msg-dialog","Change Booking Status","fail","Changing status to ["+status+"] fail!")}):(angular.element("#bookingstatus").fadeOut(),$scope.showMsgDialog(".lob-msg-dialog","Change Booking Status","fail","Changing status to ["+status+"] fail!"))})}else angular.element("#bookingstatus").fadeOut(),$scope.showMsgDialog(".lob-msg-dialog","Change Booking Status","fail","Changing status to ["+status+"] fail!")}):status==$scope.bookingStatus.cancel?rlobService.cancelBooking(calID,patientID).then(function(data){"success"==data.status?rlobService.changeBookingStatus(bookingId,status).then(function(data){if("success"==data.status){scope.$modelValue.STATUS=status,$scope.selectedBooking.STATUS=status;var refId=bookingId;$scope.rlob_add_notification(assId,refId,$scope.sourceName,$scope.bellType.changeStatus,$scope.notificationType.bell,status),angular.element("#bookingstatus").fadeOut(),$scope.showMsgDialog(".lob-msg-dialog","Change Booking Status","success","Changing status to ["+status+"] success!")}else angular.element("#bookingstatus").fadeOut(),$scope.showMsgDialog(".lob-msg-dialog","Change Booking Status","fail","Changing status to ["+status+"] fail!")}):(angular.element("#bookingstatus").fadeOut(),$scope.showMsgDialog(".lob-msg-dialog","Change Booking Status","fail","Changing status to ["+status+"] fail!"))}):rlobService.changeBookingStatus(bookingId,status).then(function(data){if("success"==data.status){scope.$modelValue.STATUS=status,$scope.selectedBooking.STATUS=status;var refId=bookingId;$scope.rlob_add_notification(assId,refId,$scope.sourceName,$scope.bellType.changeStatus,$scope.notificationType.bell,status),angular.element("#bookingstatus").fadeOut(),$scope.showMsgDialog(".lob-msg-dialog","Change Booking Status","success","Changing status to ["+status+"] success!")}else angular.element("#bookingstatus").fadeOut(),$scope.showMsgDialog(".lob-msg-dialog","Change Booking Status","fail","Changing status to ["+status+"] fail!")}))})},$scope.lob_change_booking_file_role=function(assId,fileId,role,scope){$http({method:"POST",url:"/api/rlob/rl_booking_files/change-role-download",data:{fileId:fileId,role:role}}).success(function(data){if("success"==data.status){scope.$modelValue.isClientDownLoad=role,$scope.showMsgDialog(".lob-msg-dialog","Authority downloads","success","Changing success! Customer"+(1==role?" can ":" cannot ")+"download this file");var refId=scope.$modelValue.PARENT_ID;1==role&&$scope.rlob_add_notification(assId,refId,$scope.sourceName,$scope.bellType.result,$scope.notificationType.letter,"")}else $scope.showMsgDialog(".lob-msg-dialog","Authority downloads","fail","Changing fail!")}).error(function(data){$scope.showMsgDialog(".lob-msg-dialog","Authority downloads","fail","Changing fail!")})["finally"](function(){})},$scope.currentUpdatingItem={bookingId:null,calId:null,appointmentDateTime:null,newAppoimentDateTime:null,bookingIdChangeSuccess:null,assId:null,newCalId:null},$scope.actionCenter.changeBookingCalendar.runWhenSuccess=function(){$scope.currentUpdatingItem.newAppoimentDateTime>=$scope.currentUpdatingItem.appointmentDateTime?($scope.lobAdminSearch.fromDateKey=moment(new Date($scope.currentUpdatingItem.appointmentDateTime)),$scope.lobAdminSearch.toDateKey=moment(new Date($scope.currentUpdatingItem.newAppoimentDateTime))):($scope.lobAdminSearch.fromDateKey=moment(new Date($scope.currentUpdatingItem.newAppoimentDateTime)),$scope.lobAdminSearch.toDateKey=moment(new Date($scope.currentUpdatingItem.appointmentDateTime))),$http({method:"GET",url:"/api/rlob/appointment-calendar/check-same-doctor",params:{calId1:$scope.currentUpdatingItem.calId,calId2:$scope.currentUpdatingItem.newCalId}}).success(function(data){"success"==data.status&&(data.data>1&&($scope.lobAdminSearch.doctorKey=null),$scope.rlob_add_notification($scope.currentUpdatingItem.assId,$scope.currentUpdatingItem.bookingId,$scope.sourceName,$scope.bellType.changeCalendar,$scope.notificationType.bell,""))}).error(function(data){console.log("error")})["finally"](function(){$scope.newAppointmentPositionFlag=!0,$scope.filterBooking()})},$scope.goToNewAppoinmentPosition=function(){$scope.currentUpdatingItem.newAppoimentDateTime>=$scope.currentUpdatingItem.appointmentDateTime?$scope.scrollTo($("#rlob_admin_begin_page"),-200):$scope.scrollTo($("#rlob_admin_end_page"),100),$scope.newAppointmentPositionFlag=!1},$scope.newPosition="new-position",$scope.selectedFilter={locationSelected:{},rltypeSelected:{},clnSpecialitySelected:{},doctorSelected:{},var1:{}},$scope.showDetailPanel=!1,$scope.currentNodeBooking={},$scope.getBookingDetailWhenClick=function(bookingId,scope){$scope.currentNodeBooking=scope,$scope.showDetailPanel=!0,$http({method:"POST",url:"/api/rlob/rl_bookings/get-booking-by-id",data:{bookingId:bookingId}}).success(function(data){"success"==data.status?($scope.selectedBooking=data.data,$scope.scrollTo($(".detailPanel"),-200)):alert("data not exist!")}).error(function(data){console.log("error")})["finally"](function(){})},$scope.getBookingDetailWhenCursor=function(bookingId,scope){$scope.currentNodeBooking=scope,bookingId&&rlobService.getBookingById(bookingId).then(function(data){"success"==data.status&&(data.data.DOCUMENT_STATUS==$scope.documentStatus.checked.value?data.data.style_class="rlob_document_status_checked":data.data.DOCUMENT_STATUS==$scope.documentStatus.noDocuments.value&&(data.data.style_class="rlob_document_status_no_document"),$scope.showDetailPanel=!0,$scope.selectedBooking=data.data)})},$scope.bookingstatusfadeIn=function(){angular.element("#bookingstatus").fadeIn()},$scope.bookingstatusfadeOut=function(){angular.element("#bookingstatus").fadeOut()},$scope.documentstatusfadeOut=function(){angular.element("#documentstatus").fadeOut()},$scope.documentstatusfadeIn=function(){angular.element("#documentstatus").fadeIn()},$scope.rlob_document_change_status=function(bookingId,status){rlobService.changeDocumentStatus(bookingId,status).then(function(data){if("success"==data.status){var styleClass="";status==$scope.documentStatus.checked.value?styleClass="rlob_document_status_checked":status==$scope.documentStatus.noDocuments.value&&(styleClass="rlob_document_status_no_document"),$scope.selectedBooking.DOCUMENT_STATUS=status,$scope.selectedBooking.style_class=styleClass,angular.element("#documentstatus").fadeOut(),$scope.showMsgDialog(".lob-msg-dialog","Change Documents Status","success","Changing status to ["+status+"] success!"),$scope.currentNodeBooking.$modelValue.style_class=styleClass}else angular.element("#documentstatus").fadeOut(),$scope.showMsgDialog(".lob-msg-dialog","Change Documents Status","fail","Changing status to ["+status+"] fail!")})},$scope.$watch("selectedBooking.BOOKING_ID",function(newValue,oldValue){newValue!==oldValue&&(angular.element("#documentstatus").fadeOut(),angular.element("#bookingstatus").fadeOut())}),$scope.setBookingIdInPaperless=function(BookingID){return null!=BookingID&&""!=BookingID?(rlobService.bookingInfoPaperless.id=BookingID,void $state.go("loggedIn.rlob.paperless")):void alert("Khong ton tai Booking ID")},$scope.copyBooking=function(){var bookingBehalfInfo={ASS_SURNAME:$scope.selectedBooking.ASS_SURNAME,ASS_OTHERNAMES:$scope.selectedBooking.ASS_OTHERNAMES,ASS_CONTACT_NO:$scope.selectedBooking.ASS_CONTACT_NO,ASS_EMAIL:$scope.selectedBooking.ASS_EMAIL,ASS_ID:$scope.selectedBooking.ASS_ID,COMPANY_ID:$scope.selectedBooking.COMPANY_ID};bookingService.setBookingBehalfInfo(bookingBehalfInfo),bookingService.setBookingInfoReuse($scope.selectedBooking),rlobMsg.popup(rlobLang.rlobHeader,rlobConstant.msgPopupType.success,"Please choose appointment calendar!"),$state.go("loggedIn.rlob.rlob_booking")},$scope.actionCenter.adminLocalNotification.runWhenChanged=function(){$scope.filterBooking()},$scope.userInfo=$cookieStore.get("userInfo"),$scope.doctorInfo=null,$scope.getDoctorInfoByUserId=function(){var deferred=$q.defer();return rlobService.getDoctorInfoByUserId($scope.userInfo.id).then(function(data){"success"==data.status&&($scope.doctorInfo=data.data)},function(err){console.log("Khong the lay thong tin doctor")}).then(function(){deferred.resolve()}),deferred.promise},$scope.userInfo.user_type==rlobConstant.userType.doctor?$scope.getDoctorInfoByUserId().then($scope.filterBooking):$scope.filterBooking()}),angular.module("app.loggedIn.rlob.bookingDetail.controller",[]).controller("rlob_bookingDetailController",function($scope,$http,$state,$stateParams,$cookieStore){$scope.isCanUpload=!1,$scope.isAdminGetFiles=!0,$scope.isAdminUpload=!0,$scope.loginInfo=$cookieStore.get("userInfo"),$scope.bookingStatus=rlobConstant.bookingStatus,$http({method:"POST",url:"/api/rlob/rl_bookings/get-booking-by-id",data:{bookingId:$stateParams.bookingId,userId:$scope.loginInfo.id}}).success(function(data){"success"==data.status?($scope.selectedBooking=data.data,$("#view-detail-booking-dialog").modal({show:!0,backdrop:"static"})):alert("data not exist!")}).error(function(data){console.log("error")})}),angular.module("app.loggedIn.vaccinob",["app.loggedIn.vaccinob.controller","app.loggedIn.rlob.booking.controller","app.loggedIn.rlob.list.controller","app.loggedIn.rlob.patientDetail.controller","app.loggedIn.rlob.adminBookingList.controller","app.loggedIn.rlob.bookingDetail.controller","app.loggedIn.rlob.services","app.loggedIn.rlob.directive"]).config(function($stateProvider){$stateProvider.state("loggedIn.vaccinob",{url:"/vaccinob",templateUrl:"modules/rediLegalOnlineBooking/views/vaccinob.html",controller:"vaccinobController"}).state("loggedIn.vaccinob.vaccinob_booking",{url:"/booking",templateUrl:"modules/rediLegalOnlineBooking/views/booking.html",controller:"rlob_bookingController"}).state("loggedIn.vaccinob.vaccinob_patient_detail",{url:"/booking/patient-detail",templateUrl:"/modules/rediLegalOnlineBooking/views/patient-detail.html",controller:"rlob_patientDetailController"}).state("loggedIn.vaccinob.vaccinob_booking_list",{url:"/booking/list",templateUrl:"/modules/rediLegalOnlineBooking/views/booking-list.html",controller:"rlob_bookingListController"}).state("loggedIn.vaccinob.vaccinob_admin_booking_list",{url:"/booking/admin-booking-list",templateUrl:"/modules/rediLegalOnlineBooking/views/admin-booking-list.html",controller:"rlob_admin_bookingListController"}).state("loggedIn.vaccinob.vaccinob_booking_detail",{url:"/booking/booking-detail/:bookingId",templateUrl:"/modules/rediLegalOnlineBooking/views/booking-detail.html",controller:"rlob_bookingDetailController"})});var TableEditable=function(){var handleTable=function(){{var table=$("#sample_editable_1");table.dataTable({bFilter:!0,lengthMenu:[[5,15,20,-1],[5,15,20,"All"]],pageLength:10,language:{lengthMenu:" _MENU_ records"},columnDefs:[{orderable:!1,targets:[1,2]},{searchable:!1}],order:[[0,"desc"]]}).columnFilter({sPlaceHolder:"head:before",aoColumns:[{type:"text"},{type:"text"},{type:"select"},{type:"date-range"},{type:"date-range"}]})}};return{init:function(){handleTable()}}}();angular.module("app.loggedIn.rlob.list.controller",[]).controller("rlob_bookingListController",function($scope,$http,$state,$stateParams,$cookieStore,FileUploader,rlobService,$window,Mailto,bookingService){$scope.isCanUpload=!0,$scope.loginInfo=$cookieStore.get("userInfo"),$scope.bookingStatus=rlobConstant.bookingStatus,$scope.documentStatus=rlobConstant.documentStatusFilter,$scope.documentStatusDisplay=rlobConstant.documentStatusDisplay,$scope.actionCenter={},$scope.actionCenter.changeBookingCalendar={},$scope.sizePageList=[{value:10,display:"10 Rows"},{value:20,display:"20 Rows"},{value:30,display:"30 Rows"},{value:40,display:"40 Rows"},{value:50,display:"50 Rows"},{value:60,display:"60 Rows"},{value:70,display:"70 Rows"},{value:80,display:"80 Rows"},{value:90,display:"90 Rows"},{value:100,display:"100 Rows"}],$scope.rl_types=[],$http({method:"GET",url:"/api/rlob/rl_types/list",params:{sourceType:$scope.bookingType}}).success(function(data){$scope.rl_types=data}).error(function(data){console.log("error")})["finally"](function(){}),$scope.goToBookingDetail=function(l){return $scope.isClickActionMenu?void($scope.isClickActionMenu=!1):void $http({method:"POST",url:"/api/rlob/rl_bookings/get-booking-by-id",data:{bookingId:l.BOOKING_ID,userId:$scope.loginInfo.id}}).success(function(data){"success"==data.status?($scope.selectedBooking=data.data,$("#view-detail-booking-dialog").modal({show:!0,backdrop:"static"})):alert("data not exist!")}).error(function(data){console.log("error")})},$scope.searchInfoMap={currentPage:1,itemsPerPage:$scope.sizePageList[0].value,totalItems:"",maxSize:15,claimNo:"",surname:"",firstName:"",fullName:"",type:"",appointmentDateFromTemp:"",appointmentDateFrom:"",appointmentDateToTemp:"",appointmentDateTo:"",bookingStatus:"",documentStatus:"",orderBy:"APPOINTMENT_DATE DESC"},$scope.list=[],$scope.pagingHandle=function(){$scope.searchInfo.appointmentDateFrom=$scope.searchInfo.appointmentDateFromTemp?moment($scope.searchInfo.appointmentDateFromTemp).format("YYYY/MM/DD"):null,$scope.searchInfo.appointmentDateTo=$scope.searchInfo.appointmentDateToTemp?moment($scope.searchInfo.appointmentDateToTemp).format("YYYY/MM/DD"):null,$http.post("/api/rlob/rl_bookings/list-bookings-for-customer",{searchInfo:$scope.searchInfo}).then(function(response){"success"==response.data.status?($scope.list=response.data.data.list,$scope.searchInfo.totalItems=response.data.data.totalItems):$scope.list=[]})},$scope.searchHandle=function(){$scope.searchInfo.currentPage=1,$scope.pagingHandle()},$scope.reset=function(){$scope.searchInfo=angular.copy($scope.searchInfoMap),$scope.pagingHandle()},$scope.sortDirect="NO_SORT",$scope.sortable={APPOINTMENT_DATE:"DESC",BOOKING_DATE:"NO_SORT"},$scope.currentFieldSort="APPOINTMENT_DATE",$scope.sortBy=function(){$scope.searchHandle()},$scope.$watch("[searchInfo.appointmentDateFromTemp,searchInfo.appointmentDateToTemp]",function(newValue,oldValue){$scope.searchInfo&&$scope.searchHandle()},!0),$scope.searchInfo=angular.copy($scope.searchInfoMap),$scope.searchHandle(),$scope.isClickActionMenu=!1,$scope.clickActionMenu=function(bookingId){$scope.isClickActionMenu=!0,rlobService.getBookingById(bookingId).then(function(data){"success"==data.status&&($scope.selectedBooking=data.data)})},$scope.printContent=function(){var printable=document.getElementsByClassName("printable");$(printable[0]).printArea()},$scope.downloadResult=function(bookingId){$window.location.href="/api/download/structure/attach-file/"+$scope.bookingType+"/"+bookingId},$scope.$watch("selectedBooking",function(newValue,oldValue){newValue!=oldValue&&$scope.updateMailTo(newValue)}),$scope.showDialogSendDocument=function(){$("#view-detail-booking-dialog").modal("hide"),$("#lob-client-send-document-dialog").modal({show:!0,backdrop:"static"})},$scope.uploadDocument=function(){$("#lob-client-send-document-dialog").modal("hide"),$("#lob-client-upload-dialog").modal({show:!0,backdrop:"static"})},$scope.updateMailTo=function(data){$scope.mailBodyData={requestBy:$scope.loginInfo.user_name?$scope.loginInfo.user_name:"",company:data.Company_name?data.Company_name:"",time:moment(new Date(data.APPOINTMENT_DATE)).format("HH:mm"),date:moment(new Date(data.APPOINTMENT_DATE)).format("DD/MM/YYYY"),typeOfAppointment:data.BOOKING_TYPE,doctor:data.NAME?data.NAME:"",address:data.Site_addr?data.Site_addr:"",isContactPatient:data.ISCONTACTPATIENT?data.ISCONTACTPATIENT:"",notes:data.NOTES?data.NOTES:"",claimNumber:data.CLAIM_NO?data.CLAIM_NO:"",wrkName:data.WRK_SURNAME?data.WRK_SURNAME:"",wrkDOB:moment(data.WRK_DOB).format("DD/MM/YYYY"),wrkContactNo:data.WRK_CONTACT_NO?data.WRK_CONTACT_NO:"",injuryDesc:data.DESC_INJURY?data.DESC_INJURY:""},$scope.emailContent="The below appointment has been requested by "+$scope.mailBodyData.requestBy+" from "+$scope.mailBodyData.company+".\n\nAppointment Details:\n\nDate: "+$scope.mailBodyData.date+"\nTime: "+$scope.mailBodyData.time+"\nType of appointment: "+$scope.mailBodyData.Rl_TYPE_NAME+"\nDoctor: "+$scope.mailBodyData.doctor+"\nAddress: "+$scope.mailBodyData.address+"\nNotes: "+$scope.mailBodyData.notes+" \n\nPatient information:\n\nClaim number: "+$scope.mailBodyData.claimNumber+"\nName: "+$scope.mailBodyData.wrkName+"\nDate of Birth: "+$scope.mailBodyData.wrkDOB+"\nContact number: "+$scope.mailBodyData.wrkContactNo+" \nInjury description: "+$scope.mailBodyData.injuryDesc+"\n";var recepient="medicolegal@redimed.com.au",options={subject:"Medico-Legal Paperwork "+$scope.mailBodyData.wrkName,body:$scope.emailContent};$scope.mailtoLink=Mailto.url(recepient,options)},$scope.sendEmail=function(){console.log($scope.mailtoLink),$window.location.href=$scope.mailtoLink,$("#lob-client-send-document-dialog").modal("hide")},$scope.reuseBookingInfo=function(){bookingService.setBookingInfoReuse($scope.selectedBooking),rlobMsg.popup(rlobLang.rlobHeader,rlobConstant.msgPopupType.success,"Please choose appointment calendar!"),$state.go("loggedIn.rlob.rlob_booking")},$scope.cancelBooking=function(){var appTime=new Date($scope.selectedBooking.APPOINTMENT_DATE),currentTime=new Date;appTime>currentTime&&$scope.selectedBooking.STATUS==rlobConstant.bookingStatus.confirmed?rlobService.cancelBooking($scope.selectedBooking.CAL_ID,$scope.selectedBooking.PATIENT_ID).then(function(data){"success"==data.status?rlobService.changeBookingStatus($scope.selectedBooking.BOOKING_ID,rlobConstant.bookingStatus.cancel).then(function(data){"success"==data.status?($scope.selectedBooking.STATUS=rlobConstant.bookingStatus.cancel,rlobMsg.popup(rlobLang.rlobHeader,rlobConstant.msgPopupType.success,"Cancel booking success!"),$scope.pagingHandle()):rlobMsg.popup(rlobLang.rlobHeader,rlobConstant.msgPopupType.error,"Cancel booking fail!")}):rlobMsg.popup(rlobLang.rlobHeader,rlobConstant.msgPopupType.error,"Cancel booking fail!")}):rlobMsg.popup(rlobLang.rlobHeader,rlobConstant.msgPopupType.error,"You cannot cancel this booking!")},$scope.currentUpdatingItem={bookingId:null,calId:null,appointmentDateTime:null,newAppoimentDateTime:null,bookingIdChangeSuccess:null,assId:null,newCalId:null},$scope.actionCenter.changeBookingCalendar.runWhenSuccess=function(){$scope.searchHandle()}}),angular.module("app.loggedIn.rlob.adminDocumentStatusSummary.controller",[]).controller("rlob_admin_documentStatusSummaryController",function($scope,$http,$cookieStore,$q,$state,rlobService){$scope.listDaysOfWeek={},$scope.listHoursInDay={},$scope.listDays={};var dateStartWeek=rlobDate.getDateStartWeek(new Date),dateEndWeek=rlobDate.getDateEndWeek(new Date);$scope.nextWeek=function(){dateStartWeek=dateStartWeek.add(7,"days"),dateEndWeek=dateEndWeek.add(7,"days"),$scope.getDocumentStatusSummaryInWeek(dateStartWeek,dateEndWeek)},$scope.previousWeek=function(){dateStartWeek=dateStartWeek.subtract(7,"days"),dateEndWeek=dateEndWeek.subtract(7,"days"),$scope.getDocumentStatusSummaryInWeek(dateStartWeek,dateEndWeek)},$scope.datesDisplay="",$scope.numberOfBooking=0,$scope.getDocumentStatusSummaryInWeek=function(dateStart,dateEnd){$scope.listDaysOfWeek={},$scope.listHoursInDay={},$scope.listDays={},$scope.datesDisplay=dateStart.format("DD/MM/YYYY")+"-"+dateEnd.format("DD/MM/YYYY"),rlobService.getDocumentStatusSummary(dateStart.format("YYYY/MM/DD"),dateEnd.format("YYYY/MM/DD")).then(function(data){if($scope.numberOfBooking=0,"success"==data.status){$scope.numberOfBooking=data.data.length;for(var i=0;i<data.data.length;i++){var item=data.data[i],appointmentDate=new Date(data.data[i].APPOINTMENT_DATE),dayValue=appointmentDate.getDay();$scope.listDaysOfWeek[rlobDate.daysOfWeek[dayValue].value]||($scope.listDaysOfWeek[rlobDate.daysOfWeek[dayValue].value]=rlobDate.daysOfWeek[dayValue]),$scope.listHoursInDay[moment(appointmentDate).format("HH:mm")]||($scope.listHoursInDay[moment(appointmentDate).format("HH:mm")]={})}for(var i=0;i<data.data.length;i++){var item=data.data[i],appointmentDate=new Date(data.data[i].APPOINTMENT_DATE),dayValue=appointmentDate.getDay();$scope.listDays[rlobDate.daysOfWeek[dayValue].value]||($scope.listDays[rlobDate.daysOfWeek[dayValue].value]={DISPLAY:rlobDate.daysOfWeek[dayValue].display,LIST:angular.copy($scope.listHoursInDay)}),$scope.listDays[rlobDate.daysOfWeek[dayValue].value].LIST[moment(appointmentDate).format("HH:mm")]||($scope.listDays[rlobDate.daysOfWeek[dayValue].value].LIST[moment(appointmentDate).format("HH:mm")]={});var styleClass="";switch(item.DOCUMENT_STATUS){case rlobConstant.documentStatus.notConfirmed.value:styleClass=rlobConstant.documentStatusSummaryStyleClass.notConfirmed;break;case rlobConstant.documentStatus.checked.value:styleClass=rlobConstant.documentStatusSummaryStyleClass.checked;break;case rlobConstant.documentStatus.noDocuments.value:styleClass=rlobConstant.documentStatusSummaryStyleClass.noDocuments}$scope.listDays[rlobDate.daysOfWeek[dayValue].value].LIST[moment(appointmentDate).format("HH:mm")][item.BOOKING_ID]||($scope.listDays[rlobDate.daysOfWeek[dayValue].value].LIST[moment(appointmentDate).format("HH:mm")][item.BOOKING_ID]={BOOKING_ID:item.BOOKING_ID,WRK_SURNAME:item.WRK_SURNAME,DOCUMENT_STATUS:item.DOCUMENT_STATUS,STYLE_CLASS:styleClass})}}})},$scope.getDocumentStatusSummaryInWeek(dateStartWeek,dateEndWeek),$scope.isAdminGetFiles=!0,$scope.accordionStatus={status1:!0},$scope.isAdminUpload=!0,$scope.getBookingDetail=function(bookingId){rlobService.getBookingById(bookingId).then(function(data){"success"==data.status&&($scope.selectedBooking=data.data,$("#rlob-booking-detail-popup").modal({show:!0,backdrop:"static"}))},function(err){})},$("#rlob-booking-detail-popup").on("hide.bs.modal",function(e){$scope.getDocumentStatusSummaryInWeek(dateStartWeek,dateEndWeek)})});var kiss={concat:function(){for(var str="",i=0;i<arguments.length;i++)str+=arguments[i];return str},msToTimer:function(num){var timerItem={x:null,hour:null,minute:null,second:null,display:null};timerItem.x=num,timerItem.hour=Math.floor(timerItem.x/3600);var temp=timerItem.x%3600;timerItem.minute=Math.floor(temp/60);var temp=timerItem.x%60;timerItem.second=temp;var pad=function(num,size){var s="000000000"+num;return s.substr(s.length-size)};return timerItem.display=pad(timerItem.hour,2)+":"+pad(timerItem.minute,2)+":"+pad(timerItem.second,2),timerItem}};angular.module("app.kiss.timer.directive",[]).directive("kissTimer",function($interval){return{restrict:"E",scope:{startSessionTime:"=",returnValue:"="},templateUrl:"modules/kissModule/directives/templates/kissTimer.html",link:function($scope,element,attrs){var run=function(){var startSessionTime=moment(new Date($scope.startSessionTime)),currentTime=moment(),x=currentTime.diff(startSessionTime,"seconds"),timerItem={x:null,hour:null,minute:null,second:null};timerItem.x=x,timerItem.hour=Math.floor(timerItem.x/3600);var temp=timerItem.x%3600;timerItem.minute=Math.floor(temp/60);var temp=timerItem.x%60;timerItem.second=temp;var pad=function(num,size){var s="000000000"+num;return s.substr(s.length-size)},updateTime=function(){timerItem.hour=Math.floor(timerItem.x/3600);var temp=timerItem.x%3600;timerItem.minute=Math.floor(temp/60);var temp=timerItem.x%60;timerItem.second=temp,timerItem.x=timerItem.x+1,$scope.returnValue=pad(timerItem.hour,2)+":"+pad(timerItem.minute,2)+":"+pad(timerItem.second,2)};$scope.timer=$interval(updateTime,1e3)};$scope.$watch("startSessionTime",function(newValue,oldValue){$scope.startSessionTime&&("close"!=$scope.startSessionTime?run():$interval.cancel($scope.timer))}),element.on("$destroy",function(){$interval.cancel($scope.timer)})}}}),angular.module("app.loggedIn.rlob.paperless.controller",[]).controller("rlob_paperlessController",function($scope,rlobService,$cookieStore,$state){$scope.userType=rlobConstant.userType,$scope.loginInfo=$cookieStore.get("userInfo").user_type,console.log($scope.loginInfo),$scope.isDoctor=!0,$scope.loginInfo==$scope.userType.doctor&&($scope.isDoctor=!1),$scope.isAdmin=!0,$scope.loginInfo==$scope.userType.admin&&($scope.isAdmin=!1),$scope.isAssistant=!0,$scope.loginInfo==$scope.userType.assistant&&($scope.isAssistant=!1),console.log($scope.userType.doctor)}),angular.module("app.loggedIn.rlob.paperless.ams6.controller",[]).controller("rlob_paperless_ams6Controller",function($scope,rlobService,toastr,ConfigService){rlobService.checkBookingInFormAms6(rlobService.bookingInfoPaperless.id).then(function(data){"update"==data.status&&($scope.update=!0,$scope.info=data.data,
$scope.info.WRK_DATE_OF_BIRTH_TEMP=null!=data.data.WRK_DATE_OF_BIRTH?new Date(data.data.WRK_DATE_OF_BIRTH):null,$scope.info.WRK_DATE_OF_INJURI_TEMP=null!=data.data.WRK_DATE_OF_INJURI?new Date(data.data.WRK_DATE_OF_INJURI):null,$scope.info.DATE_ASSESS_TEMP=null!=data.data.DATE_ASSESS?new Date(data.data.DATE_ASSESS):null,$scope.info.DT_DATE_TEMP=null!=data.data.DT_DATE?new Date(data.data.DT_DATE):new Date,console.log("update a6:"+$scope.update),console.log($scope.info),$scope.isSaving=!0),"insert"==data.status&&($scope.insert=!0,rlobService.getBookingDoctorCompany(rlobService.bookingInfoPaperless.id).then(function(data){"success"==data.status&&($scope.info.WRK_NAME=data.data.WRK_SURNAME+" "+data.data.WRK_OTHERNAMES,$scope.info.WRK_PHONE=data.data.WRK_PHONE,$scope.info.WRK_EMAIL=data.data.WRK_EMAIL,$scope.info.WRK_DATE_OF_BIRTH_TEMP=null!=data.data.WRK_DATE_OF_BIRTH?new Date(data.data.WRK_DATE_OF_BIRTH):null,$scope.info.WRK_DATE_OF_INJURI_TEMP=null!=data.data.WRK_DATE_OF_INJURI?new Date(data.data.WRK_DATE_OF_INJURI):null,$scope.info.EMP_ORGANISATION_NAME=data.data.EMP_ORGANISATION_NAME,$scope.info.EMP_POSTCODE=data.data.EMP_POSTCODE,$scope.info.EMP_ADDRESS_1=data.data.EMP_ADDRESS_1,$scope.info.EMP_EMAIL=data.data.EMP_EMAIL,$scope.info.EMP_PHONE=data.data.EMP_PHONE,$scope.info.DT_NAME=data.data.DT_NAME,$scope.info.DT_ADDRESS_1=data.data.DT_ADDRESS_1,$scope.info.DT_EMAIL=data.data.DT_EMAIL,$scope.info.DT_PHONE=data.data.DT_PHONE,$scope.info.DT_SIGNATURE=data.data.DT_SIGNATURE,$scope.info.DT_DATE_TEMP=new Date,console.log($scope.info))}),$scope.isSaving=!1,console.log("insert a6:"+$scope.insert))}),$scope.info={AMS6_ID:null,BOOKING_ID:rlobService.bookingInfoPaperless.id,WRK_NAME:null,WRK_ADDRESS_1:null,WRK_ADDRESS_2:null,WRK_POSTCODE:null,WRK_DATE_OF_BIRTH_TEMP:null,WRK_DATE_OF_BIRTH:null,WRK_DATE_OF_INJURI:null,WRK_DATE_OF_INJURI_TEMP:null,WRK_INSURER_CLAIM_NUMBER:null,WRK_DESCRIPTION_OF_INJURI:null,WRK_PHONE:null,WRK_EMAIL:null,WRK_WORKCOVER_WA_CLAIM_NUMBER:null,COMPANIES_ID:null,EMP_ORGANISATION_NAME:null,EMP_CONTACT_PERSON:null,EMP_ADDRESS_1:null,EMP_ADDRESS_2:null,EMP_POSTCODE:null,EMP_PHONE:null,EMP_EMAIL:null,EMP_NAME_OF_INSURER:null,EMP_WORKCOVER_MUNBER:null,PURPOSE_OF_THE_ASSESSMENT:null,DATE_ASSESS:null,DATE_ASSESS_TEMP:null,INJURY_ASSESSMENT:null,DOCTOR_ID:null,DT_DATE_TEMP:null,DT_DATE:null,DT_SIGNATURE:null,DT_NAME:null,DT_ADDRESS_1:null,DT_ADDRESS_2:null,DT_POSTCODE:null,DT_PHONE:null,DT_EMAIL:null,ISENABLE:null},$scope.scrollTo=function(el,offeset){var pos=el&&el.size()>0?el.offset().top:0;el&&($("body").hasClass("page-header-fixed")&&(pos-=$(".page-header").height()),pos+=offeset?offeset:-1*el.height()),$("html,body").animate({scrollTop:pos},"slow")};var tempSignature;$scope.isSignature=!1,$scope.showSignature=function(){$scope.isSignature=!$scope.isSignature},$scope.cancelClick=function(){$scope.isSignature=!$scope.isSignature,$scope.info.DT_SIGNATURE=tempSignature},$scope.clearClick=function(){$scope.info.DT_SIGNATURE=""},$scope.okClick=function(){$scope.isSignature=!$scope.isSignature,tempSignature=$scope.info.DT_SIGNATURE},$scope.addNewFormAMS6=function(info){$scope.$broadcast("show-errors-check-validity"),$scope.FormAms6.$valid?(1==$scope.update&&($scope.info.WRK_DATE_OF_BIRTH=null!=info.WRK_DATE_OF_BIRTH_TEMP?ConfigService.getCommonDate(info.WRK_DATE_OF_BIRTH_TEMP):null,$scope.info.WRK_DATE_OF_INJURI=null!=info.WRK_DATE_OF_INJURI_TEMP?ConfigService.getCommonDate(info.WRK_DATE_OF_INJURI_TEMP):null,$scope.info.DATE_ASSESS=null!=info.DATE_ASSESS_TEMP?ConfigService.getCommonDate(info.DATE_ASSESS_TEMP):null,$scope.info.DT_DATE=null!=info.DT_DATE_TEMP?ConfigService.getCommonDate(info.DT_DATE_TEMP):null,console.log($scope.info),null!=info.BOOKING_ID&&""!=info.BOOKING_ID?rlobService.updateFromAms6(info).then(function(data){"success"==data.status?(toastr.success("Update Success!","Success"),$scope.isSaving=!0,$scope.scrollTo($("#bodydata']"),-200)):toastr.error("Update Failed!","Error")}):toastr.error("Not Booking Id!","Error")),1==$scope.insert&&($scope.info.WRK_DATE_OF_BIRTH=null!=info.WRK_DATE_OF_BIRTH_TEMP?ConfigService.getCommonDate(info.WRK_DATE_OF_BIRTH_TEMP):null,$scope.info.WRK_DATE_OF_INJURI=null!=info.WRK_DATE_OF_INJURI_TEMP?ConfigService.getCommonDate(info.WRK_DATE_OF_INJURI_TEMP):null,$scope.info.DATE_ASSESS=null!=info.DATE_ASSESS_TEMP?ConfigService.getCommonDate(info.DATE_ASSESS_TEMP):null,$scope.info.DT_DATE=null!=info.DT_DATE_TEMP?ConfigService.getCommonDate(info.DT_DATE_TEMP):null,console.log($scope.info),null!=info.BOOKING_ID&&""!=info.BOOKING_ID?rlobService.addNewFromAms6(info).then(function(data){"success"==data.status?(toastr.success("Insert Success!","Success"),$scope.isSaving=!0,$scope.info.AMS6_ID=data.data,console.log($scope.info),$scope.scrollTo($("#bodydata]"),-200)):toastr.error("Insert Failed!","Error")}):toastr.error("Not Booking Id!","Error"))):($scope.hadForcused=!0,$(".errorSummaryAms6").show())},$scope.edit=!1,$scope.editFormAms6=function(){$scope.isSaving=!1,$scope.edit=!0},$scope.updateFormAMS6=function(info){$scope.$broadcast("show-errors-check-validity"),$scope.FormAms6.$valid?($scope.info.WRK_DATE_OF_BIRTH=null!=info.WRK_DATE_OF_BIRTH_TEMP?ConfigService.getCommonDate(info.WRK_DATE_OF_BIRTH_TEMP):null,$scope.info.WRK_DATE_OF_INJURI=null!=info.WRK_DATE_OF_INJURI_TEMP?ConfigService.getCommonDate(info.WRK_DATE_OF_INJURI_TEMP):null,$scope.info.DATE_ASSESS=null!=info.DATE_ASSESS_TEMP?ConfigService.getCommonDate(info.DATE_ASSESS_TEMP):null,$scope.info.DT_DATE=null!=info.DT_DATE_TEMP?ConfigService.getCommonDate(info.DT_DATE_TEMP):null,console.log($scope.info),console.log(info),null!=info.BOOKING_ID&&""!=info.BOOKING_ID?rlobService.updateFromAms6(info).then(function(data){"success"==data.status?(toastr.success("Edit Success!","Success"),$scope.isSaving=!0,$scope.scrollTo($("#bodydata"),-200)):toastr.error("Edit Failed!","Error")}):toastr.error("Not Booking Id!","Error")):($scope.hadForcused=!0,$(".errorSummaryAms6").show())},$scope.goToName=function(name){$scope.scrollTo($("[name='"+name+"']"),-200)},$scope.cancelFormAms6=function(){$scope.isSaving=!0}}),angular.module("app.loggedIn.rlob.paperless.ams5.controller",[]).controller("rlob_paperless_ams5Controller",function($scope,rlobService,toastr,ConfigService){rlobService.checkBookingInFormAms5(rlobService.bookingInfoPaperless.id).then(function(data){"update"==data.status&&($scope.updateAMS5=!0,$scope.info=data.data,$scope.info.WRK_DATE_OF_BIRTH_TEMP=null!=data.data.WRK_DATE_OF_BIRTH?new Date(data.data.WRK_DATE_OF_BIRTH):null,$scope.info.WRK_DATE_OF_INJURI_TEMP=null!=data.data.WRK_DATE_OF_INJURI?new Date(data.data.WRK_DATE_OF_INJURI):null,$scope.info.EX_DATE_TEMP=null!=data.data.EX_DATE?new Date(data.data.EX_DATE):null,$scope.info.DT_DATE_TEMP=null!=data.data.DT_DATE?new Date(data.data.DT_DATE):new Date,console.log(data.data),console.log("update a5:"+$scope.updateAMS5),console.log($scope.info),$scope.isSaving=!0),"insert"==data.status&&($scope.insertAMS5=!0,rlobService.getBookingDoctorCompany(rlobService.bookingInfoPaperless.id).then(function(data){"success"==data.status&&(console.log(data.data),$scope.info.WRK_NAME=data.data.WRK_SURNAME+" "+data.data.WRK_OTHERNAMES,$scope.info.WRK_DATE_OF_BIRTH_TEMP=null!=data.data.WRK_DATE_OF_BIRTH?new Date(data.data.WRK_DATE_OF_BIRTH):null,$scope.info.WRK_DATE_OF_INJURI_TEMP=null!=data.data.WRK_DATE_OF_INJURI?new Date(data.data.WRK_DATE_OF_INJURI):null,$scope.info.WRK_PHONE=data.data.WRK_PHONE,$scope.info.WRK_EMAIL=data.data.WRK_EMAIL,$scope.info.EMP_ORGANISATION_NAME=data.data.EMP_ORGANISATION_NAME,$scope.info.EMP_POSTCODE=data.data.EMP_POSTCODE,$scope.info.EMP_ADDRESS_1=data.data.EMP_ADDRESS_1,$scope.info.EMP_EMAIL=data.data.EMP_EMAIL,$scope.info.EMP_PHONE=data.data.EMP_PHONE,$scope.info.DT_NAME=data.data.DT_NAME,$scope.info.DT_ADDRESS_1=data.data.DT_ADDRESS_1,$scope.info.DT_EMAIL=data.data.DT_EMAIL,$scope.info.DT_PHONE=data.data.DT_PHONE,$scope.info.DT_SIGNATURE=data.data.DT_SIGNATURE,$scope.info.DT_DATE_TEMP=new Date,console.log($scope.info))}),$scope.isSaving=!1,console.log("insert a5:"+$scope.insertAMS5))}),$scope.info={AMS5_ID:null,BOOKING_ID:rlobService.bookingInfoPaperless.id,WRK_NAME:null,WRK_ADDRESS_2:null,WRK_ADDRESS_1:null,WRK_POSTCODE:null,WRK_DATE_OF_BIRTH_TEMP:null,WRK_DATE_OF_BIRTH:null,WRK_DATE_OF_INJURI_TEMP:null,WRK_DATE_OF_INJURI:null,WRK_INSURER_CLAIM_NUMBER:null,WRK_DESCRIPTION_OF_INJURI:null,WRK_PHONE:null,WRK_EMAIL:null,WRK_WORKCOVER_WA_CLAIM_NUMBER:null,COMPANIES_ID:null,EMP_ORGANISATION_NAME:null,EMP_CONTACT_PERSON:null,EMP_ADDRESS_1:null,EMP_ADDRESS_2:null,EMP_POSTCODE:null,EMP_PHONE:null,EMP_EMAIL:null,EMP_NAME_OF_INSURER:null,EMP_WORKCOVER_MUNBER:null,PURPOSE_OF_THE_ASSESSMENT:null,EX_DATE_TEMP:null,EX_DATE:null,EXL_NAME:null,EXL_ADDRESS_1:null,EXL_ADDRESS_2:null,EXL_POSTCODE:null,REPORTS_AND_DOCUMENTS:null,NARRATIVE_HISTORY:null,DIAGNOSIS_AND_STUDIES:null,DIAGNOSIS_AND_IMPAIRMENTS:null,PROPORTION_OF_PERMANENT_IMPAIRMENT:null,INJURY_ASSESSMENT:null,DOCTOR_ID:null,DT_DATE_TEMP:null,DT_DATE:null,DT_SIGNATURE:null,DT_NAME:null,DT_ADDRESS_1:null,DT_ADDRESS_2:null,DT_POSTCODE:null,DT_PHONE:null,DT_EMAIL:null},$scope.scrollTo=function(el,offeset){var pos=el&&el.size()>0?el.offset().top:0;el&&($("body").hasClass("page-header-fixed")&&(pos-=$(".page-header").height()),pos+=offeset?offeset:-1*el.height()),$("html,body").animate({scrollTop:pos},"slow")};var tempSignature;$scope.isSignature=!1,$scope.showSignature=function(){$scope.isSignature=!$scope.isSignature},$scope.cancelClick=function(){$scope.isSignature=!$scope.isSignature,$scope.info.DT_SIGNATURE=tempSignature},$scope.clearClick=function(){$scope.info.DT_SIGNATURE=""},$scope.okClick=function(){$scope.isSignature=!$scope.isSignature,tempSignature=$scope.info.DT_SIGNATURE},$scope.addNewFormAMS5=function(info){$scope.$broadcast("show-errors-check-validity"),$scope.FormAms5.$valid?(1==$scope.updateAMS5&&($scope.info.WRK_DATE_OF_BIRTH=null!=info.WRK_DATE_OF_BIRTH_TEMP?ConfigService.getCommonDate(info.WRK_DATE_OF_BIRTH_TEMP):null,$scope.info.WRK_DATE_OF_INJURI=null!=info.WRK_DATE_OF_INJURI_TEMP?ConfigService.getCommonDate(info.WRK_DATE_OF_INJURI_TEMP):null,$scope.info.EX_DATE=null!=info.EX_DATE_TEMP?ConfigService.getCommonDate(info.EX_DATE_TEMP):null,$scope.info.DT_DATE=null!=info.DT_DATE_TEMP?ConfigService.getCommonDate(info.DT_DATE_TEMP):null,console.log($scope.info),null!=info.BOOKING_ID&&""!=info.BOOKING_ID?rlobService.updateFromAms5(info).then(function(data){"success"==data.status?(toastr.success("Update Success!","Success"),$scope.isSaving=!0,$scope.scrollTo($("#bodydata"),-200)):toastr.error("Update Failed!","Error")}):toastr.error("Not Booking Id!","Error")),1==$scope.insertAMS5&&($scope.info.WRK_DATE_OF_BIRTH=null!=info.WRK_DATE_OF_BIRTH_TEMP?ConfigService.getCommonDate(info.WRK_DATE_OF_BIRTH_TEMP):null,$scope.info.WRK_DATE_OF_INJURI=null!=info.WRK_DATE_OF_INJURI_TEMP?ConfigService.getCommonDate(info.WRK_DATE_OF_INJURI_TEMP):null,$scope.info.EX_DATE=null!=info.EX_DATE_TEMP?ConfigService.getCommonDate(info.EX_DATE_TEMP):null,$scope.info.DT_DATE=null!=info.DT_DATE_TEMP?ConfigService.getCommonDate(info.DT_DATE_TEMP):null,console.log($scope.info),null!=info.BOOKING_ID&&""!=info.BOOKING_ID?rlobService.addNewFromAms5(info).then(function(data){"success"==data.status?(toastr.success("Insert Success!","Success"),$scope.isSaving=!0,$scope.info.AMS5_ID=data.data,console.log($scope.info),$scope.scrollTo($("#bodydata"),-200)):toastr.error("Insert Failed!","Error")}):toastr.error("Not Booking Id!","Error"))):($scope.hadForcused=!0,$(".errorSummaryAms5").show())},$scope.edit=!1,$scope.editFormAms5=function(){$scope.isSaving=!1,$scope.edit=!0},$scope.updateFormAMS5=function(info){$scope.$broadcast("show-errors-check-validity"),$scope.FormAms5.$valid?($scope.info.WRK_DATE_OF_BIRTH=null!=info.WRK_DATE_OF_BIRTH_TEMP?ConfigService.getCommonDate(info.WRK_DATE_OF_BIRTH_TEMP):null,$scope.info.WRK_DATE_OF_INJURI=null!=info.WRK_DATE_OF_INJURI_TEMP?ConfigService.getCommonDate(info.WRK_DATE_OF_INJURI_TEMP):null,$scope.info.EX_DATE=null!=info.EX_DATE_TEMP?ConfigService.getCommonDate(info.EX_DATE_TEMP):null,$scope.info.DT_DATE=null!=info.DT_DATE_TEMP?ConfigService.getCommonDate(info.DT_DATE_TEMP):null,console.log($scope.info),console.log(info),null!=info.BOOKING_ID&&""!=info.BOOKING_ID?rlobService.updateFromAms5(info).then(function(data){"success"==data.status?(toastr.success("Edit Success!","Success"),$scope.isSaving=!0,$scope.scrollTo($("#bodydata"),-200)):toastr.error("Edit Failed!","Error")}):toastr.error("Not Booking Id!","Error")):($scope.hadForcused=!0,$(".errorSummaryAms5").show())},$scope.goToName=function(name){$scope.scrollTo($("[name='"+name+"']"),-200)},$scope.cancelFormAms5=function(){$scope.isSaving=!0}}),angular.module("app.loggedIn.rlob.rltype.controller",[]).controller("rlob_rltypeController",function($scope,rlobService,toastr){$scope.bookingType=rlobConstant.bookingType,$scope.setListRltype=function(){rlobService.getlistRlType().then(function(data){"success"==data.status&&($scope.listRlType=data.data)})},$scope.setListRltype(),$scope.showPopupAddNewType=function(){$scope.name=null,$scope.sourceName=null,$("#rlob-type-insert-popup").modal({show:!0,backdrop:"static"})},$scope.insertRlType=function(name,sourceName){rlobService.insertRlTypes(name,sourceName).then(function(data){"success"==data.status&&($scope.setListRltype(),$("#rlob-type-insert-popup").modal("hide"),toastr.success("Insert Success!","Success")),"fail"==data.status&&($("#rlob-type-insert-popup").modal("hide"),toastr.error("Insert Failed!","Error"))})},$scope.showPopupEditType=function(type){$scope.name=type.Rl_TYPE_NAME,$scope.sourceName=type.SOURCE_TYPE,$scope.enable=type.ISENABLE,$scope.idType=type.RL_TYPE_ID,$("#rlob-type-edit-popup").modal({show:!0,backdrop:"static"})},$scope.updateRltype=function(idType,name,sourceName,enable){rlobService.updateRlTypes(idType,name,sourceName,enable).then(function(data){"success"==data.status&&($scope.setListRltype(),$("#rlob-type-edit-popup").modal("hide"),toastr.success("Update Success!","Success")),"fail"==data.status&&($("#rlob-type-edit-popup").modal("hide"),toastr.error("Update Failed!","Error"))})}}),angular.module("app.loggedIn.rlob.specialties.controller",[]).controller("rlob_specialtiesController",function($scope,rlobService,toastr){$scope.setListSpecialties=function(){rlobService.getListSpecialties().then(function(data){"success"==data.status&&($scope.listSpecialties=data.data)})},$scope.setListSpecialtiesType=function(){rlobService.getlistRlType().then(function(data){"success"==data.status&&($scope.listSpecialtiesType=data.data)})},$scope.setListSpecialties(),$scope.showPopupAddNewSpecialties=function(){$scope.specialtiesName=null,$scope.specialtiesType=null,$scope.setListSpecialtiesType(),$("#rlob-specialties-insert-popup").modal({show:!0,backdrop:"static"})},$scope.insertSpecialties=function(specialtiesName,specialtiesType){rlobService.insertSpecialties(specialtiesName,specialtiesType).then(function(data){"success"==data.status&&($scope.setListSpecialties(),$("#rlob-specialties-insert-popup").modal("hide"),toastr.success("Insert Success!","Success")),"fail"==data.status&&($("#rlob-specialties-insert-popup").modal("hide"),toastr.error("Insert Failed!","Error"))})},$scope.showPopupEditSpecialties=function(specialties){$scope.specialtiesId=specialties.Specialties_id,$scope.specialtiesName=specialties.Specialties_name,$scope.specialtiesType=specialties.RL_TYPE_ID,$scope.enable=specialties.Isenable,$scope.setListSpecialtiesType(),$("#rlob-specialties-edit-popup").modal({show:!0,backdrop:"static"})},$scope.updateSpecialties=function(specialtiesId,specialtiesName,specialtiesType,enable){rlobService.updateSpecialties(specialtiesId,specialtiesName,specialtiesType,enable).then(function(data){"success"==data.status&&($scope.setListSpecialties(),$("#rlob-specialties-edit-popup").modal("hide"),toastr.success("Update Success!","Success")),"fail"==data.status&&($("#rlob-specialties-edit-popup").modal("hide"),toastr.error("Update Failed!","Error"))})}}),angular.module("app.sponsor1.controller",[]).controller("rlobSponsor1Controller",function($scope){}),angular.module("app.calendar.mobile.controller",[]).controller("rlobCalendarMobileMasterController",function(socket,$modal,$scope,toastr,$http,$stateParams,Mailto,$cookieStore,$window,rlobService,$timeout,ConfigService,$state){$scope.loginInfo=$cookieStore.get("userInfo"),$scope.selectedFilter={locationSelected:{},rltypeSelected:{},clnSpecialitySelected:{},doctorSelected:{},var1:moment(new Date).format("DD/MM/YYYY")},console.log($scope.selectedFilter.var1),$("#daydatepicker").datepicker({changeMonth:!0,changeYear:!0,dateFormat:"dd/mm/yy",onSelect:function(date){$scope.selectedFilter.var1=date,console.log($scope.selectedFilter.var1),$scope.updateAppoinmentsList(),$scope.getLocationsFilter(),$scope.getDoctorsFilter()}}),$scope.getLocationsFilter=function(){var date=new Date(moment($scope.selectedFilter.var1,"DD-MM-YYYY HH:mm Z"));rlobService.ListLocationMobile(date).then(function(data){"success"==data.status&&($scope.locationsFilter=data.data)})},$scope.getLocationsFilter(),$scope.getDoctorsFilter=function(){var date=new Date(moment($scope.selectedFilter.var1,"DD-MM-YYYY HH:mm Z"));rlobService.ListDoctorMobile(date).then(function(data){"success"==data.status&&($scope.doctorsFilter=data.data)})},$scope.getDoctorsFilter(),$scope.updateAppoinmentsList=function(){var doctorId=$scope.selectedFilter.doctorSelected&&$scope.selectedFilter.doctorSelected.doctor_id?$scope.selectedFilter.doctorSelected.doctor_id:"%",locationId=$scope.selectedFilter.locationSelected&&$scope.selectedFilter.locationSelected.id?$scope.selectedFilter.locationSelected.id:"%",fromTime=$scope.selectedFilter.var1.split("/").reverse().join("-");$http({method:"GET",url:"/api/rlob/appointment-calendar/get-appointment-calendar-not-service",params:{DOCTOR_ID:doctorId,SITE_ID:locationId,FROM_TIME:fromTime}}).success(function(data){for(var temp={DOCTOR_ITEMS:[]},i=0;i<data.length;i++)temp[data[i].DOCTOR_ID]||(temp[data[i].DOCTOR_ID]={LOCATION_ITEMS:[]},temp.DOCTOR_ITEMS.push({DOCTOR_ID:data[i].DOCTOR_ID,DOCTOR_NAME:data[i].NAME})),temp[data[i].DOCTOR_ID][data[i].SITE_ID]||(temp[data[i].DOCTOR_ID][data[i].SITE_ID]={APPOINTMENT_ITEMS:[]},temp[data[i].DOCTOR_ID].LOCATION_ITEMS.push({SITE_ID:data[i].SITE_ID,SITE_NAME:data[i].Site_name})),temp[data[i].DOCTOR_ID][data[i].SITE_ID][data[i].CAL_ID]||(temp[data[i].DOCTOR_ID][data[i].SITE_ID][data[i].CAL_ID]={},temp[data[i].DOCTOR_ID][data[i].SITE_ID].APPOINTMENT_ITEMS.push({CAL_ID:data[i].CAL_ID,APPOINTMENT_TIME:data[i].appointment_time,FROM_TIME:data[i].FROM_TIME,DOCTOR_ID:data[i].DOCTOR_ID,SITE_ID:data[i].SITE_ID,DOCTOR_NAME:data[i].NAME,SITE_NAME:data[i].Site_name}));for(var arr=[],i=0;i<temp.DOCTOR_ITEMS.length;i++){var doctor_item=temp.DOCTOR_ITEMS[i];doctor_item.LOCATION_ITEMS=[];for(var j=0;j<temp[doctor_item.DOCTOR_ID].LOCATION_ITEMS.length;j++){var location_item=temp[doctor_item.DOCTOR_ID].LOCATION_ITEMS[j];location_item.APPOINTMENT_ITEMS=[],doctor_item.LOCATION_ITEMS.push(location_item);for(var k=0;k<temp[doctor_item.DOCTOR_ID][location_item.SITE_ID].APPOINTMENT_ITEMS.length;k++){var appointment_item=temp[doctor_item.DOCTOR_ID][location_item.SITE_ID].APPOINTMENT_ITEMS[k];location_item.APPOINTMENT_ITEMS.push(appointment_item)}}arr.push(doctor_item)}$scope.appointmentsFilter=arr}).error(function(data){console.log("error")})["finally"](function(){})},$scope.updateAppoinmentsList(),$scope.CAL_ID=null;var selectCalendar=null;$scope.selectAppointmentCalendar=function(appointmentCalendar){$scope.selectedAppointmentCalendar=appointmentCalendar,$scope.CAL_ID=appointmentCalendar.CAL_ID,$scope.updateAppoinmentsList(),selectCalendar=$scope.selectedAppointmentCalendar},$scope.submitCalendar=function(){$scope.patientInfoCalendar.Patient_id?$scope.selectedAppointmentCalendar?(console.log("hehe",selectCalendar),rlobService.addApptPatient($scope.patientInfoCalendar.Patient_id,$scope.selectedAppointmentCalendar.CAL_ID).then(function(data){if("success"==data.status){socket.emit("notifyReceptionist"),socket.emit("notifyDoctor",selectCalendar.DOCTOR_ID);{$modal.open({templateUrl:"notifyid",controller:function($scope,$modalInstance,$state){console.log("zooooooo",selectCalendar),$scope.selectCalendar=selectCalendar},size:"sm",backdrop:"static"})}}else toastr.error("Booking fail!","Error")})):toastr.error("Booking not yet selected","Error"):toastr.error("No information available on the patient","Error")}}),angular.module("app.sponsor1.emergency.controller",[]).controller("rlobEmergencyController",function($scope,FileUploader,rlobService,toastr,$http){$scope.geoLocation=function(){var map=new GMaps({div:"#map",lat:0,lng:0});GMaps.geolocate({success:function(position){$scope.Lng=position.coords.longitude,$scope.Lat=position.coords.latitude,console.log($scope.Lat),console.log($scope.Lng),map.setCenter($scope.Lat,$scope.Lng),map.addMarker({lat:$scope.Lat,lng:$scope.Lng,icon:"http://www.icon100.com/up/4144/32/102-map-marker.png"}),$http.get("https://maps.googleapis.com/maps/api/geocode/json?latlng="+$scope.Lat+","+$scope.Lng+"&sensor=true").then(function(data){$scope.address=data.data.results[0].formatted_address,console.log(data.data)}),angular.element("#map").css("opacity","1"),angular.element("#dob-confix").css("margin-top","0px")},error:function(error){alert("Geolocation failed: "+error.message)},not_supported:function(){alert("Your browser does not support geolocation")}})};var uploader=$scope.uploader=new FileUploader;console.log($scope.uploader);var uploader=$scope.uploader=new FileUploader({url:"/api/rlob/sponsor/upload"});uploader.filters.push({name:"customFilter",fn:function(item,options){return this.queue.length<10}}),uploader.onWhenAddingFileFailed=function(item,filter,options){},uploader.onAfterAddingFile=function(fileItem){},uploader.onAfterAddingAll=function(addedFileItems){},uploader.onBeforeUploadItem=function(item){},uploader.onProgressItem=function(fileItem,progress){},uploader.onProgressAll=function(progress){},uploader.onSuccessItem=function(fileItem,response,status,headers){},uploader.onErrorItem=function(fileItem,response,status,headers){},uploader.onCancelItem=function(fileItem,response,status,headers){},uploader.onCompleteItem=function(fileItem,response,status,headers){},uploader.onCompleteAll=function(){},$scope.scrollTo=function(el,offeset){var pos=el&&el.size()>0?el.offset().top:0;el&&($("body").hasClass("page-header-fixed")&&(pos-=$(".page-header").height()),pos+=offeset?offeset:-1*el.height()),$("html,body").animate({scrollTop:pos},0)},console.info("uploader",uploader),$scope.insertEmergency=function(){$scope.$broadcast("show-errors-check-validity"),$scope.gender?(angular.element("#label-gender").css("display","none"),$scope.FormEmergency.$valid&&($scope.info={FIRSTNAME:$scope.fristname,LASTNAME:$scope.lastname,GENDER:$scope.gender,DOB:moment($scope.dob).format("YYYY/MM/DD"),ADD:$scope.address,CONTACT_NO:$scope.contactus,MEDICARE_NO:$scope.medicareno,MEDICARE_REF:$scope.medicareref,LONGITUDE:$scope.Lng,LATITUDE:$scope.Lat,INJURY:$scope.injury},rlobService.insertEmergency($scope.info).then(function(data){if("success"==data.status){toastr.success("Booking Success!","Success");for(var i=0;i<uploader.queue.length;i++){var item=uploader.queue[i];item.formData[i]={},item.formData[i].sponsor_id=data.data}uploader.uploadAll(),angular.element("#form-config").css("display","none"),angular.element("#data-success").css("display","block"),$scope.scrollTo($(".logo"))}else toastr.error("Booking Failed!","Error")}))):(angular.element("#label-gender").css("display","block"),$scope.scrollTo($(".logo")))},$scope.updateMap=function(){var map=new GMaps({div:"#map",lat:0,lng:0});map.removeMarker(),GMaps.geocode({address:$scope.address,callback:function(results,status){if("OK"==status){var latlng=results[0].geometry.location;map.setCenter(latlng.lat(),latlng.lng()),$scope.Lat=latlng.lat(),$scope.Lng=latlng.lng(),map.addMarker({lat:$scope.Lat,lng:$scope.Lng,icon:"http://www.icon100.com/up/4144/32/102-map-marker.png",infoWindow:{content:"<p>"+$scope.address+"</p>"}}),angular.element("#map").css("opacity","1"),angular.element("#dob-confix").css("margin-top","0px")}}})},$scope.setColorMedicareRef=function(){null!=$scope.medicareref&&""!=$scope.medicareref?$("#medicareref-confix").addClass("color-label"):$("#medicareref-confix").removeClass("color-label")},$scope.setColorMedicareNo=function(){null!=$scope.medicareno&&""!=$scope.medicareno?$("#medicareno-confix").addClass("color-label"):$("#medicareno-confix").removeClass("color-label")}}),angular.module("app.sponsor1.nonemergency.controller",[]).controller("rlobNonEmergencyController",function($scope,rlobService,$window,toastr){$scope.bookingType=rlobConstant.bookingType.REDiLEGAL.name,$scope.scrollTo=function(el,offeset){var pos=el&&el.size()>0?el.offset().top:0;el&&($("body").hasClass("page-header-fixed")&&(pos-=$(".page-header").height()),pos+=offeset?offeset:-1*el.height()),$("html,body").animate({scrollTop:pos},0)},$scope.showCalendar=function(){angular.element("#form-data").css("display","none"),angular.element("#caledar-data").css("display","block"),$scope.scrollTo($(".logo"))},$scope.showFormData=function(){angular.element("#form-data").css("display","block"),angular.element("#caledar-data").css("display","none"),$scope.scrollTo($(".logo"))},$scope.insertNonEmergency=function(){$scope.$broadcast("show-errors-check-validity"),$scope.gender?angular.element("#label-gender").css("display","none"):(angular.element("#label-gender").css("display","block"),$scope.showFormData()),$scope.FormNonemergency.$valid?($scope.info={FIRSTNAME:$scope.fristname,LASTNAME:$scope.lastname,GENDER:$scope.gender,DOB:moment($scope.dob).format("YYYY/MM/DD"),CONTACT_NO:$scope.contactus,MEDICARE_NO:$scope.medicareno,MEDICARE_REF:$scope.medicareref,INJURY:$scope.injury,LONGITUDE:$scope.Lng,LATITUDE:$scope.Lat,CAL_ID:$scope.selectedAppointmentCalendar.CAL_ID},console.log($scope.info),rlobService.insertNonEmergency($scope.info).then(function(data){"success"==data.status?(angular.element("#caledar-data").css("display","none"),angular.element("#data-success").css("display","block"),toastr.success("Booking Success!","Success")):toastr.error("Booking Failed!","Error")})):$scope.showFormData()},$scope.setColorMedicareRef=function(){null!=$scope.medicareref&&""!=$scope.medicareref?$("#medicareref-confix").addClass("color-label"):$("#medicareref-confix").removeClass("color-label")},$scope.setColorMedicareNo=function(){null!=$scope.medicareno&&""!=$scope.medicareno?$("#medicareno-confix").addClass("color-label"):$("#medicareno-confix").removeClass("color-label")}}),angular.module("app.rlobRegister.controller",[]).controller("rlobRegisterController",function($scope,$state,$cookieStore,SecurityService,rlobService,toastr,bookingService){$scope.user=bookingService.getRegisterInfo(),$scope.user.isAccessReportOnline=1,$scope.regexEmail=/^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/,$scope.register=function(){$scope.$broadcast("show-errors-check-validity"),$scope.user.username=$scope.user.email;var checkuser="";$scope.showClickedValidation=!0,$scope.registerForm.$invalid?toastr.error("Please check form.","Error"):SecurityService.checkUserName($scope.user.username).then(function(data){checkuser=data}).then(function(){if(checkuser.length>0)$scope.showClickedValidation=!0,toastr.error("Username already exists","Error");else{$scope.user.fname=$scope.user.fname.charAt(0).toUpperCase()+$scope.user.fname.substr(1),$scope.user.lname=$scope.user.lname.charAt(0).toUpperCase()+$scope.user.lname.substr(1);var user={fullName:$scope.user.fname+" "+$scope.user.lname,email:$scope.user.email,userName:$scope.user.username,password:$scope.user.password,phone:$scope.user.phone,companyTemp:$scope.user.companyTemp,companyState:$scope.user.companyState,isAccessReportOnline:$scope.user.isAccessReportOnline?$scope.user.isAccessReportOnline:0,fname:$scope.user.fname,lname:$scope.user.lname};rlobService.insertNewUser(user).then(function(data){if("success"==data.status){toastr.success("Register Success!","Success"),angular.element("#form-data").css("display","none"),angular.element("#data-success").css("display","block");for(var i=0;i<$scope.stateList.length;i++)$scope.user.companyState==$scope.stateList[i].id&&($scope.companyStateName=$scope.stateList[i].State);bookingService.setRegisterInfo({})}else toastr.error("Register Failed!","Error")})}})},$scope.stateList=[],rlobService.getStates("Australia").then(function(data){$scope.stateList="success"==data.status?data.data:[]})}),angular.module("app.loggedIn.rlob.redilegalUsersListController.controller",[]).controller("rlob_admin_redilegalUsersListController",function($scope,rlobService,SecurityService,toastr){$scope.registerStatus=rlobConstant.registerStatus,$scope.sizePageList=[{value:10,display:"10 Rows"},{value:20,display:"20 Rows"},{value:30,display:"30 Rows"},{value:40,display:"40 Rows"},{value:50,display:"50 Rows"},{value:60,display:"60 Rows"},{value:70,display:"70 Rows"},{value:80,display:"80 Rows"},{value:90,display:"90 Rows"},{value:100,display:"100 Rows"}],$scope.searchInfoMap={currentPage:1,itemsPerPage:$scope.sizePageList[0].value,totalItems:"",maxSize:15,emailKey:"",nameKey:"",companyKey:"",statusKey:""},$scope.usersList=[],$scope.pagingHandle=function(){rlobService.getUsersList($scope.searchInfo).then(function(data){"success"==data.status?($scope.usersList=data.data.list,$scope.searchInfo.totalItems=data.data.totalItems,console.log($scope.usersList)):$scope.usersList=[]},function(err){$scope.usersList=[]})},$scope.searchHandle=function(){$scope.searchInfo.currentPage=1,$scope.pagingHandle()},$scope.reset=function(){$scope.searchInfo=angular.copy($scope.searchInfoMap),$scope.pagingHandle()},$scope.searchInfo=angular.copy($scope.searchInfoMap),$scope.searchHandle(),$scope.selectedItem={},$scope.editItem={},$scope.setSelectedItem=function(item){$scope.selectedItem=item,$scope.editItem=angular.copy($scope.selectedItem)},$scope.updateRedilegalUserStatus=function(user_name,status){return null==$scope.selectedItem.Company_name&&status!=rlobConstant.registerStatus.REJECT.value?void rlobMsg.popup(rlobLang.rlobHeader,rlobConstant.msgPopupType.error,"Please reselect the infomation of company!"):void rlobService.updateRedilegalUserStatus(user_name,status).then(function(data){"success"==data.status?(rlobMsg.popup(rlobLang.rlobHeader,rlobConstant.msgPopupType.success,"Update status success!"),$scope.selectedItem.MEDICO_LEGAL_REGISTER_STATUS=status):rlobMsg.popup(rlobLang.rlobHeader,rlobConstant.msgPopupType.error,"Update status fail!")},function(err){rlobMsg.popup(rlobLang.rlobHeader,rlobConstant.msgPopupType.error,"Update status fail!")})},$scope.companyList=[],SecurityService.company().then(function(response){$scope.companyList=response}),$scope.stateList=[],rlobService.getStates("Australia").then(function(data){$scope.stateList="success"==data.status?data.data:[]}),$scope.$watch("editItem.company_id",function(newValue,oldValue){if($scope.editItem.company_id)for(var i=0;i<$scope.companyList.length;i++){var item=$scope.companyList[i];if(item.id==$scope.editItem.company_id)return void($scope.editItem.Company_name=item.Company_name)}}),$scope.showViewAndUpdateDialog=function(){$("#rlob-view-edit-user").modal({show:!0,backdrop:"static"})},$scope.updateUser=function(){return null==$scope.editItem.Company_name&&$scope.editItem.MEDICO_LEGAL_REGISTER_STATUS!=rlobConstant.registerStatus.REJECT.value?void rlobMsg.popup(rlobLang.rlobHeader,rlobConstant.msgPopupType.error,"Please reselect the infomation of company!"):($scope.showClickedValidation=!0,void($scope.editForm.$invalid?toastr.error("Please check form.","Error"):(rlobService.updateUserInfo($scope.editItem).then(function(data){"success"==data.status?(angular.extend($scope.selectedItem,$scope.editItem),
rlobMsg.popup(rlobLang.rlobHeader,rlobConstant.msgPopupType.success,"Update success!")):rlobMsg.popup(rlobLang.rlobHeader,rlobConstant.msgPopupType.error,"Update fail!")},function(err){rlobMsg.popup(rlobLang.rlobHeader,rlobConstant.msgPopupType.error,"Update fail!")}),$("#rlob-view-edit-user").modal("hide"))))}}),angular.module("app.loggedIn.rlob.bookingBehalf.controller",[]).controller("rlob_admin_bookingBehalfController",function($scope,$state,rlobService,bookingService){$scope.registerStatus=rlobConstant.registerStatus,$scope.sizePageList=[{value:10,display:"10 Rows"},{value:20,display:"20 Rows"},{value:30,display:"30 Rows"},{value:40,display:"40 Rows"},{value:50,display:"50 Rows"},{value:60,display:"60 Rows"},{value:70,display:"70 Rows"},{value:80,display:"80 Rows"},{value:90,display:"90 Rows"},{value:100,display:"100 Rows"}],$scope.searchInfoMap={currentPage:1,itemsPerPage:$scope.sizePageList[0].value,totalItems:"",maxSize:15,emailKey:"",nameKey:"",companyKey:"",statusKey:rlobConstant.registerStatus.APPROVE.value},$scope.usersList=[],$scope.pagingHandle=function(){rlobService.getUsersList($scope.searchInfo).then(function(data){"success"==data.status?($scope.usersList=data.data.list,$scope.searchInfo.totalItems=data.data.totalItems):$scope.usersList=[]},function(err){$scope.usersList=[]})},$scope.searchHandle=function(){$scope.searchInfo.currentPage=1,$scope.pagingHandle()},$scope.reset=function(){$scope.searchInfo=angular.copy($scope.searchInfoMap),$scope.pagingHandle()},$scope.searchInfo=angular.copy($scope.searchInfoMap),$scope.searchHandle(),$scope.makeBooking=function(user){var bookingBehalfInfo={ASS_SURNAME:user.Booking_Person,ASS_OTHERNAMES:user.Booking_Person,ASS_CONTACT_NO:user.Contact_number,ASS_EMAIL:user.Contact_email,ASS_ID:user.id,COMPANY_ID:user.company_id};bookingService.setBookingBehalfInfo(bookingBehalfInfo),$state.go("loggedIn.rlob.rlob_booking")}}),angular.module("app.loggedIn.rlob.SpecialistsProfiles.controller",[]).controller("rlob_specialists_profilesController",function(){});