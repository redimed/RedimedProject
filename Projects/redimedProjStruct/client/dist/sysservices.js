angular.module("app.loggedIn.sysservices",["app.loggedIn.sysservices.directives","app.loggedIn.sysservices.services","app.loggedIn.sysservices.controller"]).config(function($stateProvider){$stateProvider.state("loggedIn.sysservices",{"abstract":!0,templateUrl:"modules/sysservices/views/structure.html",controller:"SysServicesController"}).state("loggedIn.sysservices.list",{url:"/services",views:{"main-content":{templateUrl:"modules/sysservices/views/serviceslist.html",controller:"SysServicesListController"}}}).state("loggedIn.sysservices.add",{url:"/services/add",views:{"main-content":{templateUrl:"modules/sysservices/views/serviceadd.html",controller:"SysServicesAddController"}}})}),angular.module("app.loggedIn.sysservices.services",[]).factory("SysServicesService",function(Restangular){var mdtService={},mdtApi=Restangular.all("api/meditek/v1/sysservices/");return mdtService.add=function(postData){var funcApi=mdtApi.all("add");return funcApi.post({add_data:postData})},mdtService.edit=function(id,postData){var funcApi=mdtApi.all("edit");return funcApi.post({edit_data:postData,edit_id:id})},mdtService.byId=function(id){var funcApi=mdtApi.all("byId");return funcApi.post({detail_id:id})},mdtService.search=function(option){var funcApi=mdtApi.all("search");return funcApi.post(option)},mdtService}),angular.module("app.loggedIn.sysservices.directives",["app.loggedIn.sysservices.detail.directive","app.loggedIn.sysservices.search.directive"]),angular.module("app.loggedIn.sysservices.detail.directive",[]).directive("sysservicesDetail",function($cookieStore,SysServicesModel,ConfigService,SysServicesService,toastr){return{restrict:"EA",scope:{options:"=",params:"=",isAction:"="},templateUrl:"modules/sysservices/directives/templates/detail.html",link:function(scope,element,attrs){scope.$watch("params.permission",function(){scope.params.permission.edit===!0&&(console.log("changed"),init())});var init=function(){scope.isSubmit=!1,scope.params.permission.edit===!0&&SysServicesService.byId(scope.params.id).then(function(response){"error"==response.status&&toastr.error("Error Get Detail","Error"),angular.extend(scope.SysServicesMap,response.data);for(var key in scope.SysServicesMap)scope.SysServicesMap[key]&&((-1!=key.indexOf("is")||-1!=key.indexOf("Is")||-1!=key.indexOf("IS"))&&(scope.SysServicesMap[key]=scope.SysServicesMap[key].toString()),(-1!=key.indexOf("date")||-1!=key.indexOf("Date")||-1!=key.indexOf("DATE"))&&(scope.SysServicesMap[key]=new Date(scope.SysServicesMap[key])))}),scope.SysServicesMap=angular.copy(SysServicesModel)};init(),scope.cancelUpdate=function(){scope.SysServicesMap={},scope.params.permission.edit=!1,scope.params.permission.create=!0},scope.clickAction=function(){if(scope.isSubmit=!0,scope.sysservicesForm.$invalid)toastr.error("You got some fields left","Error");else{var uID=$cookieStore.get("userInfo").id,postData=angular.copy(scope.SysServicesMap);for(var key in postData)postData[key]instanceof Date&&(postData[key]=ConfigService.getCommonDate(postData[key]));scope.params.permission.edit===!0?(postData.Last_updated_by=uID,console.log(postData),SysServicesService.edit(scope.params.id,postData).then(function(response){"error"==response.status?toastr.error("Error Get Detail","Error"):(toastr.success("Edit Successfully !!!","Success"),scope.isAction="edit",scope.SysServicesMap={},scope.params.permission.edit=!1,scope.params.permission.create=!0,init())})):(postData.Created_by=uID,SysServicesService.add(postData).then(function(data){"error"==data.status?toastr.error("Cannot Insert","Error"):(toastr.success("Insert Successfully !!!","Success"),scope.isAction="add",init())}),init())}}}}}),angular.module("app.loggedIn.sysservices.search.directive",[]).directive("sysservicesSearch",function(SysServicesService,toastr){return{restrict:"EA",scope:{clickRow:"&",isLoad:"="},templateUrl:"modules/sysservices/directives/templates/search.html",link:function(scope,element,attrs){scope.$watch("isLoad",function(newIsLoad){console.log("changed"),newIsLoad===!0&&(init(),loadList(),scope.isLoad=!1)});var init=function(){scope.list={},scope.params={pagination:{limit:100,offset:0,current_page:1,max_size:3},filters:[{type:"text",name:"SERVICE_NAME",value:""},{type:"text",name:"DESCRIPTION",value:""},{type:"text",name:"SERVICE_COLOR",value:""}],select:["SERVICE_ID","FEE_TYPE_ID","SERVICE_NAME","DESCRIPTION","SERVICE_COLOR","IS_REFERRAL","Isenable","IS_BOOKABLE"]}},loadList=function(){SysServicesService.search(scope.params).then(function(response){"error"===response.status&&toastr.error("Cannot get Seacrh","Error"),scope.list=response})};init(),loadList(),scope.setPage=function(){scope.params.pagination.offset=(scope.params.pagination.current_page-1)*scope.params.pagination.limit,loadList()}}}}),angular.module("app.loggedIn.sysservices.controller",["app.loggedIn.sysservices.list.controller"]).controller("SysServicesController",function($scope,toastr){}),angular.module("app.loggedIn.sysservices.list.controller",[]).controller("SysServicesListController",function($scope,localStorageService){$scope.params={permission:{create:!0,edit:!1}},$scope.isAction="",$scope.isLoad=!1,$scope.$watch("isAction",function(newAction){console.log("isActionChnaged"),"add"===newAction&&($scope.isLoad=!0,$scope.isAction=""),"edit"===newAction&&($scope.isLoad=!0,$scope.isAction="")}),$scope.getRow=function(row){$scope.params={permission:{create:!1,edit:!0},id:row.SERVICE_ID}}});