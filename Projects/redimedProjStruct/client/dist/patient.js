var ptnConst={apptStatus:{booking:{value:"Booking",display:"Booking"},checkedIn:{value:"Checked In",display:"Checked In"},waiting:{value:"Waiting",display:"Waiting"},urgent:{value:"Urgent",display:"Urgent"},inConsult:{value:"In Consult",display:"In Consult"},completed:{value:"Completed",display:"Completed"},billing:{value:"Billing",display:"Billing"},close:{value:"Close",display:"Close"},cancelled:{value:"Cancelled",display:"Cancelled"}},apptStatusDisplay:{Booking:"Booking","Checked In":"Checked In",Waiting:"Waiting",Urgent:"Urgent","In Consult":"In Consult",Completed:"Completed",Billing:"Billing",Close:"Close",Cancelled:"Cancelled"},unit:{mg:{value:"mg",display:"mg"},g:{value:"g",display:"g"},litre:{value:"litre",display:"litre"},tablet:{value:"tablet",display:"tablet"},capsule:{value:"capsule",display:"capsule"}},route:{PO:{value:"PO",display:"PO"},PR:{value:"PR",display:"PR"},IV:{value:"IV",display:"IV"},IM:{value:"IM",display:"IM"},SC:{value:"S/C",display:"S/C"},Topical:{value:"Topical",display:"Topical"}},frequency:{OD:{value:"1",display:"OD"},BD:{value:"2",display:"BD"},TDS:{value:"3",display:"TDS"},QID:{value:"4",display:"QID"}}};angular.module("app.loggedIn.patient",["app.loggedIn.patient.controller","app.loggedIn.patient.services","app.loggedIn.patient.directives","app.loggedIn.patient.listall.controller","app.loggedIn.patient.claim","app.loggedIn.patient.consult","app.loggedIn.patient.injuryManagement","app.loggedIn.patient.problem","app.loggedIn.patient.makecall.directive"]).config(function($stateProvider){$stateProvider.state("loggedIn.patient",{url:"/patient/:patient_id/:cal_id",templateUrl:"modules/patient/views/structure.html",controller:"PatientController"}).state("loggedIn.patient.list",{url:"/list",views:{"main-content":{templateUrl:"modules/patient/views/list.html",controller:"PatientListController"}}}).state("loggedIn.patient.appointment",{url:"/appointment",views:{"main-content":{templateUrl:"modules/patient/views/appointment.html",controller:"PatientAppointmentController"}}}).state("loggedIn.patient.detail",{url:"/detail",views:{"main-content":{templateUrl:"modules/patient/views/detail.html",controller:"PatientDetailController"}}}).state("loggedIn.patient.invoice_detail",{url:"/:header_id/invoices/detail",views:{"main-content":{templateUrl:"modules/patient/views/invoice_detail.html",controller:"PatientInvoiceDetailController"}}}).state("loggedIn.patient.invoices",{url:"/invoices",views:{"main-content":{templateUrl:"modules/patient/views/invoices.html",controller:"PatientInvoicesController"}}}).state("loggedIn.patient.recall",{url:"/recall",views:{"main-content":{templateUrl:"modules/patient/views/recall.html",controller:"PatientRecallController"}}}).state("loggedIn.patient.appt",{url:"/appt",views:{"main-content":{templateUrl:"modules/patient/views/appt.html",controller:"PatientApptListController"}}}).state("loggedIn.patient.workcover",{url:"/workcover",views:{"main-content":{templateUrl:"modules/patient/views/workcover.html",controller:"PatientWorkcoverController"}}}).state("loggedIn.patient.booking",{url:"/booking",views:{"main-content":{templateUrl:"modules/patient/views/booking.html",controller:"PatientBookingController"}}}).state("loggedIn.patient.referrals",{url:"/referrals",views:{"main-content":{templateUrl:"modules/patient/views/referrals.html",controller:"PatientReferralsController"}}}).state("loggedIn.patient.itemsheet",{url:"/appointment/itemsheet",views:{"main-content":{templateUrl:"modules/patient/views/itemsheet.html",controller:"PatientItemSheetController"}}}).state("loggedIn.patient.apptdoc",{url:"/appointment/document",views:{"main-content":{templateUrl:"modules/patient/views/apptdoc.html",controller:"PatientApptDocController"}}}).state("loggedIn.listall",{url:"/allPatients",templateUrl:"modules/patient/views/allpatients.html",controller:"PatientListAllController"}).state("loggedIn.checkin",{url:"/checkin",templateUrl:"modules/patient/views/checkin.html",controller:"PatientCheckinController"})}),angular.module("app.loggedIn.patient.services",[]).factory("PatientService",function(Restangular,ConfigService,$state){var instanceService={},appApi=Restangular.all("api"),mdtApi=Restangular.all("api/meditek/v1/patient/"),khankAPI=Restangular.all("api/erm/v2"),restfulAPI=Restangular.all("api/restful");return instanceService.getP=function(patient_id){var fP=mdtApi.all("getID");return fP.post({patient_id:patient_id})},instanceService.get=function(patient_id){return restfulAPI.one("Patient/"+patient_id).get()},instanceService.getApptClaim=function(patient_id,cal_id){return restfulAPI.one("mdtPatientClaim").get({CAL_ID:cal_id,Patient_id:patient_id})},instanceService.insertApptClaim=function(data){return restfulAPI.all("mdtPatientClaim").post(data)},instanceService.getListAllergyinPatient=function(search){var funcApi=khankAPI.all("allergy/list_patient_allergy_enable");return funcApi.post({search:search})},instanceService.numCompanies=function(patient_id){var funcApi=khankAPI.one("patients/num_companies");return funcApi.get({id:patient_id})},instanceService.numClaims=function(patient_id){var funcApi=khankAPI.one("patients/num_claims");return funcApi.get({id:patient_id})},instanceService.mumReferrals=function(patient_id){var funcApi=khankAPI.one("patients/num_referrals");return funcApi.get({id:patient_id})},instanceService.numOutReferrals=function(patient_id){var funcApi=khankAPI.one("patients/num_outside_referrals");return funcApi.get({id:patient_id})},instanceService.numScripts=function(patient_id){var funcApi=khankAPI.one("patients/num_scripts");return funcApi.get({id:patient_id})},instanceService.numDocuments=function(patient_id){var funcApi=khankAPI.one("patients/num_documents");return funcApi.get({id:patient_id})},instanceService.numRecalls=function(patient_id){var funcApi=khankAPI.one("patients/num_recalls");return funcApi.get({id:patient_id})},instanceService.checkPatietnInfo=function(First_name,Sur_name,Middle_name,DOB){var funcApi=khankAPI.all("patients/check_patient_info");return funcApi.post({First_name:First_name,Sur_name:Sur_name,Middle_name:Middle_name,DOB:DOB})},instanceService.getDoctorInfoByUserId=function(user_id){var funcApi=khankAPI.all("doctor/doctor_info_by_user_id");return funcApi.post({user_id:user_id})},instanceService.initInvoice=function(patient_id,cal_id){var funcApi=khankAPI.all("invoice/init");return funcApi.post({patient_id:patient_id,cal_id:cal_id})},instanceService.endInvoice=function(patient_id,cal_id){var funcApi=khankAPI.all("invoice/end");return funcApi.post({patient_id:patient_id,cal_id:cal_id})},instanceService.invoiceDetail=function(header_id){var funcApi=khankAPI.all("invoice/detail");return funcApi.post({header_id:header_id})},instanceService.invoiceSave=function(header_id){var funcApi=khankAPI.all("invoice/save");return funcApi.post({header_id:header_id})},instanceService.getAppointments=function(patient_id){var funcApi=khankAPI.all("patients/appointments");return funcApi.post({patient_id:patient_id})},instanceService.getRecallAppointments=function(patient_id){var funcApi=khankAPI.all("patients/recall_appointments");return funcApi.post({patient_id:patient_id})},instanceService.getRecallAppointmentsNew=function(postData){var funcApi=khankAPI.all("patients/recall_appointments_new");return funcApi.post({data:postData})},instanceService.getDeptItems=function(dept_id){var funcApi=khankAPI.all("itemsheet/dept_items");return funcApi.post({id:dept_id})},instanceService.saveItemSheet=function(listitem){var funcApi=khankAPI.all("itemsheet/insert_dept_items");return funcApi.post({list:listitem})},instanceService.getApptItems=function(appt_id,patient_id){var funcApi=khankAPI.all("itemsheet/appt_items");return funcApi.post({appt_id:appt_id,patient_id:patient_id})},instanceService.deleteFile=function(id){var funcApi=khankAPI.all("apptdoc/delete");return funcApi.post({ID:id})},instanceService.checkIn=function(cal_id,patient_id){var funcApi=khankAPI.all("appt/check_in");return funcApi.post({CAL_ID:cal_id,Patient_id:patient_id,data:{appt_status:ptnConst.apptStatus.checkedIn.value}})},instanceService.mdtVerifiedMedicare=function(options){return khankAPI.all("patient/verified_medicare").post(options)},instanceService.mdtSearch=function(options){var funcApi=mdtApi.all("search");return funcApi.post(options)},instanceService.mdtEdit=function(postData){var funcApi=mdtApi.all("edit");return funcApi.post(postData)},instanceService.mdtAdd=function(postData){var funcApi=mdtApi.all("add");return funcApi.post(postData)},instanceService.mdtById=function(Patient_id){var funcApi=mdtApi.all("byId");return funcApi.post({Patient_id:Patient_id})},instanceService.mdtInsertWaitingList=function(params){var funcApi=mdtApi.all("waiting_list/add");return funcApi.post(params)},instanceService.mdtClaimSearch=function(options){var funcApi=mdtApi.all("claim/search");return funcApi.post(options)},instanceService.getClaim=function(claim_id){var claimApi=appApi.all("patient/getClaim");return claimApi.post({Claim_id:claim_id})},instanceService.insertClaim=function(data,Patient_id,CAL_ID){var claimApi=appApi.all("patient/insertClaim");return claimApi.post({add_data:data,Patient_id:Patient_id,CAL_ID:CAL_ID})},instanceService.editClaim=function(data){var claimApi=appApi.all("patient/editClaim");return claimApi.post(data)},instanceService.getSkinApp=function(image){var skinappApi=appApi.all("v1/skinapp/patient/image");return skinappApi.post({image:image})},instanceService.update=function(patient_info){var Patient_id=patient_info.Patient_id;delete patient_info.Patient_id;var detailApi=appApi.all("erm/v2/patients/update");return detailApi.post({Patient_id:Patient_id,data:patient_info})},instanceService.getAppointment=function(patient_id,doctor_id){var detailApi=appApi.one("erm/v1/appointment/get_by_patient");return detailApi.get({patient_id:patient_id,doctor_id:doctor_id})},instanceService.getById=function(patient_id){var detailApi=appApi.one("erm/v1/patients/get_by_id");return detailApi.get({patient_id:patient_id})},instanceService.search=function(option){var listApi=appApi.all("erm/v1/patients/search");return listApi.post(option)},instanceService.getByOption=function(option){var detailApi=appApi.all("patient/get_by_option");return detailApi.post(option)},instanceService.getTotals=function(){var detailApi=appApi.one("patient/totals");return detailApi.get()},instanceService.listAccType=function(){var detailApi=appApi.one("patient/list_account_type");return detailApi.get()},instanceService.listPrvFund=function(){var detailApi=appApi.one("patient/list_private_fund");return detailApi.get()},instanceService.insertPatient=function(data){var detailApi=appApi.all("patient/insert");return detailApi.post(data)},instanceService.updatePatient=function(data){var detailApi=appApi.all("patient/update");return detailApi.post(data)},instanceService.getPatient=function(patient_id){var detailApi=appApi.all("patient/get_by_id");return detailApi.post({patient_id:patient_id})},instanceService.post=function(data){var detailApi=appApi.all("patient/post");return detailApi.post(data)},instanceService.getReferral=function(option){var detailApi=appApi.all("patient/getReferral");return detailApi.post(option)},instanceService.insertReferral=function(data){var detailApi=appApi.all("patient/insertReferral");return detailApi.post({data:data})},instanceService.updateReferral=function(data){var detailApi=appApi.all("patient/updateReferral");return detailApi.post({data:data})},instanceService.getScript=function(option){var detailApi=appApi.all("patient/getScript");return detailApi.post(option)},instanceService.updateScript=function(data){var detailApi=appApi.all("patient/updateScript");return detailApi.post({data:data})},instanceService.insertScript=function(data){var detailApi=appApi.all("patient/insertScript");return detailApi.post({data:data})},instanceService.workcoverSearch=function(patient_id){var detailApi=khankAPI.all("assessments/group_search");return detailApi.post({patient_id:patient_id})},instanceService.workcoverSearchOpt=function(type,patient_id){var cols=[],time_field={field:"Creation_date",label:"Creation date",type:"custom",fn:function(item){return ConfigService.convertToDatetime(item.Creation_date)}},doctor_field={field:"doctor",not_submit:!0,label:"Doctor",type:"custom",fn:function(item){return item.user?item.user.Booking_Person:void 0}},edit_action=null,print_href="http://testapp.redimed.com.au:3003/RedimedJavaREST/api/document/",print_action=null;switch(type){case"first":cols=[{field:"Ass_id",is_hide:!0},{field:"cal_id"},doctor_field,time_field],edit_action=function(item){$state.go("loggedIn.waworkcover.first",{action:"edit",patient_id:patient_id,cal_id:item.cal_id,wc_id:item.Ass_id})},print_action=function(item){print_href+="firstWA/"+item.Ass_id,window.open(print_href)};break;case"progress":cols=[{field:"progress_id",is_hide:!0},{field:"cal_id"},doctor_field,time_field],edit_action=function(item){$state.go("loggedIn.waworkcover.progress",{action:"edit",patient_id:patient_id,cal_id:item.cal_id,wc_id:item.progress_id})},print_action=function(item){print_href+="progressWA/"+item.progress_id,window.open(print_href)};break;case"final":cols=[{field:"id",is_hide:!0},{field:"cal_id"},doctor_field,time_field],edit_action=function(item){$state.go("loggedIn.waworkcover.final",{action:"edit",patient_id:patient_id,cal_id:item.cal_id,wc_id:item.id})},print_action=function(item){print_href+="finalWA/"+item.id,window.open(print_href)};break;case"general":cols=[{field:"id",is_hide:!0},{field:"cal_id"},doctor_field,time_field],edit_action=function(item){$state.go("loggedIn.waworkcover.general",{action:"edit",patient_id:patient_id,cal_id:item.cal_id,wc_id:item.id})},print_action=function(item){print_href+="general/"+item.id,window.open(print_href)}}return{api:"api/erm/v2/assessments/search",method:"post",columns:cols,"static":!0,search:{patient_id:patient_id,type:type},use_actions:!0,actions:[{"class":"fa fa-pencil",title:"Edit",callback:edit_action},{"class":"fa fa-print",title:"Print",callback:print_action}]}},instanceService.Add_CAL=function(data){var funcApi=mdtApi.all("appt_add");return funcApi.post({data:data})},instanceService}),angular.module("app.loggedIn.patient.directives",["app.loggedIn.patient.detail.directive","app.loggedIn.patient.claim.directive","app.loggedIn.patient.outside_referral.directive","app.loggedIn.patient.waiting_list.directive","app.loggedIn.patient.search.directive","app.loggedIn.patient.companies.directive","app.loggedIn.patient.ngthumb.directive"]),angular.module("app.loggedIn.patient.detail.directive",["app.loggedIn.patient.detail.master.controller"]).directive("patientDetail",function(){return{restrict:"EA",scope:{options:"=",isClose:"@",patient:"=",params:"=",onsuccess:"=",actionCenter:"="},templateUrl:"modules/patient/directives/templates/detail.html",controller:"PatientDetailMasterController"}}).directive("patientRegister",function(){return{restrict:"EA",scope:{options:"=",params:"=",actionCenter:"="},templateUrl:"modules/patient/directives/templates/detail-register.html",controller:"PatientDetailMasterController"}}),angular.module("app.loggedIn.patient.waiting_list.directive",[]).directive("mdtWaitingList",function(WaitingListModel,PatientService,toastr,$cookieStore){return{restrict:"EA",scope:{options:"=",isClose:"@"},templateUrl:"modules/patient/directives/templates/waiting_list.html",link:function(scope,element,attrs){var initObject=function(){scope.modelObjectMap=angular.copy(WaitingListModel),scope.modelObjectMap.Last_updated_by=$cookieStore.get("userInfo").id,scope.modelObjectMap.Created_by=$cookieStore.get("userInfo").id,scope.isSubmit=!1,scope.selectedDoctor={},scope.selectedDoctor.NAME="Select Doctor",scope.selectedDoctor.error=!0,scope.selectedPatient={},scope.selectedPatient.First_name="Select",scope.selectedPatient.Sur_name="Patient",scope.selectedPatient.error=!0};if(initObject(),scope.isClose)var idClose="#"+scope.isClose;var idSearchDoctor="#searchDoctor",idSearchPatient="#searchPatient";scope.mode={type:"add",text:"Add Waiting List"},scope.closePopup=function(){angular.element(idClose).fadeOut()},scope.selectDoctor=function(row){angular.extend(scope.selectedDoctor,row),scope.selectedDoctor.error=!1,angular.element(idSearchDoctor).fadeOut()},scope.clickDoctor=function(){angular.element(idSearchDoctor).fadeIn()},scope.selectPatient=function(row){angular.extend(scope.selectedPatient,row),scope.selectedPatient.error=!1,angular.element(idSearchPatient).fadeOut()},scope.clickPatient=function(){angular.element(idSearchPatient).fadeIn()},scope.clickAction=function(){if(scope.isSubmit=!0,!scope.waitingForm.$invalid&&!scope.selectedPatient.error&&!scope.selectedDoctor.error){var postData=angular.copy(scope.modelObjectMap);postData.doctor_id=scope.selectedDoctor.doctor_id,postData.Patient_id=scope.selectedPatient.Patient_id,"add"===scope.mode.type&&PatientService.mdtInsertWaitingList(postData).then(function(response){"success"===response.status&&(toastr.success("Insert Successfully","Success"),initObject(),scope.isClose&&scope.closePopup())},function(error){console.log("Server Error")})}}}}}),angular.module("app.loggedIn.patient.claim.directive",[]).directive("patientClaim",function(PatientService,ClaimService,ClaimModel,ConfigService,toastr,Restangular,InsurerService,$cookieStore,CompanyService){return{restrict:"EA",scope:{options:"=",isClose:"@",params:"=",claim:"="},templateUrl:"modules/patient/directives/templates/claim.html",link:function(scope,element,attrs){var patient_id=scope.params.Patient_id;scope.$watch("patientId",function(newPatientId){}),scope.$watch("params.permission.edit",function(){scope.params.permission.edit===!0&&(scope.mode={type:"edit",text:"Edit Claim"},loadInit())});var loadInit=function(){scope.params.permission.edit===!0&&PatientService.getClaim(scope.params.permission.Claim_id).then(function(response){if("success"===response.status){angular.extend(scope.modelObjectMap,response.data);for(var key in scope.modelObjectMap)scope.modelObjectMap[key]&&((-1!=key.indexOf("is")||-1!=key.indexOf("Is"))&&(scope.modelObjectMap[key]=scope.modelObjectMap[key].toString()),-1!=key.indexOf("_date")&&(scope.modelObjectMap[key]=new Date(scope.modelObjectMap[key])))}})},getInsurerInfo=function(){PatientService.mdtById(patient_id).then(function(response){"success"===response.status&&(null!==response.data.company_id&&void 0!==response.data.company_id&&""!==response.data.company_id?CompanyService.mdtById(response.data.company_id).then(function(response2){null!==response2.data.Insurer&&void 0!==response2.data.Insurer&&""!==response2.data.Insurer?InsurerService.detail(response2.data.Insurer).then(function(insurerData){null!==insurerData.row&&void 0!==insurerData.row&&""!==insurerData.row?(scope.modelObjectMap.insurer_site=insurerData.row.id,scope.modelObjectMap.Insurer=insurerData.row.insurer_name):(scope.modelObjectMap.insurer_site="",scope.modelObjectMap.Insurer="")}):(scope.modelObjectMap.insurer_site="",scope.modelObjectMap.Insurer="")}):(scope.modelObjectMap.insurer_site="",scope.modelObjectMap.Insurer=""))})};if(getInsurerInfo(),scope.isClose)var idClose="#"+scope.isClose;angular.element(idClose).fadeIn(),scope.isSubmit=!1,scope.modelObjectMap=angular.copy(ClaimModel),scope.modelObjectMap.Patient_id=patient_id,scope.modelObjectMap.insurer_site=scope.insurerId,scope.mode={type:"add",text:"Add Claim"},scope.closePopup=function(){angular.element(idClose).fadeOut(),scope.params.permission.edit=!1,scope.mode={type:"add",text:"Add Claim"};var patientid=scope.modelObjectMap.Patient_id;scope.modelObjectMap={},scope.isSubmit=!1,scope.modelObjectMap.Patient_id=patientid,scope.modelObjectMap.insurer_site=scope.insurerId,scope.modelObjectMap.Claim_date=new Date,void 0===scope.params.addClaimShow?getInsurerInfo():scope.params.addClaimShow=!1},scope.clickAction=function(option){if("view"!=option.type&&(scope.isSubmit=!0,!scope.claimForm.$invalid)){var postData=angular.copy(scope.modelObjectMap);for(var key in postData)postData[key]instanceof Date&&(postData[key]=ConfigService.getCommonDate(postData[key]));if("add"==option.type){postData.Created_by=$cookieStore.get("userInfo").id;var CAL_ID=11;console.log("ssaasas"),PatientService.insertClaim(postData,scope.modelObjectMap.Patient_id,CAL_ID).then(function(response){"success"===response.status&&(toastr.success("Added a new Claim","Success"),scope.modelObjectMap=angular.copy(ClaimModel),scope.isSubmit=!1,scope.claim=response.data,scope.modelObjectMap=angular.copy(ClaimModel),getInsurerInfo(),scope.modelObjectMap.Patient_id=patient_id,scope.modelObjectMap.Claim_date=new Date,scope.modelObjectMap.insurer_site=scope.insurerId)})}else postData.Last_updated_by=$cookieStore.get("userInfo").id,PatientService.editClaim(postData).then(function(response){"success"===response.status&&(toastr.success("Edited a new Claim","Success"),scope.isSubmit=!1,angular.element(idClose).fadeOut(),scope.params.permission.edit=!1,scope.mode={type:"add",text:"Add Claim"},scope.modelObjectMap=angular.copy(ClaimModel),getInsurerInfo(),scope.modelObjectMap.Patient_id=patient_id,scope.modelObjectMap.Claim_date=new Date,scope.modelObjectMap.insurer_site=scope.insurerId)})}}}}}),angular.module("app.loggedIn.patient.outside_referral.directive",[]).directive("patientOutsideReferral",function(PatientService,OutsideReferralModel){return{restrict:"EA",scope:{data:"@",options:"="},templateUrl:"modules/patient/directives/templates/outside_referral.html",link:function(scope,element,attrs){if(scope.data)var data=scope.$eval(scope.data);scope.isSubmit=!1,scope.modelObjectMap=angular.copy(OutsideReferralModel),scope.mode={type:"add",text:"Add Outside Referral"},scope.modelObjectMap.Patient_id=data.Patient_id,scope.clickAction=function(option){if("view"!=option.type&&(scope.isSubmit=!0,!scope.outsideReferralForm.$invalid)){var postData=angular.copy(scope.modelObjectMap);for(var key in postData)postData[key]instanceof Date&&(postData[key]=ConfigService.getCommonDate(postData[key]));"add"==option.type?PatientService.insertClaim(postData).then(function(response){"success"===response.status&&(toastr.success("Added a new Claim","Success"),scope.modelObjectMap=angular.copy(ClaimModel),scope.modelObjectMap.Patient_id=data.Patient_id,scope.isSubmit=!1)}):PatientService.editClaim(postData).then(function(response){"success"===response.status&&(toastr.success("Edited a new Claim","Success"),loadInit(),scope.isSubmit=!1)})}}}}}),angular.module("app.loggedIn.patient.search.directive",[]).directive("patientSearch",function(PatientService){return{restrict:"EA",scope:{clickRow:"&",isClose:"@"},templateUrl:"modules/patient/directives/templates/search.html",link:function(scope,element,attrs){if(scope.list={},scope.isClose)var idClose="#"+scope.isClose;scope.params={pagination:{limit:5,offset:0,current_page:1,max_size:3},filters:[{type:"text",name:"First_name",value:""},{type:"text",name:"Sur_name",value:""}],select:["Patient_id","First_name","Sur_name","company_id"]},scope.closePopup=function(){angular.element(idClose).fadeOut()};var loadList=function(){PatientService.mdtSearch(scope.params).then(function(response){"success"===response.status&&(scope.list=response)},function(error){alert("Error Server")})};loadList(),scope.refreshList=function(){loadList()},scope.setPage=function(){scope.params.pagination.offset=(scope.params.pagination.current_page-1)*scope.params.pagination.limit,loadList()}}}}).directive("patientSearchByCompany",function(PatientService){return{restrict:"EA",scope:{clickRow:"&",isClose:"@",companyId:"="},templateUrl:"modules/patient/directives/templates/search.html",link:function(scope,element,attrs){if(scope.list={},scope.isClose)var idClose="#"+scope.isClose;scope.params={pagination:{limit:5,offset:0,current_page:1,max_size:3},filters:[{type:"text",name:"First_name",value:""},{type:"text",name:"Sur_name",value:""},{type:"text",name:"company_id",value:0}],select:["Patient_id","First_name","Sur_name","company_id"]},scope.$watch("companyId",function(companyId){console.log(companyId),scope.params.filters[2].value=companyId,scope.refreshList()}),scope.closePopup=function(){angular.element(idClose).fadeOut()};var loadList=function(){PatientService.mdtSearch(scope.params).then(function(response){"success"===response.status&&(scope.list=response)},function(error){alert("Error Server")})};scope.refreshList=function(){loadList()},scope.setPage=function(){scope.params.pagination.offset=(scope.params.pagination.current_page-1)*scope.params.pagination.limit,loadList()}}}}),angular.module("app.loggedIn.patient.companies.directive",[]).directive("patientCompanies",function(PatientService,OutsideReferralModel,toastr){return{restrict:"EA",scope:{data:"@"},template:'<my-data-table options="data_options" rowclass="set_row_class" rowclick="row_click">',controller:function($scope){var data=$scope.$eval($scope.data);if(data&&data.Patient_id){var active_item=null;$scope.set_row_class=function(item){return"active"==item.active&&(active_item=item),"active"==item.active?"success":""},$scope.row_click=function(item){if(item.id!=active_item.id){var yes=confirm("Set this company active for patient ??? ");yes&&PatientService.update({Patient_id:data.Patient_id,company_id:item.id}).then(function(response){"success"==response.status&&(item.active="active",active_item.active="inactive",toastr.success("Save Successfully!!!","Success")),console.log(response)})}},$scope.data_options={api:"api/erm/v2/patients/companies",method:"post",columns:[{field:"companies.id",is_hide:!0},{field:"Company_name",label:"Company Name"},{field:"Industry"},{field:"Addr",label:"Address"},{field:"Country",db_field:"companies.Country"},{field:"active",label:"Active",is_hide:!0,not_submit:!0}],search:{Patient_id:data.Patient_id}}}}}}),angular.module("app.loggedIn.patient.ngthumb.directive",[]).directive("ngThumb",["$window",function($window){var helper={support:!(!$window.FileReader||!$window.CanvasRenderingContext2D),isFile:function(item){return angular.isObject(item)&&item instanceof $window.File},isImage:function(file){var type="|"+file.type.slice(file.type.lastIndexOf("/")+1)+"|";return-1!=="|jpg|png|jpeg|bmp|gif|".indexOf(type)}};return{restrict:"A",template:"<canvas/>",link:function(scope,element,attributes){function onLoadFile(event){var img=new Image;img.onload=onLoadImage,img.src=event.target.result}function onLoadImage(){var width=params.width||this.width/this.height*params.height,height=params.height||this.height/this.width*params.width;canvas.attr({width:width,height:height}),canvas[0].getContext("2d").drawImage(this,0,0,width,height)}if(helper.support){var params=scope.$eval(attributes.ngThumb);if(helper.isFile(params.file)&&helper.isImage(params.file)){var canvas=element.find("canvas"),reader=new FileReader;reader.onload=onLoadFile,reader.readAsDataURL(params.file)}}}}}]),angular.module("app.loggedIn.patient.controller",["app.loggedIn.patient.list.controller","app.loggedIn.patient.home.controller","app.loggedIn.patient.search.controller","app.loggedIn.patient.action.controller","app.loggedIn.patient.booking.controller","app.loggedIn.patient.detail.controller","app.loggedIn.patient.recall.controller","app.loggedIn.patient.outside_referrals.controller","app.loggedIn.patient.referrals.controller","app.loggedIn.patient.appointment.controller","app.loggedIn.patient.companies.controller","app.loggedIn.patient.workcover.controller","app.loggedIn.patient.itemsheet.controller","app.loggedIn.patient.invoices.controller","app.loggedIn.patient.invoice_detail.controller","app.loggedIn.patient.appt.controller","app.loggedIn.patient.apptdoc.controller","app.loggedIn.patient.checkin.controller","app.loggedIn.patient.detail.master.controller"]).controller("PatientController",function($state,$scope,sysServiceService,DoctorService,$cookieStore,toastr,ConfigService,PatientService,MODE_ROW,$stateParams,mdtAppointmentService,rlobService){{var patient_id=$scope.patient_id=$stateParams.patient_id;$scope.cal_id=$stateParams.cal_id}$scope.search={},$scope.search.Patient_id=$scope.patient_id,$scope.patientBarVer={},$scope.patientBarVer.version="zip",$scope.$on("$stateChangeStart",function(e,toState,toParams,fromState,fromParams){toState.name.indexOf("loggedIn.patient")>-1&&($scope.patientBarVer.version="zip")}),$scope.patient_detail_modules=[{wrap:0,name:"Patient",color:"blue-soft",desc:"Info",icon:"fa fa-user",state:"loggedIn.patient.detail"},{wrap:0,name:"Companies",color:"red-soft",desc:"Total: 0",icon:"fa fa-building",state:"loggedIn.patient.company"},{wrap:0,name:"Claim",color:"green-soft",desc:"Available",icon:"fa fa-newspaper-o",state:"loggedIn.patient.claim.list"},{wrap:0,name:"Alert",color:"green-soft",desc:"Available",icon:"fa fa-newspaper-o",state:"loggedIn.patient.alert.list({patientId:"+$stateParams.patient_id+", calId:"+$stateParams.cal_id+"})"},{wrap:0,name:"Referral",color:"purple-soft",desc:"Total: 0",icon:"fa fa-envelope-o",state:"loggedIn.patient.outreferral.list({patientId:"+$stateParams.patient_id+", calId:"+$stateParams.cal_id+"})"},{wrap:1,name:"Consultation",icon:"fa fa-user-md",color:"purple-soft",desc:"",state:"loggedIn.patient.consult({patient_id:"+$stateParams.patient_id+", cal_id:"+$stateParams.cal_id+"})"},{wrap:0,name:"Problem List",color:"red-soft",icon:"fa fa-exclamation-triangle",state:"loggedIn.patient.problem_list"},{wrap:0,name:"Allergy list",color:"green-soft",icon:"fa fa-exclamation-triangle",state:"loggedIn.patient.allergy.list"}],$scope.patient_apt_modules=[{wrap:1,name:"ItemSheet",icon:"fa fa-bookmark-o",color:"blue-soft",desc:"Info",state:"loggedIn.patient.itemsheet"},{wrap:0,name:"Invoices",icon:"fa fa-money",color:"red-soft",desc:"Total: 0",state:"loggedIn.patient.invoices"},{wrap:1,name:"Appointment List",icon:"fa fa-repeat",color:"green-soft",desc:"Total: 0",state:"loggedIn.patient.appt"},{wrap:1,name:"Recall",color:"blue-soft",desc:"Recall",icon:"fa fa-repeat",state:"loggedIn.patient.recall"}],$scope.current_patient={},$scope.getPatientInfo=function(){PatientService.mdtById($scope.patient_id).then(function(response){$scope.current_patient=response.data,$scope.current_patient.company=response.company;for(var key in $scope.current_patient)$scope.current_patient[key]&&((-1!=key.indexOf("is")||-1!=key.indexOf("Is"))&&($scope.current_patient[key]=$scope.current_patient[key].toString()),(-1!=key.indexOf("_date")||-1!=key.indexOf("DOB")||-1!=key.indexOf("Exp"))&&($scope.current_patient[key]=new Date($scope.current_patient[key])));$scope.current_patient.Title=parseInt($scope.current_patient.Title),-1!=$stateParams.cal_id&&mdtAppointmentService.byId($scope.cal_id).then(function(response){"error"==response.status?toastr.error("Error Get Detail","Error"):($scope.current_patient.Site_name=response.data.site.Site_name,$scope.current_patient.FROM_TIME=response.data.FROM_TIME)})})},$scope.getPatientInfo(),$scope.setListAllergy=function(){PatientService.getListAllergyinPatient($scope.search).then(function(data){"success"==data.status&&($scope.listAllergyinPAtient=data.list)})},$scope.setListAllergy(),$scope.searchObject={doctor_id:0,limit:5,offset:0,maxSize:5,currentPage:1,data:{First_name:"",Sur_name:"",Middle_name:"",Post_code:null}},$scope.rows=MODE_ROW,$scope.modelObject={Title:"Mr",First_name:"",Sur_name:"",Middle_name:"",Known_as:"",Address1:"",Address2:"",Post_code:null,Country:"AU",DOB:"",Sex:"Male",Home_phone:null,Work_phone:null,Mobile:null,No_SMS:"0",Account_type:"",Account_holder:"",Account_Seft:null,Medicare_no:null,Ref:null,Exp_medicare:"",Private_fund_id:"",MemberShip_no:null,UPI:null,HCC_Pension_No:null,Exp_pension:"",DVA_No:null,Balance:null,Pays_Gap_Only:"1",Email:"",Suburb:"",Alias_First_name:"",Alias_Sur_name:"",Phone_ext:null},$scope.mode="search",$scope.getClinicalDepts=function(){var user_id=$cookieStore.get("userInfo").id;PatientService.getDoctorInfoByUserId(user_id).then(function(data){"success"==data.status&&($scope.doctorId=data.data.doctor_id,$scope.clinicalDeptId=data.data.CLINICAL_DEPT_ID,
sysServiceService.byClinicalDepartment($scope.clinicalDeptId).then(function(response){$scope.options.clinical_depts=response.data}))})},$scope.getClinicalDepts(),$scope.apptDate=new Date,$scope.submitCalendar=function(){if($scope.isSubmit=!0,!$scope.appointForm.$invalid){var from_time_part=moment($scope.from_time,"HHmm").format("HH:mm"),to_time_part=moment($scope.to_time,"HHmm").format("HH:mm");if("Invalid date"===moment($scope.from_time,"HHmm").format("HH:mm"))return void toastr.error("From time format error");if("Invalid date"===moment($scope.to_time,"HHmm").format("HH:mm"))return void toastr.error("To time format error");var from_time=moment($scope.apptDate).format("YYYY-MM-DD")+" "+from_time_part+":00",to_time=moment($scope.apptDate).format("YYYY-MM-DD")+" "+to_time_part+":00",postData={FROM_TIME:from_time,TO_TIME:to_time,SITE_ID:$scope.site_id,DOCTOR_ID:$scope.doctorId,CLINICAL_DEPT_ID:$scope.clinicalDeptId,SERVICE_ID:$scope.service_Id};DoctorService.addCalendar(postData).then(function(response){toastr.success("Add successfully !!!"),$scope.cal_id=response.data,rlobService.addApptPatient($scope.patient_id,response.data).then(function(data){"success"==data.status&&(angular.element("#popupNewAppoint").modal("hide"),angular.element("#popupNewAppoint").on("hidden.bs.modal",function(e){initObject(),$scope.changeAppt({CAL_ID:$scope.cal_id})}))})},function(err){})}},$scope.newAppoint=function(){angular.element("#popupNewAppoint").modal("show")},$scope.changeAppt=function(item){$state.go("loggedIn.patient.consult",{patient_id:patient_id,cal_id:item.CAL_ID})};var initObject=function(){$scope.appt_params={id:$scope.cal_id,permission:{edit:!0}},PatientService.getAppointments(patient_id).then(function(response){$scope.list_appt=response.data.appointments;var current_appt=null;angular.forEach($scope.list_appt,function(item){item.CAL_ID==$scope.cal_id&&(current_appt=item)})},function(error){})};initObject()}),angular.module("app.loggedIn.patient.list.controller",[]).controller("PatientListController",function($scope,$state,$cookieStore,PatientService,DoctorService){$scope.searchObjectMap=angular.copy($scope.searchObject);$scope.list=[],$scope.reset=function(){$scope.searchObjectMap=angular.copy($scope.searchObject),$scope.loadList()},$scope.loadList=function(){DoctorService.getByUserId($cookieStore.get("userInfo").id).then(function(data){data&&($scope.searchObjectMap.doctor_id=data.doctor_id,PatientService.search($scope.searchObjectMap).then(function(response){$scope.list=response}))})},$scope.loadList(),$scope.setPage=function(){$scope.searchObjectMap.offset=($scope.searchObjectMap.currentPage-1)*$scope.searchObjectMap.limit,$scope.loadList()},$scope.goToTimetableDetail=function(list){$cookieStore.put("patientTempInfo",list),$state.go("loggedIn.patient.booking")}}),angular.module("app.loggedIn.patient.appointment.controller",[]).controller("PatientAppointmentController",function($scope,DoctorService,TimetableModel,$state,toastr,$stateParams,PatientService,ConfigService,ReceptionistService,OutreferralModel,AlertModel){var patient_id=$scope.patient_id=$stateParams.patient_id;$scope.cal_id=$stateParams.cal_id,$scope.dataAlert=[];var alertPostData={Patient_id:$stateParams.patient_id,CAL_ID:$stateParams.cal_id,page:1,limit:10,offset:0,max_size:5,name:"",description:"",Creation_date:"desc",isenable:""};AlertModel.listFollowPatient(alertPostData).then(function(response){_.forEach(response.data,function(id){$scope.dataAlert.push(id.name)})},function(error){});var outPostData={patient_id:$scope.patient_id,CAL_ID:$scope.cal_id};OutreferralModel.checkPatientCalendar(outPostData).then(function(response){0===response.data&&1===response.service.IS_REFERRAL&&($scope.warning_refferal=!0)},function(error){}),$scope.changeAppt=function(item){$state.go("loggedIn.patient.appointment",{patient_id:patient_id,cal_id:item.CAL_ID})},$scope.classAppt=function(item){switch(item.APP_TYPE){case"ChangePersonInCharge":return"badge-danger";case"NotYet":case"Billing":return"badge-warning";case"Done":return"badge-success";default:return"badge-default"}}}),angular.module("app.loggedIn.patient.companies.controller",[]).controller("PatientCompaniesController",function($scope,$state,$stateParams,toastr,PatientService){$scope.current_patient={};var patient_id=$stateParams.patient_id;$scope.patient={Patient_id:patient_id},$scope.updateCompany=function(company){PatientService.update({Patient_id:$scope.patient.Patient_id,company_id:company.id}).then(function(data){"success"==data.status&&(toastr.success("Save Successfully!!!","Success"),$scope.reloadpage()),console.log(data)})},$scope.company_search_options={api:"api/erm/v2/companies/search",method:"post",columns:[{field:"id",is_hide:!0},{field:"Company_name",label:"Company Name"},{field:"Industry"}],use_filters:!0,filters:{Company_name:{type:"text"},Industry:{type:"text"}}},$scope.chooseCompany=function(item){console.log(item),$scope.updateCompany(item)},$scope.show_company_form=!1,$scope.show_company_search=!1,$scope.openCompanySearch=function(){$scope.show_company_search=!0},$scope.closeCompanySearch=function(){$scope.show_company_search=!1},$scope.openCompanyForm=function(){$scope.show_company_form=!0},$scope.closeCompanyForm=function(){$scope.show_company_form=!1}}),angular.module("app.loggedIn.patient.recall.controller",[]).controller("PatientRecallController",function($scope,$state,$stateParams,$cookieStore,PatientService,DoctorService,ConfigService){var patient_id=$stateParams.patient_id,recall_panel={};$scope.recall_opt={api:"api/erm/v2/patients/recall_search",scope:recall_panel,method:"post",columns:[{field:"recall_id",is_hide:!0},{field:"notes",label:"Document Name"},{field:"transaction_date",label:"Transaction Date",type:"custom",fn:function(item){return item.transaction_date?ConfigService.getCommonDateDefault(item.transaction_date):""}},{field:"recall_date",label:"Recall Date",type:"custom",fn:function(item){return item.recall_date?ConfigService.getCommonDateDefault(item.recall_date):""}},{field:"recall_period",label:"Recall Period",type:"custom",fn:function(item){return item.recall_period<=1?item.recall_period+" month":item.recall_period+" months"}},{field:"remind_before",label:"Remind Before",type:"custom",fn:function(item){return item.remind_before<=1?item.remind_before+" month":item.remind_before+" months"}}],search:{patient_id:patient_id}};var userInfo=$cookieStore.get("userInfo");$scope.params_add={permission:{create:!0,edit:!1},patient_id:patient_id,created_by:userInfo.id},$scope.params_edit={permission:{create:!1,edit:!0},id:0,last_updated_by:userInfo.id},$scope.addForm={is_show:!1,open:function(){this.is_show=!0},close:function(){this.is_show=!1}},$scope.actionCenter={updateRecall:function(){}},$scope.rowClick=function(item){$scope.params_edit.id=item.recall_id,$scope.actionCenter.updateRecall(),$scope.editForm.open()},$scope.actionSuccess=function(){$scope.addForm.close(),$scope.editForm.close(),recall_panel.reload()},$scope.editForm={is_show:!1,open:function(){this.is_show=!0},close:function(){this.is_show=!1}}}),angular.module("app.loggedIn.patient.invoices.controller",[]).controller("PatientInvoicesController",function($scope,$state,toastr,$modal,$stateParams,PatientService,ConfigService){var patient_id=$stateParams.patient_id;$scope.patient_id=patient_id;var cal_id=$stateParams.cal_id;$scope.cal_id=cal_id,$scope.invoicePanel={},$scope.invoiceClick=function(item){$state.go("loggedIn.patient.invoice_detail",{header_id:item.header_id})},$scope.invoiceClass=function(item){return{warning:"approach"==item.STATUS,success:"done"==item.STATUS,danger:"enter"==item.STATUS||null==item.STATUS,selected:item.cal_id==cal_id}},$scope.invoiceOption={api:"api/erm/v2/invoice/search",method:"post",scope:$scope.invoicePanel,columns:[{field:"header_id",order:"DESC",is_hide:!0},{field:"cal_id",is_hide:!0},{field:"STATUS",is_hide:!0},{field:"Company_id",label:"Company",type:"custom",fn:function(item){return item.company?item.company.Company_name:void 0}},{field:"cal_id",label:"From Time",type:"custom",fn:function(item){return item.appointment?ConfigService.getCommonDatetime(item.appointment.FROM_TIME):null}},{field:"cal_id",label:"To Time",type:"custom",fn:function(item){return item.appointment?ConfigService.getCommonDatetime(item.appointment.TO_TIME):null}},{field:"Insurer_id",label:"Insurer",type:"custom",fn:function(item){return item.insurer?item.insurer.insurer_name:void 0}},{field:"DOCTOR_ID",label:"Doctor",type:"custom",fn:function(item){return item.doctor?item.doctor.NAME:void 0}},{field:"SITE_ID",label:"Site",type:"custom",fn:function(item){return item.site?item.site.Site_name:void 0}},{field:"SERVICE_ID",label:"Service",type:"custom",fn:function(item){return item.service?item.service.SERVICE_NAME:void 0}},{field:"CREATION_DATE",label:"Created Date",type:"custom",fn:function(item){return ConfigService.getCommonDateDefault(item.CREATION_DATE)}}],search:{patient_id:patient_id,cal_id:cal_id}},$scope.addFormInvoice={open:function(){$modal.open({templateUrl:"popupAddInvoice",controller:function($scope,$modalInstance,options,patient_id,cal_id){$scope.options=options,$scope.patient_id=patient_id,$scope.cal_id=cal_id,$scope.success=function(){$modalInstance.close({status:"success"})}},size:"lg",resolve:{options:function(){return $scope.options},patient_id:function(){return $stateParams.patient_id},cal_id:function(){return $stateParams.cal_id}}}).result.then(function(data){"success"==data.status&&($scope.invoicePanel.reload(),toastr.success("Save successfully!","Success!"))})}}}),angular.module("app.loggedIn.patient.invoice_detail.controller",[]).controller("PatientInvoiceDetailController",function($scope,$state,$stateParams,toastr,PatientService,ConfigService){var header_id=$stateParams.header_id;$scope.invoiceOpt={permission:{edit:!0},id:header_id},$scope.invoiceSave=function(){PatientService.invoiceSave(header_id).then(function(response){toastr.success("Save successfully !!!","Success")})},PatientService.invoiceDetail(header_id).then(function(response){$scope.invoice=response.data,$scope.invoice.lines=$scope.invoice.lines.filter(function(item){return 1==item.IS_ENABLE});for(var i=0,len=$scope.invoice.lines.length;len>i;++i){var line=$scope.invoice.lines[i];$scope.invoice.AMOUNT+=line.AMOUNT}})}),angular.module("app.loggedIn.patient.home.controller",[]).controller("PatientHomeController",function($scope,$state){}),angular.module("app.loggedIn.patient.search.controller",[]).controller("PatientSearchController",function($scope,ConfigService,PatientService){$scope.search_map={limit:10,offset:0,maxSize:5,currentPage:1,data:{Title:"",First_name:"",Middle_name:"",Sur_name:"",DOB:""},ORDER_BY:"Sur_name ASC"},$scope.list={},$scope.loadList=function(){PatientService.getByOption({search:$scope.search}).then(function(data){for(var i=0,len=data.list.length;len>i;++i)data.list[i].DOB&&(data.list[i].DOB=ConfigService.getCommonDate(data.list[i].DOB));$scope.list.results=data.list})};var init=function(){$scope.search=angular.copy($scope.search_map),$scope.sexIndex=[{code:"Female"},{code:"Male"}],$scope.pagingIndex=[{code:10},{code:20},{code:50}],$scope.loadList(),PatientService.getTotals().then(function(data){$scope.list.count=data.count})};init(),$scope.setPage=function(){$scope.search.offset=($scope.search.currentPage-1)*$scope.search.limit,$scope.loadList()}}),angular.module("app.loggedIn.patient.add.controller",[]).controller("PatientAddController",function($scope,$state,toastr,ConfigService,PatientService,items){items.scope;$scope.patientObj={Title:"",First_name:"",Sur_name:"",Middle_name:"",Known_as:"",Address1:"",Address2:"",Post_code:"",Country:"Australia",DOB:"",Sex:"",Home_phone:"",Work_phone:"",Mobile:"",No_SMS:1,Account_type:"",Account_holder:"",Account_Seft:"",Medicare_no:"",Ref:"",Exp_medicare:"",Private_fund_id:"",MemberShip_no:"",UPI:"",HCC_Pension_No:"",Exp_pension:"",DVA_No:"",Balance:"",Pays_Gap_Only:1,Email:"",Suburb:"",Alias_First_name:"",Alias_Sur_name:"",Phone_ext:""},$scope.initForm=function(resetCall){resetCall&&resetCall(),$scope.titleIndex=ConfigService.get_title_name(),$scope.countryIndex=ConfigService.get_country_list(),$scope.sexIndex=ConfigService.get_sex_list(),$scope.smsIndex=$scope.payGapIndex=ConfigService.get_yes_no_opt(),PatientService.listAccType().then(function(data){return"success"!=data.status?void alert("error"):void($scope.accTypeIndex=data.list)}),PatientService.listPrvFund().then(function(data){return"success"!=data.status?void alert("error"):void($scope.fundIndex=data.list)})};var reset=function(){$scope.patient=angular.copy($scope.patientObj),$scope.isSubmit=!1};$scope.reset=reset;var init=function(){$scope.formMode="Add",reset(),$scope.initForm(reset)};$scope.submit=function(patientForm){return $scope.isSubmit=!0,patientForm.$invalid?void toastr.error("Please Check Your Information!","Error"):void PatientService.insertPatient({patient:$scope.patient}).then(function(data){return"success"!=data.status?void toastr.error("Cannot Insert!","Error"):(reset(),void toastr.success("Insert Successfully !!!","Success"))})},init()}),angular.module("app.loggedIn.patient.action.controller",[]).controller("PatientActionController",function($scope,$modalInstance,toastr,ConfigService,PatientService,ReceptionistService,DoctorService,items){$scope.mode="search",$scope.modelObject={Title:"Mr",First_name:"",Sur_name:"",Middle_name:"",Known_as:"",Address1:"",Address2:"",Post_code:null,Country:"AU",DOB:"",Sex:"Male",Home_phone:null,Work_phone:null,Mobile:null,No_SMS:"0",Account_type:"",Account_holder:"",Account_Seft:null,Medicare_no:null,Ref:null,Exp_medicare:"",Private_fund_id:"",MemberShip_no:null,UPI:null,HCC_Pension_No:null,Exp_pension:"",DVA_No:null,Balance:null,Pays_Gap_Only:"1",Email:"",Suburb:"",Alias_First_name:"",Alias_Sur_name:"",Phone_ext:null},$scope.options={titles:ConfigService.title_option(),sexes:ConfigService.sex_option(),sms:ConfigService.yes_no_option(),countries:ConfigService.country_option(),gaps:ConfigService.yes_no_option()},$scope.step=1,$scope.isSubmit=!1;var reset=function(){$scope.step=1,$scope.modelObjectMap=angular.copy($scope.modelObject)};$scope.nextStep=function(form){switch($scope.isSubmit=!0,$scope.step){case 1:form.$invalid?toastr.error("You got errors to fix","Error"):($scope.step++,$scope.isSubmit=!1);break;case 2:form.$invalid?toastr.error("You got errors to fix","Error"):($scope.step++,$scope.isSubmit=!1);break;case 3:form.$invalid?toastr.error("You got errors to fix","Error"):($scope.modelObjectMap.DOB=ConfigService.getCommonDateDatabase($scope.modelObjectMap.DOB),$scope.modelObjectMap.Exp_medicare=ConfigService.getCommonDateDatabase($scope.modelObjectMap.Exp_medicare),$scope.modelObjectMap.Exp_pension=ConfigService.getCommonDateDatabase($scope.modelObjectMap.Exp_pension),null!==items.bookingObject.Patient_id?PatientService.updatePatient({patient:$scope.modelObjectMap}).then(function(data){return"success"!=data.status?void toastr.error("Cannot Insert!","Error"):(reset(),toastr.success("Edit Successfully !!!","Success"),void $modalInstance.close({patientId:items.patient.Patient_id}))}):PatientService.insertPatient({patient:$scope.modelObjectMap}).then(function(data){return"success"!=data.status?void toastr.error("Cannot Insert!","Error"):(reset(),$scope.modelObjectBookingMap.Patient_id=data.data.Patient_id,ReceptionistService.booking($scope.modelObjectBookingMap).then(function(data){$modalInstance.close("OK")}),void toastr.success("Insert Successfully !!!","Success"))}),$scope.isSubmit=!1)}},$scope.backStep=function(){$scope.step>1&&$scope.step--},$scope.modelObjectMap={};var init=function(){angular.extend($scope.modelObject,items.patient),$scope.modelObjectMap=angular.copy($scope.modelObject),items.patient&&($scope.modelObjectMap.DOB=ConfigService.convertToDate(items.patient.DOB),$scope.modelObjectMap.Exp_medicare=ConfigService.convertToDate(items.patient.Exp_medicare),$scope.modelObjectMap.Exp_pension=ConfigService.convertToDate(items.patient.Exp_pension),$scope.modelObjectMap.Home_phone=parseInt($scope.modelObjectMap.Home_phone),$scope.modelObjectMap.Work_phone=parseInt($scope.modelObjectMap.Work_phone),$scope.modelObjectMap.Mobile=parseInt($scope.modelObjectMap.Mobile),$scope.modelObjectMap.Account_Seft=parseInt($scope.modelObjectMap.Account_Seft),$scope.modelObjectMap.MemberShip_no=parseInt($scope.modelObjectMap.MemberShip_no),$scope.modelObjectMap.HCC_Pension_No=parseInt($scope.modelObjectMap.HCC_Pension_No),$scope.modelObjectMap.UPI=parseInt($scope.modelObjectMap.UPI),$scope.modelObjectMap.DVA_No=parseInt($scope.modelObjectMap.DVA_No),$scope.modelObjectMap.Balance=parseInt($scope.modelObjectMap.Balance),$scope.modelObjectMap.Ref=parseInt($scope.modelObjectMap.Ref),$scope.modelObjectMap.Post_code=parseInt($scope.modelObjectMap.Post_code)),PatientService.listAccType().then(function(data){return"success"!=data.status?void alert("error"):void($scope.accTypeIndex=data.list)}),PatientService.listPrvFund().then(function(data){return"success"!=data.status?void alert("error"):void($scope.fundIndex=data.list)})};init(),$scope.search_map={limit:10,offset:0,maxSize:5,currentPage:1,data:{Title:"",First_name:"",Middle_name:"",Sur_name:"",DOB:""},ORDER_BY:"Sur_name ASC"},$scope.list={},$scope.loadList=function(){PatientService.getByOption({search:$scope.search}).then(function(data){for(var i=0,len=data.list.length;len>i;++i)data.list[i].DOB&&(data.list[i].DOB=ConfigService.getCommonDate(data.list[i].DOB));$scope.list.results=data.list})};var initSearch=function(){$scope.search=angular.copy($scope.search_map),$scope.sexIndex=[{code:"Female"},{code:"Male"}],$scope.pagingIndex=[{code:10},{code:20},{code:50}],$scope.loadList(),PatientService.getTotals().then(function(data){$scope.list.count=data.count})};initSearch(),$scope.setPage=function(){$scope.search.offset=($scope.search.currentPage-1)*$scope.search.limit,$scope.loadList()},$scope.goToBooking=function(list){$scope.modelObjectBookingMap.Patient_id=list.Patient_id,ReceptionistService.booking($scope.modelObjectBookingMap).then(function(data){$modalInstance.close("OK")})},$scope.modelObjectBooking=items.bookingObject,$scope.modelObjectBookingMap={},angular.extend($scope.options,items.options),ReceptionistService.getById(items.cal_id).then(function(response){angular.extend($scope.modelObjectBooking,response),$scope.modelObjectBookingMap=angular.copy($scope.modelObjectBooking),DoctorService.getById($scope.modelObjectBookingMap.DOCTOR_ID).then(function(doctor){$scope.modelObjectBookingMap.DOCTOR_NAME=doctor.NAME});for(var i=0;i<items.options.redimedsites.length;i++)items.options.redimedsites[i].id===$scope.modelObjectBookingMap.SITE_ID&&($scope.modelObjectBookingMap.SITE_NAME=items.options.redimedsites[i].Site_name);for(var i=0;i<items.options.dept.length;i++)items.options.dept[i].CLINICAL_DEPT_ID===$scope.modelObjectBookingMap.CLINICAL_DEPT_ID&&($scope.modelObjectBookingMap.CLINICAL_DEPT_NAME=items.options.dept[i].CLINICAL_DEPT_NAME);ConfigService.system_service_by_clinical($scope.modelObjectBookingMap.CLINICAL_DEPT_ID).then(function(list){items.options.services=list}),null!==response.Patient_id&&PatientService.getPatient(response.Patient_id).then(function(data){$scope.modelObjectBookingMap.PATIENT=data.data[0]}),items.data.from_time_map?($scope.modelObjectBookingMap.from_time_map=items.data.from_time_map,$scope.modelObjectBookingMap.to_time_map=items.data.to_time_map):($scope.modelObjectBookingMap.from_time=items.data.from_time,$scope.modelObjectBookingMap.from_time_map=ConfigService.convertToTimeString(items.data.from_time),$scope.modelObjectBookingMap.to_time=items.data.to_time,$scope.modelObjectBookingMap.to_time_map=ConfigService.convertToTimeString(items.data.to_time))})}),angular.module("app.loggedIn.patient.booking.controller",[]).controller("PatientBookingController",function($scope,$state,$cookieStore,ReceptionistService,ConfigService,PatientService,toastr){$scope.modelObjectBookingMap={},$scope.bookingPatientInfo={};var init=function(){$scope.bookingPatientInfo=$cookieStore.get("patientBookingInfo").data,$scope.bookingPatientInfo.datepicker=ConfigService.getCommonDateDefault($scope.bookingPatientInfo.datepicker),ReceptionistService.getById($cookieStore.get("patientBookingInfo").cal_id).then(function(data){angular.extend($scope.modelObjectBookingMap,data),ConfigService.system_service_by_clinical($scope.modelObjectBookingMap.CLINICAL_DEPT_ID).then(function(list){$scope.options.services=list,$scope.modelObjectBookingMap.SERVICE_ID=list[0].SERVICE_ID,$scope.modelObjectBookingMap.ACC_TYPE=$scope.options.acc_types[0].code,$scope.modelObjectBookingMap.APP_TYPE=$scope.options.app_types[0].code,$scope.modelObjectBookingMap.bill_to="1",$scope.modelObjectBookingMap.ARR_TIME="00:00",$scope.modelObjectBookingMap.ATTEND_TIME="00:00"})})};init(),$scope.getActive=function(state){return state===$state.current.name?"active":""},$scope.step=1,$scope.label_step="Next",$scope.prevStep=function(){$scope.step>1&&($scope.label_step="Next",$scope.step--)},$scope.nextStep=function(){switch($scope.step){case 1:$scope.step=2,$scope.label_step="";break;case 2:$state.go("loggedIn.patient.booking.search")}},$scope.list=[],$scope.loadList=function(){PatientService.getByOption({search:$scope.search}).then(function(data){for(var i=0,len=data.list.length;len>i;++i)data.list[i].DOB&&(data.list[i].DOB=ConfigService.getCommonDate(data.list[i].DOB));$scope.list.results=data.list})};var initSearch=function(){$scope.search=angular.copy($scope.searchObject),$scope.sexIndex=[{code:"Female"},{code:"Male"}],$scope.pagingIndex=[{code:5},{code:10},{code:20},{code:50}],$scope.loadList(),PatientService.getTotals().then(function(data){$scope.list.count=data.count})};initSearch(),$scope.setPage=function(){$scope.search.offset=($scope.search.currentPage-1)*$scope.search.limit,$scope.loadList()},$scope.goToBooking=function(list){$scope.modelObjectBookingMap.Patient_id=list.Patient_id,ReceptionistService.booking($scope.modelObjectBookingMap).then(function(data){$state.go("loggedIn.receptionist.appointment")})};var init=function(){$scope.modelObjectMap=angular.copy($scope.modelObject)};init(),$scope.insert_step=1,$scope.isSubmit=!1;var reset=function(){$scope.insert_step=1,$scope.modelObjectMap=angular.copy($scope.modelObject)};$scope.insertNextStep=function(form){switch($scope.isSubmit=!0,$scope.insert_step){case 1:form.$invalid?toastr.error("You got errors to fix","Error"):($scope.insert_step++,$scope.isSubmit=!1);break;case 2:form.$invalid?toastr.error("You got errors to fix","Error"):($scope.insert_step++,$scope.isSubmit=!1);break;case 3:form.$invalid?toastr.error("You got errors to fix","Error"):($scope.modelObjectMap.DOB=ConfigService.getCommonDateDatabase($scope.modelObjectMap.DOB),$scope.modelObjectMap.Exp_medicare=ConfigService.getCommonDateDatabase($scope.modelObjectMap.Exp_medicare),$scope.modelObjectMap.Exp_pension=ConfigService.getCommonDateDatabase($scope.modelObjectMap.Exp_pension),PatientService.insertPatient({patient:$scope.modelObjectMap}).then(function(data){return"success"!=data.status?void toastr.error("Cannot Insert!","Error"):(reset(),$scope.modelObjectBookingMap.Patient_id=data.data.Patient_id,ReceptionistService.booking($scope.modelObjectBookingMap).then(function(data){$state.go("loggedIn.receptionist.appointment")}),void toastr.success("Insert Successfully !!!","Success"))}),$scope.isSubmit=!1)}},$scope.insertBackStep=function(){$scope.insert_step>1&&$scope.insert_step--}}),angular.module("app.loggedIn.patient.detail.controller",[]).controller("PatientDetailController",function($scope,$state,$stateParams,PatientService,FileUploader){$scope.current_patient={},$scope.patientBarVer&&($scope.patientBarVer.version="null"),$scope.actionCenter={runWhenFinish:function(){$scope.getPatientInfo()}},$scope.params={permission:{create:!1,edit:!0},id:$stateParams.patient_id}}),angular.module("app.loggedIn.patient.detail.master.controller",[]).controller("PatientDetailMasterController",function($scope,$stateParams,$state,$modal,sysStateService,PatientService,ConfigService,toastr,PatientModel,FileUploader,$timeout,CompanyModel,InsurerService){$scope.avt_path="";var uploader=$scope.uploader=new FileUploader({url:"/api/erm/v2/patient/upload_avt",autoUpload:!1,removeAfterUpload:!0,onAfterAddingFile:function(item){var arr=item.file.name.split("."),ext=arr[arr.length-1];"jpg"===ext||"jpeg"===ext||"png"===ext?this.queue.length>1&&this.queue.splice(0,1):(toastr.error("Only jpg, jpeg and png accepted","Invalid format!"),this.queue=[])},onCompleteItem:function(item,response,status,headers){"success"===response.status&&response.isEditMode===!0&&($scope.avt_path=response.img_path,console.log("replace success",$scope.avt_path),clickAction())}});if($stateParams.patient_id&&(uploader.formData[0]={patient_id:$stateParams.patient_id,file_name:(new Date).getTime(),editMode:!0}),$scope.openUploader=function(){$timeout(function(){$("#patient_photo_upload").click()},100)},$scope.isClose)var idClose="#"+$scope.isClose;$scope.loadState=function(){null!==$scope.modelObjectMap.Country&&sysStateService.list($scope.modelObjectMap.Country).then(function(response){$scope.options.states=response.data})},$scope.verifiedMedicare=function(){if(!isNaN(parseFloat($scope.modelObjectMap.Medicare_no))&&isFinite($scope.modelObjectMap.Medicare_no)&&10===$scope.modelObjectMap.Medicare_no.toString().length){var dob="";if(null!==$scope.modelObjectMap.DOB){var time=new Date($scope.modelObjectMap.DOB),date=time.getDate().toString();10>date&&(date="0"+date);var month=(time.getMonth()+1).toString();10>month&&(month="0"+month);var year=time.getFullYear().toString();dob=date+month+year}var options={firstName:$scope.modelObjectMap.First_name,lastName:$scope.modelObjectMap.Sur_name,dob:dob,medicareNo:$scope.modelObjectMap.Medicare_no.toString(),refNo:$scope.modelObjectMap.Ref.toString()};PatientService.mdtVerifiedMedicare(options).then(function(response){$scope.isMedicare="success"==response.status?!0:!1})}},$scope.changeAdd=function(){var string=$scope.modelObjectMap.Address1;if(null!=string){var arr=string.split(",");4==arr.length&&($scope.modelObjectMap.Surburb=arr[1].trim(),$scope.modelObjectMap.State=arr[2].trim())}};var initObject=function(){$scope.isMedicare=!1,$scope.isSubmit=!1,$scope.accordion={oneAtATime:!1,main_address:!0,main_medicare:!0,main_medicare_disabled:!0,main_one:!0,main_two:!0},$scope.selectedCompany={Company_name:"Select Company"},$scope.modelObjectMap=angular.copy(PatientModel),$scope.params.permission.edit===!0&&PatientService.mdtById($scope.params.id).then(function(response){if("success"===response.status){angular.extend($scope.modelObjectMap,response.data),console.log("this is modelObjectMap",$scope.modelObjectMap);for(var key in $scope.modelObjectMap)$scope.modelObjectMap[key]&&((-1!=key.indexOf("is")||-1!=key.indexOf("Is")||-1!=key.indexOf("No_")||-1!=key.indexOf("Diabetic")||-1!=key.indexOf("Inactive")||-1!=key.indexOf("Deceased")||-1!=key.indexOf("Gradudate_"))&&($scope.modelObjectMap[key]=$scope.modelObjectMap[key].toString()),(-1!=key.indexOf("_date")||-1!=key.indexOf("DOB")||-1!=key.indexOf("Exp"))&&($scope.modelObjectMap[key]=new Date($scope.modelObjectMap[key]))),$scope.modelObjectMap.avatar&&""!==$scope.modelObjectMap.avatar?$scope.avt_path=$scope.modelObjectMap.avatar:$scope.modelObjectMap.Sex&&""!==$scope.modelObjectMap.Sex?("0"===$scope.modelObjectMap.Sex&&($scope.avt_path="img/patient/avt/male_default.png"),"1"===$scope.modelObjectMap.Sex&&($scope.avt_path="img/patient/avt/female_default.png")):$scope.avt_path="img/patient/avt/male_default.png";console.log("this is init avt_path",$scope.avt_path),$scope.verifiedMedicare(),$scope.modelObjectMap.Country="Australia",$scope.loadState(),angular.extend($scope.selectedCompany,response.company),$scope.selectedCompany.insurer=response.insurer}}),$scope.params.permission.create===!0&&($scope.modelObjectMap.Country="Australia",$scope.modelObjectMap.Sex=0,$scope.loadState())};initObject();var companyModel=$scope.selectedCompany,idPatientDetailCompany="#PatientDetailCompany";$scope.clickCompany=function(){$modal.open({templateUrl:"dialogCompanyList",controller:function($scope,$modalInstance){$scope.actionCenter={createAdd:!0,goToStateAddCompany:function(){$modalInstance.dismiss("cancel"),$modal.open({templateUrl:"dialogAddCompany",controller:function($scope,$modalInstance){$scope.actionCenter={saveModal:function(Company_name,Company_id){companyModel.id=Company_id,companyModel.Company_name=Company_name,InsurerService.oneFollowCompany({company_id:Company_id}).then(function(response){companyModel.insurer={insurer_name:"No Insurer"},null!==response.data.insurer_name&&(companyModel.insurer.insurer_name=response.data.insurer_name),$modalInstance.dismiss("cancel")},function(error){})},closeModal:function(){$modalInstance.dismiss("cancel")}}},size:"lg"})}},$scope.clickRow=function(row){$modalInstance.close(row)}}}).result.then(function(row){row&&($scope.selectedCompany.id=row.id,$scope.selectedCompany.Company_name=row.Company_name,InsurerService.oneFollowCompany({company_id:row.id}).then(function(response){$scope.selectedCompany.insurer={insurer_name:"No Insurer"},null!==response.data.insurer_name&&($scope.selectedCompany.insurer.insurer_name=response.data.insurer_name)},function(error){}))})},$scope.selectCompany=function(row){angular.element(idPatientDetailCompany).fadeOut(),angular.extend($scope.selectedCompany,row)},$scope.closePopup=function(){angular.element(idClose).fadeOut()};var clickAction=function(){if($scope.isSubmit=!0,$scope.accordion.main_one=!0,$scope.accordion.main_two=!0,!$scope.patientForm.$invalid){var postData=angular.copy($scope.modelObjectMap);postData.company_id=$scope.selectedCompany.id;for(var key in postData)postData[key]instanceof Date&&(postData[key]=ConfigService.getCommonDate(postData[key]));console.log("this is avt_path before edit",$scope.avt_path),"img/patient/avt/male_default.png"!==$scope.avt_path&&"img/patient/avt/female_default.png"!==$scope.avt_path?(console.log("run here",$scope.avt_path),postData.avatar=$scope.avt_path):postData.avatar="",$scope.params.permission.edit===!0?PatientService.mdtEdit(postData).then(function(response){return"success"!=response.status?void toastr.error("Cannot Update!","Error"):(toastr.success("Updated Patient Successfully !!!","Success"),$scope.actionCenter&&$scope.actionCenter.runWhenFinish&&$scope.actionCenter.runWhenFinish(),initObject(),void($scope.isClose&&$scope.closePopup()))}):(console.log("postData",postData),PatientService.checkPatietnInfo(postData.First_name,postData.Sur_name,postData.Middle_name,postData.DOB).then(function(data){if("success"==data.status)console.log("aaaaaaaaaaaaaaaa",data.data),toastr.error("Patient already exists","Error");else if("fail"==data.status){if(uploader.queue.length>0){var upload_file_name=(new Date).getTime()+"-"+uploader.queue[0].file.name;postData.avatar="img/patient/avt/"+upload_file_name}"undefined"!=typeof $scope.params.permission.calendar&&$scope.params.permission.calendar===!0&&(postData.CAL_ID=$scope.params.CAL_ID),PatientService.mdtAdd(postData).then(function(data){return"success"!=data.status?void toastr.error("Cannot Insert!","Error"):(toastr.success("Insert Patient Successfully !!!","Success"),$scope.actionCenter&&$scope.actionCenter.runWhenFinish&&$scope.actionCenter.runWhenFinish(data.data),uploader.queue.length>0&&(uploader.queue[0].formData[0]={patient_id:data.data.Patient_id,file_name:upload_file_name,editMode:!1},uploader.uploadItem(uploader.queue[0])),$scope.params.isAtAllPatient!==!0&&($scope.patient={},$scope.patient.Patient_name=$scope.modelObjectMap.First_name+" "+$scope.modelObjectMap.Sur_name,$scope.patient.Patient_id=data.data.Patient_id),initObject(),CompanyModel.insertPatientCompanies(postData.company_id,data.data.Patient_id),$scope.isClose&&$scope.closePopup(),$scope.onsuccess=data.data,$scope.patient=data.data,void 0)})}else toastr.error("Patient already exists","Error");

}))}};$scope.buttonclick=function(){$scope.params.permission.edit===!0&&uploader.queue.length>0?uploader.uploadItem(uploader.queue[0]):clickAction()},$scope.removeUpload=function(){uploader.queue=[]}}).directive("googleplace",function(){return{require:"ngModel",restrict:"A",scope:{},link:function(scope,element,attrs,model){var options={types:[],componentRestrictions:{country:"au"}};scope.gPlace=new google.maps.places.Autocomplete(element[0],options),google.maps.event.addListener(scope.gPlace,"place_changed",function(){scope.Place=scope.gPlace.getPlace(),scope.$apply(function(){model.$setViewValue(element.val())})})}}}),angular.module("app.loggedIn.patient.workcover.controller",[]).controller("PatientWorkcoverController",function($scope,$state,$stateParams,localStorageService,PatientService){localStorageService.set("patientTempInfo",{Patient_id:$stateParams.patient_id}),localStorageService.set("apptTempInfo",{CAL_ID:$stateParams.cal_id});var patient_id=$stateParams.patient_id,cal_id=$stateParams.cal_id;$scope.navigator={add_first:function(){$state.go("loggedIn.waworkcover.first",{patient_id:patient_id,action:"add",cal_id:cal_id,wc_id:0})},add_progress:function(){$state.go("loggedIn.waworkcover.progress",{patient_id:patient_id,action:"add",cal_id:cal_id,wc_id:0})},add_final:function(){$state.go("loggedIn.waworkcover.final",{patient_id:patient_id,action:"add",cal_id:cal_id,ass_id:0})},add_general:function(){$state.go("loggedIn.waworkcover.general",{patient_id:patient_id,action:"add",cal_id:cal_id,ass_id:0})}},$scope.first_opt=PatientService.workcoverSearchOpt("first",patient_id),$scope.progress_opt=PatientService.workcoverSearchOpt("progress",patient_id),$scope.final_opt=PatientService.workcoverSearchOpt("final",patient_id),$scope.general_opt=PatientService.workcoverSearchOpt("general",patient_id)}),angular.module("app.loggedIn.patient.referrals.controller",[]).controller("PatientReferralsController",function($scope,$state,DoctorService){var item_type_options=[{code:"Service",label:"Service"},{code:"Goods",label:"Goods"}];$scope.data_options={columns:[{field:"id",is_hide:!0},{field:"Company_name",label:"Company Name"},{field:"Industry"}],use_filters:!1,filters:{ITEM_CODE:{type:"number"},ITEM_NAME:{type:"text"},ITEM_TYPE:{type:"dropdown",values:item_type_options}},api:"api/erm/v2/companies/search"}}),angular.module("app.loggedIn.patient.outside_referrals.controller",[]).controller("PatientOutsideReferralsController",function($scope,$state,$stateParams){$scope.params_add={permission:{create:!0,edit:!1}},$scope.params_edit={permission:{create:!1,edit:!0},id:0},$scope.module_id={outside_referral:"OutsideReferralModule",outside_referral_edit:"OutsideReferralEditModule"},$scope.add=function(){angular.element("#"+$scope.module_id.outside_referral).fadeIn()},$scope.getRow=function(row){$scope.params_edit.id=row.id,angular.element("#"+$scope.module_id.outside_referral_edit).fadeIn()},$scope.$watch("itemUpdate",function(newUpdate,oldUpdate){"undefined"!=typeof newUpdate&&newUpdate&&($state.go("loggedIn.patient.outside_referral",{patient_id:$stateParams.patient_id},{reload:!0}),$scope.itemUpdate=!1)})}),angular.module("app.loggedIn.patient.itemsheet.controller",[]).controller("PatientItemSheetController",function($filter,$scope,$stateParams,ReceptionistService,PatientService,toastr,InvoiceService){var arrGetBy=$filter("arrGetBy");$scope.appointment={CAL_ID:$stateParams.cal_id,Patient_id:$stateParams.patient_id},$scope.items_search_panel={},$scope.deptItems=null,$scope.apptItems=[],$scope.extraItems=[];var isInDeptItems=function(item_id){for(var i=0,len=$scope.deptItems.length;len>i;++i)for(var cat=$scope.deptItems[i],j=0,len2=cat.items.length;len2>j;++j){var t_item=cat.items[j];if(item_id==t_item.ITEM_ID)return t_item}return!1};$scope.invoiceHeaderInfo=null,PatientService.initInvoice($scope.appointment.Patient_id,$scope.appointment.CAL_ID).then(function(data){InvoiceService.selectInvoiceHeaderBySession($scope.appointment.Patient_id,$scope.appointment.CAL_ID).then(function(data){"success"==data.status?$scope.invoiceHeaderInfo=data.data:(alert("Get Invoice Header Error."),exlog.logErr(data))},function(err){alert("Get Invoice Header Error."),exlog.logErr(err)})},function(err){alert("Init Invoice Error."),exlog.logErr(err)}),ReceptionistService.apptDetail($scope.appointment.CAL_ID).then(function(response){return"success"===response.status?(delete response.data.Patient_id,angular.extend($scope.appointment,response.data),PatientService.getDeptItems($scope.appointment.CLINICAL_DEPT_ID)):void 0}).then(function(response){return"success"===response.status?($scope.deptItems=response.data.filter(function(item){return item.clnDeptItemList.ISENABLE}),InvoiceService.selectInvoiceLinesBySession($scope.appointment.Patient_id,$scope.appointment.CAL_ID)):void 0}).then(function(response){if("success"===response.status){$scope.apptItems=response.data;var item_id_list=[];return angular.forEach($scope.deptItems,function(cat,key){angular.forEach(cat.items,function(item,key){item.PRICE=0,item.TIME_SPENT=0,item.QUANTITY=1,item_id_list.push(item.ITEM_ID)})}),angular.forEach($scope.apptItems,function(item){var t_item=isInDeptItems(item.ITEM_ID);t_item?(t_item.QUANTITY=item.QUANTITY,t_item.TIME_SPENT=item.TIME_SPENT,t_item.PRICE=item.PRICE,t_item.checked=1===item.IS_ENABLE?"1":"0",t_item.inserted="1"===t_item.checked):($scope.extraItems.push(item),item_id_list.push(item.ITEM_ID),item.checked=1===item.IS_ENABLE?"1":"0",item.inserted="1"===item.checked)}),ReceptionistService.itemFeeAppt($scope.appointment.SERVICE_ID,item_id_list)}}).then(function(response){if(response&&response.list){var list_fee=response.list;angular.forEach($scope.deptItems,function(cat,key){angular.forEach(cat.items,function(item,key){var t_item=arrGetBy(list_fee,"CLN_ITEM_ID",item.ITEM_ID);t_item&&t_item.SCHEDULE_FEE>0&&(item.PRICE=t_item.SCHEDULE_FEE,item.disable_fee=!0)})}),angular.forEach($scope.extraItems,function(item,key){var t_item=arrGetBy(list_fee,"CLN_ITEM_ID",item.ITEM_ID);t_item&&t_item.SCHEDULE_FEE>0&&(item.PRICE=t_item.SCHEDULE_FEE,item.disable_fee=!0)})}}),$scope.itemOptions={click:function(item){"dept_item"!=item.type&&"extra_item"!=item.type&&($scope.extraItems.push(item),item.QUANTITY=1,item.TIME_SPENT=0,item.checked="1",ReceptionistService.itemFeeAppt($scope.appointment.SERVICE_ID,[item.ITEM_ID]).then(function(response){response.list.length>0?(item.PRICE=response.list[0].SCHEDULE_FEE,item.disable_fee=!0):(item.PRICE=0,item.disable_fee=!1)}))},"class":function(item){if(isInDeptItems(item.ITEM_ID))return item.type="dept_item","danger";var t_item=arrGetBy($scope.extraItems,"ITEM_ID",item.ITEM_ID);return t_item?(item.type="extra_item","info"):void 0},options:{api:"api/erm/v2/items/search",method:"post",scope:$scope.items_search_panel,columns:[{field:"ITEM_ID",is_hide:!0},{field:"ITEM_CODE",label:"Item Code",width:"10%"},{field:"ITEM_NAME",label:"Item Name"},{field:"TAX_ID",label:"Tax Id",is_hide:!0},{field:"TAX_CODE",label:"Tax code"},{field:"TAX_RATE",label:"Tax rate"}],use_filters:!0,filters:{ITEM_CODE:{type:"text"},ITEM_NAME:{type:"text"}}}},$scope.itemSearch={is_show:!1,open:function(){this.is_show=!0},close:function(){this.is_show=!1}},$scope.updateItems=function(){var insertArr=[],fnInsertArr=function(item){var t={HEADER_ID:$scope.invoiceHeaderInfo.header_id,ITEM_ID:item.ITEM_ID,PRICE:item.PRICE,QUANTITY:item.QUANTITY,AMOUNT:item.PRICE*item.QUANTITY,TAX_ID:item.TAX_ID,TAX_CODE:item.TAX_CODE,TAX_RATE:item.TAX_RATE,TAX_AMOUNT:item.PRICE*item.QUANTITY*(item.TAX_RATE?item.TAX_RATE:0),TIME_SPENT:item.TIME_SPENT?item.TIME_SPENT:0,IS_ENABLE:"1"==item.checked?1:0};insertArr.push(t)};angular.forEach($scope.deptItems,function(cat,key){angular.forEach(cat.items,fnInsertArr)}),angular.forEach($scope.extraItems,fnInsertArr);var postData={invoiceHeaderId:$scope.invoiceHeaderInfo.header_id,listLine:insertArr};InvoiceService.saveInvoiceLineSheet(postData).then(function(data){"success"==data.status?toastr.success("Save invoice item success."):(data.status="non-data")?toastr.warning("No invoice item."):toastr.error("Save invoice item error.")},function(err){toastr.error("Save invoice item error.")})}}),angular.module("app.loggedIn.patient.appt.controller",[]).controller("PatientApptListController",function($scope,$state,$modal,$filter,toastr,$stateParams,DoctorService,PatientService,ReceptionistService,ConfigService){var patient_id=$stateParams.patient_id,cal_id=$stateParams.cal_id,arrGetBy=$filter("arrGetBy"),get_list_services=function(){ConfigService.system_service_by_clinical($scope.modelObjectMap.dept).then(function(response){$scope.opt_services=response,$scope.opt_services.length>0&&($scope.modelObjectMap.service=$scope.opt_services[0].SERVICE_ID)})},getRecallAppt=function(){PatientService.getRecallAppointments(patient_id).then(function(response){$scope.appt_list=response.data,angular.forEach($scope.appt_list,function(item){item.appointment.FROM_TIME=ConfigService.getCommonDatetime(item.appointment.FROM_TIME)})})},getRecallApptNew=function(){var postData={Patient_id:$stateParams.patient_id,CAL_ID:$stateParams.cal_id};PatientService.getRecallAppointmentsNew(postData).then(function(response){$scope.appt_listNew=response.data,angular.forEach($scope.appt_listNew,function(item){item.FROM_TIME=ConfigService.getCommonDatetime(item.FROM_TIME),item.TO_TIME=ConfigService.getCommonDatetime(item.TO_TIME)})})};getRecallApptNew(),PatientService.get(patient_id).then(function(response){"success"==response.status&&($scope.patient=response.data,$scope.patient.Patient_name=$scope.patient.First_name+" "+$scope.patient.Sur_name)}),ReceptionistService.apptDetail(cal_id).then(function(response){return"success"===response.status&&(delete response.data.Patient_id,angular.extend($scope.appointment,response.data),$scope.modelObjectMap.site=$scope.appointment.SITE_ID,$scope.modelObjectMap.dept=$scope.appointment.CLINICAL_DEPT_ID,$scope.refreshAppointment(),get_list_services()),PatientService.getApptClaim(patient_id,cal_id)}).then(function(response){console.log(response.data),"success"===response.status&&response.data.length>0&&($scope.appointment.Claim_id=response.data[0].Claim_id),console.log($scope.appointment)});var open=function(){$modal.open({templateUrl:"NewCall",size:"lg",controller:function($scope,$modalInstance){$scope.refresh=!1,$scope.$watch("refresh",function(refresh){refresh&&$modalInstance.close("success")})}}).result.then(function(success){success&&getRecallApptNew()})};$scope.formRecall={open:function(){open()}},$scope.bookingPatient=function(data,calIndex,doctorIndex){console.log(data);{var cal_id=data.cals[doctorIndex];data.doctors[doctorIndex]}if(!cal_id)return void toastr.error("Cannot recall this !!! ","Error");var yes=confirm("Do you want to recall at "+data.from_time_map+" "+ConfigService.getCommonDatetime($scope.modelObjectMap.datepicker)+" with "+$scope.options.doctors[doctorIndex].NAME);if(yes){var patients=data.patients[doctorIndex],p={Patient_id:$scope.patient.Patient_id,Patient_name:$scope.patient.Patient_name};if(""==patients&&(patients=[]),0==patients.length||0==patients[0].Patient_id)patients[0]=p;else{var t_item=arrGetBy(patients,"Patient_id",p.Patient_id);if(t_item)return void toastr.error("Cannot Recall again !!!","Error");patients.push(p)}var str_patients=JSON.stringify(patients),optionMap={CAL_ID:cal_id,SERVICE_ID:$scope.modelObjectMap.service,Patient_id:patient_id,PATIENTS:str_patients};console.log(optionMap),ReceptionistService.booking(optionMap).then(function(response){if("success"===response.status){if(toastr.success("Recall Successful !!!","Success"),$scope.formRecall.close(),$scope.appointment.Claim_id){var item={Claim_id:$scope.appointment.Claim_id,CAL_ID:cal_id,Patient_id:patient_id};PatientService.insertApptClaim(item).then(function(response){console.log(response),"success"===response.status})}getRecallAppt()}})}}}),angular.module("app.loggedIn.patient.apptdoc.controller",[]).controller("PatientApptDocController",function($scope,$stateParams,$timeout,FileUploader,ConfigService,PatientService,toastr){var patient_id=$stateParams.patient_id,cal_id=$stateParams.cal_id,download_api="https://"+location.host+"/api/erm/v2/apptdoc/download?id=";$scope.info_upload={total_size:0,progress_percent:0,pre_progress_percent:0};var uploader=$scope.uploader=new FileUploader({url:"/api/erm/v2/apptdoc/upload",autoUpload:!1,removeAfterUpload:!0,onSuccessItem:function(item,response,status,headers){var uploaded_percent=100*item.file.size/$scope.info_upload.total_size;$scope.info_upload.pre_progress_percent+=uploaded_percent,console.log($scope.info_upload.pre_progress_percent)},onProgressItem:function(item,progress){var uploaded_size=progress*item.file.size/100,uploaded_percent=100*uploaded_size/$scope.info_upload.total_size;$scope.info_upload.progress_percent=$scope.info_upload.pre_progress_percent+uploaded_percent},onCompleteAll:function(res){$scope.document_panel.reload(),$scope.info_upload={total_size:0,progress_percent:0,pre_progress_percent:0},toastr.success("Upload complete!","Complete!")},onAfterAddingAll:function(items){angular.forEach(items,function(f){$scope.info_upload.total_size+=f.file.size}),$scope.info_upload.step_size=$scope.info_upload.total_size/100,console.log("This is upload files",uploader)}});uploader.formData[0]={patient_id:patient_id,cal_id:cal_id},$scope.openUploader=function(){$timeout(function(){$("#appt_doc_upload").click()},100)},$scope.document_panel={},$scope.docSelected=function(item){window.open(download_api+item.id)},$scope.docs={select:0,"class":function(doc){return{selected:doc.cal_id==cal_id}},scope:$scope.document_panel,options:{api:"api/erm/v2/apptdoc/search",method:"post",scope:$scope.document_panel,columns:[{field:"id",is_hide:!0},{field:"cal_id",label:"Date",width:"20%",type:"custom",fn:function(item){return item.appointment?moment(item.appointment.FROM_TIME).format("DD-MM-YYYY - h:mm"):""}},{field:"document_name",label:"Document Name",width:"70%"}],use_filters:!0,filters:{document_name:{type:"text"},cal_id:{type:"dropdown",values:[{label:"Appointment",code:cal_id},{label:"All"}]}},search:{patient_id:$stateParams.patient_id},use_actions:!0,actions:[{"class":"fa fa-times",title:"Delete",callback:function(item){PatientService.deleteFile(item.id).then(function(res){"success"===res.status&&(toastr.success("Delete file success!","Success!"),$scope.document_panel.reload())})}},{"class":"fa fa-download",title:"Donwload",callback:function(item){console.log(item),window.open(download_api+item.id)}}]}}}),angular.module("app.loggedIn.patient.listall.controller",[]).controller("PatientListAllController",function(CompanyModel,$scope,$state){$scope.patient_panel={};$scope.patients={select:0,"class":function(patient){return{selected:patient.ID==$scope.patients.select}},scope:$scope.patient_panel,options:{api:"api/erm/v2/patient/search",method:"post",scope:$scope.patient_panel,columns:[{field:"Patient_id",is_hide:!0},{field:"First_name",label:"First name"},{field:"Sur_name",label:"Last name"},{field:"Address1",label:"Address"},{field:"Post_code",label:"Post Code"}],use_filters:!0,filters:{First_name:{type:"text"},Sur_name:{type:"text"},Address1:{type:"text"},Post_code:{type:"text"}}}},$scope.actionCenter={runWhenFinish:function(){$scope.patientAddForm.close(),$scope.patient_panel.reload()}},$scope.patientAddForm={params:{permission:{edit:!1,create:!0}},is_show:!1,open:function(){$scope.patientAddForm.params.isAtAllPatient=!0,this.is_show=!0},close:function(){this.is_show=!1},success:function(response){"success"==response.status&&alert("okokok"),$scope.patient_panel.reload()}},$scope.rowClick=function(item){var postData={datetime:moment().format("YYYY-MM-DD hh:mm:ss"),patient_id:item.Patient_id};CompanyModel.getFromTime(postData).then(function(response){-1==response.data?$state.go("loggedIn.patient.detail",{patient_id:item.Patient_id,cal_id:-1}):$state.go("loggedIn.patient.consult",{patient_id:item.Patient_id,cal_id:response.data.CAL_ID})},function(error){})},$scope.patientEditForm={params:{permission:{edit:!0,create:!1}},is_show:!1,open:function(patient_id){$scope.patientEditForm.params.id=patient_id,console.log($scope.patientEditForm.params),this.is_show=!0},close:function(){this.is_show=!1},success:function(response){"success"==response.status&&$scope.patient_panel.reload()}}}),angular.module("app.loggedIn.patient.checkin.controller",[]).controller("PatientCheckinController",function(socket,$scope,ConfigService,PatientService,toastr,$state){$scope.showPatientResult=!1,$scope.showAppointmentOfId=null,$scope.patient_panel={},$scope.appointment_panel={},$scope.patientSearch={},$scope.patients={show:function(searchInfo){$scope.patients.options.search=searchInfo,$scope.patient_panel.reload()},reset:function(){$scope.patients.options.search={First_name:null,Sur_name:null,DOB:null},$scope.patient_panel.reload()},"class":function(patient){},scope:$scope.patient_panel,options:{api:"api/erm/v2/patient/checkin_search",method:"post",scope:$scope.patient_panel,columns:[{field:"Patient_id",label:"ID"},{field:"First_name",label:"First name"},{field:"Sur_name",label:"Last name"},{field:"DOB",label:"Date Of Birth",type:"custom",fn:function(item){return ConfigService.getCommonDateDefault(item.DOB)}},{type:"button",btnlabel:"Appointment",btnfn:function(item){$scope.appointments.show(item.Patient_id),$scope.patientInfoCalendar&&($scope.patientInfoCalendar.Patient_id=item.Patient_id,console.log($scope.patientInfoCalendar),$scope.bottomNewBooking=!0)}}],not_load:!0}},$scope.appointments={show:function(patient_id){$scope.appointments.options.search={Patient_id:patient_id},$scope.appointment_panel.reload()},reset:function(){$scope.appointments.options.search={Patient_id:null},$scope.appointment_panel.reload()},"class":function(appointment){return{}},scope:$scope.appointment_panel,options:{api:"api/erm/v2/appt/appt_by_id",method:"post",scope:$scope.appointment_panel,columns:[{field:"CAL_ID",is_hide:!0},{field:"Patient_id",is_hide:!0},{field:"appointment",label:"Appointment time",type:"custom",fn:function(item){return ConfigService.getCommonDatetime(item.appointment.FROM_TIME)}},{field:"appt_status",label:"Appointment Status",type:"custom",fn:function(item){return ptnConst.apptStatusDisplay[item.appt_status]}},{type:"button",btnlabel:"Check In",btnfn:function(item){console.log("id neeeeee",item.appointment.DOCTOR_ID),PatientService.checkIn(item.CAL_ID,item.Patient_id).then(function(result){"success"!==result.status?toastr.error("Check-in error!","Error"):(socket.emit("notifyReceptionist"),socket.emit("notifyDoctor",item.appointment.DOCTOR_ID),toastr.success("Checked In!","Success!"),$scope.appointment_panel.reload())})},disfn:function(item){return item.appt_status!=ptnConst.apptStatus.booking.value?!0:!1}}],not_load:!0}},$scope.searchClick=function(){if($scope.isSubmit=!0,!$scope.sysservicesForm.$invalid)if($scope.patientSearch.First_name||$scope.patientSearch.Sur_name||$scope.patientSearch.DOB){var searchData={First_name:$scope.patientSearch.First_name,Sur_name:$scope.patientSearch.Sur_name,DOB:$scope.patientSearch.DOB};""===searchData.First_name&&(searchData.First_name=void 0),""===searchData.Sur_name&&(searchData.Sur_name=void 0),""===searchData.DOB&&(searchData.DOB=void 0),searchData.DOB&&(searchData.DOB=ConfigService.getCommonDate(searchData.DOB)),$scope.patients.show(searchData)}else toastr.error("Please provide at least 1 information!","Error!")},$scope.resetClick=function(){$scope.isSubmit=!0,$scope.sysservicesForm.$invalid||($scope.appointments.reset(),$scope.patients.reset(),$scope.patientSearch={})},$scope.goToNewBooking=function(){$scope.patientInfoCalendar?(console.log($scope.patientInfoCalendar.Patient_id),$state.go("webpatient.booking")):toastr.error("No information available on the patient","Error")}}),angular.module("app.loggedIn.patient.makecall.directive",[]).directive("makecallService",function(PatientService,$modal,$timeout,$state,$stateParams,$cookieStore,$modal,toastr,AppointmentModel,mdtRedimedsitesService,mdtDeptService,ConfigService){return{restrict:"EA",templateUrl:"modules/patient/directives/templates/makecall.html",scope:{options:"=",refresh:"="},link:function(scope,elem,attrs){scope.extendMinutes=function(hour,minute){hour=scope.convertToSeconds(hour);var seconds=hour+60*minute,sec_num=parseInt(seconds,10),hours=Math.floor(sec_num/3600),minutes=Math.floor((sec_num-3600*hours)/60);10>hours&&(hours="0"+hours),10>minutes&&(minutes="0"+minutes);var time=hours+":"+minutes;return time},scope.convertToSeconds=function(time){var hour=parseInt(time.substring(0,2)),minute=parseInt(time.substring(3));return 3600*hour+60*minute},scope.differentTimeHours=function(hourOne,hourSecond){return 0!==hourSecond?(hourOne=scope.convertToSeconds(hourOne),hourSecond=scope.convertToSeconds(hourSecond),(hourSecond-hourOne)/60):0};var search={datepicker:moment().format("DD/MM/YYYY"),site_id:1,clinical_dept_id:""},loadSite=function(){mdtRedimedsitesService.list().then(function(response){scope.site.list=response.data},function(error){})},loadClinical=function(){mdtDeptService.listAll().then(function(response){scope.clinicalDept.list=response.data},function(error){})},load=function(){var postData=angular.copy(scope.appointment.search);postData.datepicker=ConfigService.convertToDB(postData.datepicker),scope.appointment.list=[],AppointmentModel.load(postData).then(function(response){scope.doctor.headers=response.doctors;var doctor_array_temp=[];_.forEach(response.doctors,function(doctor){doctor_array_temp.push({DOCTOR_ID:doctor.DOCTOR_ID,left:0})});var min_calendar=9999;_.forEach(response.data,function(data){var flagTheme=-1,flagPatient=-1,i=0;if(_.forEach(scope.appointment.list,function(list){list.FROM_TIME===data.FROM_TIME&&_.forEach(list.cals,function(cal){return cal===data.CAL_ID?void(flagPatient=i):void(flagTheme=i)}),i++}),data.Patient_id&&-1===flagPatient&&(flagPatient=1e3),-1!==flagPatient)if(1e3!==flagPatient){var doctor_row=0;scope.appointment.list[flagPatient].cals.push(data.CAL_ID),_.forEach(response.doctors,function(doctor){return doctor.DOCTOR_ID===data.DOCTOR_ID?(scope.appointment.list[flagPatient].doctors[doctor_row].patients.push({Patient_id:data.Patient_id,First_name:data.First_name,Sur_name:data.Sur_name,outreferral:data.outreferral,DOCTOR_ID:data.DOCTOR_ID}),void(scope.appointment.list[flagPatient].doctors[doctor_row].PATIENTS="ok")):void doctor_row++})}else{var temp_index=0,flagIndex=!1;if(_.forEach(scope.appointment.list,function(list){data.FROM_TIME===list.FROM_TIME&&_.forEach(list.doctors,function(doc){if(doc.DOCTOR_ID===data.DOCTOR_ID){if("###"===doc.PATIENTS){var doctor_row=0;return scope.appointment.list[temp_index].cals.push(data.CAL_ID),_.forEach(response.doctors,function(doctor){return doctor.DOCTOR_ID===data.DOCTOR_ID?(scope.appointment.list[temp_index].doctors[doctor_row].CAL_ID=data.CAL_ID,scope.appointment.list[temp_index].doctors[doctor_row].SERVICE_COLOR=data.SERVICE_COLOR,scope.appointment.list[temp_index].doctors[doctor_row].patients=[],scope.appointment.list[temp_index].doctors[doctor_row].patients.push({Patient_id:data.Patient_id,First_name:data.First_name,Sur_name:data.Sur_name,Outreferral:data.outreferral}),scope.appointment.list[temp_index].doctors[doctor_row].PATIENTS="ok",void(scope.appointment.list[temp_index].doctors[doctor_row].IS_REFERRAL=data.IS_REFERRAL)):void doctor_row++}),void(flagIndex=!0)}var doctor_row=0;return scope.appointment.list[temp_index].cals.push(data.CAL_ID),_.forEach(response.doctors,function(doctor){return doctor.DOCTOR_ID===data.DOCTOR_ID?(scope.appointment.list[temp_index].doctors[doctor_row].patients.push({Patient_id:data.Patient_id,First_name:data.First_name,Sur_name:data.Sur_name,Outreferral:data.outreferral}),void(scope.appointment.list[temp_index].doctors[doctor_row].PATIENTS="ok")):void doctor_row++}),void(flagIndex=!0)}}),temp_index++}),!flagIndex){var doctors=[];_.forEach(response.doctors,function(doctor){doctors.push(doctor.DOCTOR_ID===data.DOCTOR_ID?{DOCTOR_ID:doctor.DOCTOR_ID,DOCTOR_NAME:doctor.NAME,SERVICE_ID:data.SERVICE_ID,CAL_ID:data.CAL_ID,IS_REFERRAL:data.IS_REFERRAL,SERVICE_COLOR:data.SERVICE_COLOR,PATIENTS:"MESS_SYS_010",patients:[],CLINICAL_DEPT_ID:data.CLINICAL_DEPT_ID}:{DOCTOR_ID:doctor.DOCTOR_ID,DOCTOR_NAME:doctor.NAME,PATIENTS:"###"})});var doctor_row=0;_.forEach(doctors,function(doctor){doctor.DOCTOR_ID===data.DOCTOR_ID&&(doctors[doctor_row].patients.push({Patient_id:data.Patient_id,First_name:data.First_name,Sur_name:data.Sur_name,Outreferral:data.outreferral}),doctors[doctor_row].PATIENTS="ok"),doctor_row++});var cal=[];cal.push(data.CAL_ID);var object={FROM_TIME:data.FROM_TIME,TO_TIME:data.TO_TIME,cals:cal,doctors:doctors};scope.appointment.list.push(object)}}else if(-1!==flagTheme){var doctor_row=0;_.forEach(scope.appointment.list[flagTheme].doctors,function(doctor){return doctor.DOCTOR_ID===data.DOCTOR_ID?(scope.appointment.list[flagTheme].doctors[doctor_row].patients=[],scope.appointment.list[flagTheme].cals.push(data.CAL_ID),null!==data.Patient_id&&scope.appointment.list[flagTheme].doctors[doctor_row].patients.push({Patient_id:data.Patient_id,First_name:data.First_name,Sur_name:data.Sur_name,Outreferral:data.outreferral}),scope.appointment.list[flagTheme].doctors[doctor_row].PATIENTS="MESS_SYS_010",scope.appointment.list[flagTheme].doctors[doctor_row].SERVICE_ID=data.SERVICE_ID,scope.appointment.list[flagTheme].doctors[doctor_row].CAL_ID=data.CAL_ID,scope.appointment.list[flagTheme].doctors[doctor_row].SERVICE_COLOR=data.SERVICE_COLOR,scope.appointment.list[flagTheme].doctors[doctor_row].IS_REFERRAL=data.IS_REFERRAL,scope.appointment.list[flagTheme].doctors[doctor_row].CLINICAL_DEPT_ID=data.CLINICAL_DEPT_ID,void(scope.appointment.list[flagTheme].doctors[doctor_row].patients.length>0&&(scope.appointment.list[flagTheme].doctors[doctor_row].PATIENTS="ok"))):void doctor_row++})}else{var doctors=[];_.forEach(response.doctors,function(doctor){doctors.push(doctor.DOCTOR_ID===data.DOCTOR_ID?{DOCTOR_ID:doctor.DOCTOR_ID,DOCTOR_NAME:doctor.NAME,SERVICE_ID:data.SERVICE_ID,CAL_ID:data.CAL_ID,IS_REFERRAL:data.IS_REFERRAL,SERVICE_COLOR:data.SERVICE_COLOR,PATIENTS:"MESS_SYS_010",patients:[],CLINICAL_DEPT_ID:data.CLINICAL_DEPT_ID}:{DOCTOR_ID:doctor.DOCTOR_ID,DOCTOR_NAME:doctor.NAME,PATIENTS:"###"})});var differentTimeHours=scope.differentTimeHours(data.FROM_TIME,data.TO_TIME);min_calendar>=differentTimeHours&&(min_calendar=differentTimeHours);var i=0;_.forEach(doctor_array_temp,function(doctor){doctor.DOCTOR_ID===data.DOCTOR_ID&&(doctor_array_temp[i].left=scope.differentTimeHours(data.FROM_TIME,data.TO_TIME)),i++});var cal=[];cal.push(data.CAL_ID);var object={FROM_TIME:data.FROM_TIME,TO_TIME:data.TO_TIME,cals:cal,SERVICE_ID:data.SERVICE_ID,CLINICAL_DEPT_ID:data.CLINICAL_DEPT_ID,doctors:doctors};scope.appointment.list.push(object)}}),scope.appointment.new_list=[];var i=0;if(scope.appointment.list.length>0)var begin_from_time=scope.appointment.list[0].FROM_TIME;_.forEach(scope.appointment.list,function(list){if("undefined"!=typeof scope.appointment.list[i+1])var begin_to_time=scope.appointment.list[i+1].FROM_TIME;else var begin_to_time=scope.extendMinutes(begin_from_time,45);var diff=scope.differentTimeHours(begin_from_time,begin_to_time);scope.appointment.new_list.push(scope.appointment.list[i]);var new_list_length=scope.appointment.new_list.length,j=0;_.forEach(scope.appointment.new_list[new_list_length-1].doctors,function(doctor){scope.appointment.new_list[new_list_length-1].doctors[j].border="yes",j++});for(var diff_i=15;diff-15>=diff_i;diff_i+=15){var from_time=scope.extendMinutes(scope.appointment.list[i].FROM_TIME,diff_i);begin_from_time=from_time;var temp_doctors=angular.copy(scope.appointment.list[i].doctors),doc_i=0;_.forEach(temp_doctors,function(doctor){temp_doctors[doc_i].PATIENTS="###",doc_i++}),scope.appointment.new_list.push({FROM_TIME:from_time,doctors:temp_doctors})}begin_from_time=scope.extendMinutes(begin_from_time,15),i++}),scope.appointment.list=angular.copy(scope.appointment.new_list);var i=0;_.forEach(scope.appointment.list,function(list){var j=0;_.forEach(list.doctors,function(doctor){var k=0;_.forEach(doctor_array_temp,function(temp){doctor.DOCTOR_ID===temp.DOCTOR_ID&&("###"!==doctor.PATIENTS?(doctor_array_temp[k].left_temp=doctor_array_temp[k].left-15,doctor_array_temp[k].color=scope.appointment.list[i].doctors[j].SERVICE_COLOR,0===doctor_array_temp[k].left_temp&&(scope.appointment.list[i].doctors[j].height="35px")):doctor_array_temp[k].left_temp>0&&(scope.appointment.list[i].doctors[j].SERVICE_COLOR=doctor_array_temp[k].color,doctor_array_temp[k].left_temp-=15,0===doctor_array_temp[k].left_temp&&(scope.appointment.list[i].doctors[j].height="35px"))),k++}),j++}),i++});var i=0;_.forEach(scope.appointment.list,function(list){var j=0;_.forEach(list.doctors,function(doctor){"undefined"!=typeof scope.appointment.list[i].doctors[j].patients&&scope.appointment.list[i].doctors[j].patients.length>1&&"ok"===scope.appointment.list[i].doctors[j].PATIENTS&&(scope.appointment.list[i].doctors[j].height="auto"),j++}),i++})},function(error){})},onOrder=function(data){var postData={Patient_id:$stateParams.patient_id,CAL_ID:data};PatientService.Add_CAL(postData).then(function(response){scope.refresh=!0},function(error){})};scope.site={list:[],load:function(){loadSite()}},scope.doctor={headers:[]},scope.appointment={list:[],onOrder:function(data){onOrder(data)},search:angular.copy(search),load:function(){load()}},scope.clinicalDept={list:[],load:function(){loadClinical()}},scope.site.load(),scope.clinicalDept.load(),scope.appointment.load()}}}),angular.module("app.loggedIn.patient.claim",["app.loggedIn.patient.claim.controllers","app.loggedIn.patient.claim.services"]).config(function($stateProvider){}),angular.module("app.loggedIn.patient.claim.services",[]).factory("ClaimService",function(Restangular){var claimService={},mdtApi=Restangular.all("api/meditek/v1/patient/claim");return claimService.search=function(options){var funcApi=mdtApi.all("search");return funcApi.post(options)},claimService.add=function(params){var funcApi=mdtApi.all("add");return funcApi.post(params)},claimService}),angular.module("app.loggedIn.patient.claim.controllers",["app.loggedIn.patient.claim.list.controller"]).controller("ClaimController",function($scope){}),angular.module("app.loggedIn.patient.claim.list.controller",[]).controller("ClaimListController",function($scope,$stateParams,ClaimService,toastr){var idClaimDetailAdd="#PopupClaimDetailAdd";$scope.claim_params={permission:{edit:!1},isOpenFirst:!1,Patient_id:$stateParams.patient_id},$scope.list={},$scope.$watch("claim",function(newClaim){"undefined"!=typeof newClaim&&(loadList(),angular.element(idClaimDetailAdd).fadeOut())}),$scope.params={pagination:{limit:10,offset:0,current_page:1,max_size:5},filters:[{type:"select",name:"Patient_id",value:$stateParams.patient_id},{type:"select",name:"Claim_no",value:""},{type:"text",name:"Injury_name",value:""},{type:"text",name:"Location",value:""}],select:["Claim_id","Patient_id","Claim_no","Injury_name","Location"]};var loadList=function(){ClaimService.search($scope.params).then(function(response){"success"===response.status&&($scope.list=response)},function(error){console.log("Error Server")})};loadList(),$scope.refreshList=function(){loadList()},$scope.setPage=function(){$scope.params.pagination.offset=($scope.params.pagination.current_page-1)*$scope.params.pagination.limit,loadList()},$scope.openPopup=function(option){$scope.claim_params.isOpenFirst=!0,"add"===option.type&&$scope.claim_params.isOpenFirst===!0&&angular.element(idClaimDetailAdd).fadeIn()},$scope.clickRow=function(claimData){$scope.claim_params.isOpenFirst=!0,$scope.claim_params.permission.edit!==!0&&($scope.claim_params={permission:{edit:!0,Claim_id:claimData.row.Claim_id}}),($scope.claim_params.isOpenFirst=!0)&&angular.element(idClaimDetailAdd).fadeIn()},$scope.$watch("claim_params.permission.edit",function(editMode){editMode!==!0&&loadList();

})});