angular.module("app.loggedIn.pr",["app.loggedIn.pr.controller","app.loggedIn.pr.service","app.loggedIn.pr.directive","app.loggedIn.pr.prImportTaxList.directive","app.loggedIn.pr.prTaxList.controller"]).config(function($stateProvider){$stateProvider.state("loggedIn.pr",{url:"/pr",templateUrl:"modules/hrPayroll/views/pr.html",controller:"prController"}).state("loggedIn.pr.prTaxList",{url:"/taxlist",templateUrl:"modules/hrPayroll/views/prTaxList.html",controller:"prTaxListController"})}),angular.module("app.loggedIn.pr.controller",[]).controller("prController",function($scope,prService){}),angular.module("app.loggedIn.pr.directive",[]),angular.module("app.loggedIn.pr.prImportTaxList.directive",[]).directive("prImportTaxList",function(){return{restrict:"E",transclude:!0,required:["^ngModel"],scope:{},templateUrl:"modules/hrPayroll/directives/prImportTaxList.html",controller:function($scope,prService,FileUploader){var uploader=$scope.uploader=new FileUploader({url:"/api/pr/fornightly-tax/import-tax-list"});uploader.filters.push({name:"customFilter",fn:function(item,options){return this.queue.length<10}}),uploader.onWhenAddingFileFailed=function(item,filter,options){console.info("onWhenAddingFileFailed",item,filter,options)},uploader.onAfterAddingFile=function(fileItem){uploader.queue.splice(0,uploader.queue.length-1),console.info("onAfterAddingFile",fileItem)},uploader.onAfterAddingAll=function(addedFileItems){console.info("onAfterAddingAll",addedFileItems)},uploader.onBeforeUploadItem=function(item){console.info("onBeforeUploadItem",item)},uploader.onProgressItem=function(fileItem,progress){console.info("onProgressItem",fileItem,progress)},uploader.onProgressAll=function(progress){console.info("onProgressAll",progress)},uploader.onSuccessItem=function(fileItem,response,status,headers){console.info("onSuccessItem",fileItem,response,status,headers)},uploader.onErrorItem=function(fileItem,response,status,headers){console.info("onErrorItem",fileItem,response,status,headers)},uploader.onCancelItem=function(fileItem,response,status,headers){console.info("onCancelItem",fileItem,response,status,headers)},uploader.onCompleteItem=function(fileItem,response,status,headers){console.info("onCompleteItem",fileItem,response,status,headers)},uploader.onCompleteAll=function(){console.info("onCompleteAll")},console.info("uploader",uploader),$scope.importTaxList=function(){uploader.uploadAll()}}}}),angular.module("app.loggedIn.pr.service",[]).factory("prService",function(Restangular,$http,$q,$window){var prService={},api=Restangular.all("api");return prService.taxList={getAllTaxListHeader:function(){var result=api.one("pr/fornightly-tax/get-all-taxlist-header");return result.get()},getTaxListDetail:function(taxHeaderId,startIndex,numberOfItems){var result=api.all("pr/fornightly-tax/get-taxlist-detail");return result.post({taxHeaderId:taxHeaderId,startIndex:startIndex,numberOfItems:numberOfItems})}},prService}),angular.module("app.loggedIn.pr.prTaxList.controller",[]).controller("prTaxListController",function($scope,prService){$scope.getAllTaxListHeader=function(){$scope.taxList=[],prService.taxList.getAllTaxListHeader().then(function(data){$scope.taxList="success"==data.status?data.data:[]},function(err){$scope.taxList=[]})},$scope.getAllTaxListHeader(),$scope.taxListDetail=[],$scope.getTaxListDetail=function(taxHeaderId){prService.taxList.getTaxListDetail(taxHeaderId).then(function(data){$scope.taxListDetail="success"==data.status?data.data:[]},function(err){$scope.taxListDetail=[]})},$scope.selectedTaxList={},$scope.setSelectedTaxList=function(item){$scope.selectedTaxList=item,$scope.taxListLoader=new TaxListDetailLoader(item.id,100),$scope.taxListLoader.loadMore()};var TaxListDetailLoader=function(taxHeaderId,numberOfItems){this.taxListDetail=[],this.busy=!1,this.after=-1,this.taxHeaderId=taxHeaderId,this.numberOfItems=numberOfItems};TaxListDetailLoader.prototype.loadMore=function(){this.busy||(this.busy=!0,prService.taxList.getTaxListDetail(this.taxHeaderId,this.after+1,this.numberOfItems).then(function(data){"success"==data.status&&(this.taxListDetail=this.taxListDetail.concat(data.data),this.after=this.after+data.data.length,this.busy=!1)}.bind(this),function(err){}))}});