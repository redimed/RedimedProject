angular.module("app.loggedIn.user",["app.loggedIn.user.services","app.loggedIn.user.profile.controller","app.loggedIn.user.type.controller"]).config(function($stateProvider){$stateProvider.state("loggedIn.userProfile",{url:"/users/profile",templateUrl:"modules/user/views/profile.html",controller:"UserProfileController"}).state("loggedIn.userType",{url:"/usersType",templateUrl:"modules/user/views/userType.html",controller:"UserTypeController"})}),angular.module("app.loggedIn.user.services",[]).factory("UserService",function(Restangular){var userService={},userApi=Restangular.all("api"),mdtUserApi=Restangular.all("api/meditek/v1/user/");return userService.all=function(){var funcApi=mdtUserApi.one("all");return funcApi.get()},userService.detail=function(username){var detailApi=userApi.one("users/loggedin");return detailApi.get()},userService.menu=function(id){var menuApi=userApi.all("menu/side");return menuApi.post({id:id,isWeb:!0})},userService.getFunction=function(id){var a=userApi.all("function/id");return a.post({id:id})},userService.getCompany=function(){var comp=userApi.one("company/list");return comp.get()},userService.updateProfile=function(info){var edit=userApi.all("users/editProfile");return edit.post({info:info})},userService.getUserInfo=function(id){var info=userApi.all("users/id");return info.post({id:id})},userService.getUserType=function(){return userApi.one("users/type").get()},userService.updateUserType=function(info){return userApi.all("users/type/edit").post({info:info})},userService.deleteUserType=function(id){return userApi.all("users/type/delete").post({id:id})},userService.insertUserType=function(info){return userApi.all("users/type/insert").post({info:info})},userService.getUserTypeMenu=function(id){return userApi.all("users/type/menu").post({id:id})},userService.insertUserTypeMenu=function(info){return userApi.all("users/type/menu/insert").post({info:info})},userService.updateUserTypeMenu=function(info,id,type_id){return userApi.all("users/type/menu/edit").post({info:info,id:id,typeId:type_id})},userService.deleteUserTypeMenu=function(id){return userApi.all("users/type/menu/delete").post({id:id})},userService.getOnlineUsers=function(){return userApi.one("im/getOnlineUsers").get()},userService}),angular.module("app.loggedIn.user.profile.controller",[]).controller("UserProfileController",function($scope,$modal,$filter,FileUploader,UserService,$http,toastr,$cookieStore){var userInfo=null,companyInfo=null;$scope.isCompany=!1,void 0!=$cookieStore.get("userInfo")&&(userInfo=$cookieStore.get("userInfo")),void 0!=$cookieStore.get("companyInfo")&&(companyInfo=$cookieStore.get("companyInfo")),$scope.detail="Company"==userInfo.UserType.user_type?{id:userInfo.id,img:null,company_id:companyInfo.id,Booking_Person:userInfo.Booking_Person,Contact_number:userInfo.Contact_number,Contact_email:userInfo.Contact_email,result_email:userInfo.result_email,invoiceemail:userInfo.invoiceemail,userLegal:userInfo.MEDICO_LEGAL_REGISTER_STATUS,isAccessReportOnline:userInfo.IS_ACCESS_REPORTS_ONLINE}:{id:userInfo.id,img:null,Booking_Person:userInfo.Booking_Person,Contact_number:userInfo.Contact_number,Contact_email:userInfo.Contact_email},UserService.getUserInfo(userInfo.id).then(function(data){$scope.detail.img=data.img}),UserService.getCompany().then(function(data){$scope.companyList=data}),"Company"==userInfo.UserType.user_type?($scope.isCompany=!0,$scope.info={name:userInfo.Booking_Person,username:userInfo.user_name,phone:userInfo.Contact_number,email:userInfo.Contact_email,userType:userInfo.UserType.user_type,companyName:companyInfo.Company_name,companyIndustry:companyInfo.Industry,companyAddr:companyInfo.Addr,companyState:companyInfo.State}):($scope.isCompany=!1,$scope.info={name:userInfo.Booking_Person,username:userInfo.user_name,phone:userInfo.Contact_number,email:userInfo.Contact_email,userType:userInfo.UserType.user_type}),$scope.updateUserProfile=function(userForm){UserService.updateProfile($scope.detail).then(function(data){"success"===data.status?toastr.success("Edit Successfully!","Success"):toastr.error("Edit Failed!","Error")})},$scope.changeUserPassword=function(){$modal.open({templateUrl:"modules/user/views/changePassModal.html",controller:"UserChangePassController",size:"md",resolve:{userId:function(){return userInfo.id}}})}}).controller("UserChangePassController",function($scope,$filter,$state,$modalInstance,OnlineBookingService,userId,toastr){$scope.info={oldPass:null,newPass:null,id:userId},$scope.cancel=function(){$modalInstance.dismiss("cancel")},$scope.okClick=function(changePassForm){$scope.showClickedValidation=!0,changePassForm.$invalid?toastr.error("Please Input All Required Information!","Error"):swal({title:"Confirm",text:"Are You Sure Want To Change Your Password?",type:"warning",showCancelButton:!0,confirmButtonColor:"#DD6B55",confirmButtonText:"Yes",closeOnConfirm:!0},function(){OnlineBookingService.changeUserPassword($scope.info).then(function(data){"success"===data.status?(toastr.success("Change Password Successfully","Success"),$modalInstance.dismiss("cancel")):"error"===data.status&&toastr.error("Change Password Failed","Error")})})}}),angular.module("app.loggedIn.user.type.controller",[]).controller("UserTypeController",function($scope,$modal,$state,$filter,ngTableParams,UserService,MenuService,$http,toastr){$scope.data=[],$scope.data1=[],$scope.selectedId=null,$scope.tableParams2=new ngTableParams({page:1,count:25},{total:$scope.data1.length,getData:function($defer,params){var orderedData=params.sorting()?$filter("orderBy")($scope.data1,params.orderBy()):$scope.data1;orderedData=params.filter()?$filter("filter")(orderedData,params.filter()):orderedData,params.total(orderedData.length),$defer.resolve(orderedData.slice((params.page()-1)*params.count(),params.page()*params.count()))}}),UserService.getUserType().then(function(data){$scope.data=data,$scope.tableParams=new ngTableParams({page:1,count:10},{total:$scope.data.length,getData:function($defer,params){var orderedData=params.sorting()?$filter("orderBy")($scope.data,params.orderBy()):$scope.data;orderedData=params.filter()?$filter("filter")(orderedData,params.filter()):orderedData,params.total(orderedData.length),$defer.resolve(orderedData.slice((params.page()-1)*params.count(),params.page()*params.count()))}})}),$scope.loadMenu=function(m){MenuService.menuRootList().then(function(data){return $scope.menuList=data})},$scope.showMenu=function(m){$scope.selectedId=m.ID,$scope.selectedType=m.user_type,$scope.data1=[],UserService.getUserTypeMenu(m.ID).then(function(data){$scope.data1=data,$scope.$watch("data1",function(data){$scope.tableParams2.reload()})})},$scope.updateType=function(m){var info={id:m.ID,user_type:m.user_type};UserService.updateUserType(info).then(function(data){"success"==data.status?toastr.success("Edit Successfully!","Success"):toastr.error("Edit Failed!","Error")})},$scope.deleteType=function(m){UserService.deleteUserType(m.ID).then(function(data){"success"==data.status?(toastr.success("Delete Successfully!","Success"),UserService.getUserType().then(function(data){$scope.data=data,$scope.$watch("data",function(data){$scope.tableParams.reload()})})):toastr.error("Delete Failed!","Error")})},$scope.addNewType=function(){var modalInstance=$modal.open({templateUrl:"modules/user/views/insertTypeModal.html",controller:"InsertTypeController",size:"md"});modalInstance.result.then(function(){UserService.getUserType().then(function(data){$scope.data=data,$scope.$watch("data",function(data){$scope.tableParams.reload()})})})},$scope.addNewMenu=function(){var modalInstance=$modal.open({templateUrl:"modules/user/views/newTypeMenuModal.html",controller:"NewTypeMenuController",size:"md",resolve:{typeId:function(){return $scope.selectedId}}});modalInstance.result.then(function(){UserService.getUserTypeMenu($scope.selectedId).then(function(data){$scope.data1=data,$scope.$watch("data1",function(data){$scope.tableParams2.reload()})})})},$scope.updateMenu=function(m){var info={menu_id:m.menu_id,isEnable:m.isEnable};UserService.updateUserTypeMenu(info,m.id,m.type_id).then(function(data){"success"==data.status?(toastr.success("Edit Successfully!","Success"),UserService.getUserTypeMenu($scope.selectedId).then(function(data){$scope.data1=data,$scope.$watch("data1",function(data){$scope.tableParams2.reload()})})):toastr.error("Edit Failed!","Error")})},$scope.deleteMenu=function(id){UserService.deleteUserTypeMenu(id).then(function(data){"success"==data.status?(toastr.success("Delete Successfully!","Success"),UserService.getUserTypeMenu($scope.selectedId).then(function(data){$scope.data1=data,$scope.$watch("data1",function(data){$scope.tableParams2.reload()})})):toastr.error("Delete Failed!","Error")})}}).controller("InsertTypeController",function($scope,$modalInstance,$state,$filter,UserService,toastr){$scope.info={user_type:null},$scope.cancel=function(){$modalInstance.close()},$scope.submit=function(){$scope.showClickedValidation=!0,$scope.userTypeForm.$invalid?toastr.error("Please Enter Required Information!","Error"):UserService.insertUserType($scope.info).then(function(data){"success"==data.status?(toastr.success("Insert Successfully!","Success"),$modalInstance.close()):toastr.success("Insert Failed!","Error")})}}).controller("NewTypeMenuController",function($scope,$modalInstance,$state,$filter,UserService,MenuService,toastr,typeId){$scope.info={menu_id:null,isEnable:"1",type_id:typeId},$scope.cancel=function(){$modalInstance.close()},MenuService.menuRootList().then(function(data){$scope.menuList=data}),$scope.submit=function(){$scope.showClickedValidation=!0,$scope.userTypeForm.$invalid?toastr.error("Please Enter Required Information!","Error"):UserService.insertUserTypeMenu($scope.info).then(function(data){"success"==data.status?(toastr.success("Insert Successfully!","Success"),$modalInstance.close()):toastr.success("Insert Failed!","Error")})}});