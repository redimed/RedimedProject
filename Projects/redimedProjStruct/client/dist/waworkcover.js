angular.module("app.loggedIn.waworkcover",["app.loggedIn.waworkcover.controller","app.loggedIn.waworkcover.directive","app.loggedIn.waworkcover.service"]).config(function($stateProvider){$stateProvider.state("loggedIn.waworkcover",{"abstract":!0,templateUrl:"modules/waworkcover/views/structure.html",controller:"WaWorkCoverController"}).state("loggedIn.waworkcover.first",{url:"/wa/workcover/:patient_id/:cal_id/first/:action/:wc_id",views:{"main-content":{templateUrl:"modules/waworkcover/views/first.html",controller:"WaWorkCoverFirstController"}}}).state("loggedIn.waworkcover.progress",{url:"/wa/workcover/:patient_id/:cal_id/progress/:action/:wc_id",views:{"main-content":{templateUrl:"modules/waworkcover/views/progress.html",controller:"WaWorkCoverProgressController"}}}).state("loggedIn.waworkcover.final",{url:"/wa/workcover/:patient_id/:cal_id/final/:action/:wc_id",views:{"main-content":{templateUrl:"modules/waworkcover/views/final.html",controller:"WaWorkCoverFinalController"}}}).state("loggedIn.waworkcover.general",{url:"/wa/workcover/:patient_id/:cal_id/general/:action/:wc_id",views:{"main-content":{templateUrl:"modules/waWorkCover/views/general.html",controller:"WaWorkCoverGeneralController"}}})}),angular.module("app.loggedIn.waworkcover.directive",["app.loggedIn.waworkcover.first.directive","app.loggedIn.waworkcover.progress.directive","app.loggedIn.waworkcover.final.directive","app.loggedIn.waworkcover.general.directive"]),angular.module("app.loggedIn.waworkcover.final.directive",[]).directive("workCoverFinal",function(DocumentService,DoctorService,ReceptionistService,ConfigService,PatientService,toastr,WaWorkCoverService,$state,$cookieStore,CompanyService){return{restrict:"EA",scope:{data:"@",params:"="},templateUrl:"modules/waWorkCover/directives/templates/final.html",link:function(scope,element,attrs){var init=function(){scope.oneAtATime=!1,scope.isSubmit=!1,scope.wafinal={examDate:new Date},PatientService.mdtById(scope.params.patientInfo).then(function(res){"success"===res.status&&""!==res.data&&null!==res.data&&void 0!==res.data&&(scope.patient=res.data,scope.patient.DOB=new Date(scope.patient.DOB),void 0!==scope.patient.company_id&&null!==scope.patient.company_id&&""!==scope.patient.company_id&&CompanyService.mdtById(scope.patient.company_id).then(function(res2){"success"===res2.status&&void 0!==res.data&&null!==res.data&&""!==res.data&&(scope.company=res2.data)}))});var userInfo=$cookieStore.get("userInfo"),apptInfo={user_id:userInfo.id};DocumentService.getDoctor(apptInfo).then(function(result){"error"===result.status?toastr.error("Unexpected error!","Error"):"no doctor"===result.status?toastr.error("The account treating this workcover have no doctor link with it","Error!"):(console.log("this is doctor",result),scope.doctor=result.data[0])}),scope.params.edit===!0&&scope.params.workcover&&WaWorkCoverService.finaldetail(scope.params.workcover).then(function(res){if(res.data){scope.wafinal=res.data;for(var key in scope.wafinal)scope.wafinal[key]&&((-1!=key.indexOf("is")||-1!=key.indexOf("Is")||-1!=key.indexOf("IS"))&&(scope.wafinal[key]=scope.wafinal[key].toString()),(-1!=key.indexOf("date")||-1!=key.indexOf("Date")||-1!=key.indexOf("DATE")||-1!=key.indexOf("reviewOn")||-1!=key.indexOf("From")||-1!=key.indexOf("To"))&&(scope.wafinal[key]=new Date(scope.wafinal[key])))}})};init(),scope.clearSignature=function(){scope.wafinal.signature=""},scope.clickAction=function(){if(scope.isSubmit=!0,scope.wafinalform.$invalid)toastr.error("Please fix the red field!","Invalid information");else{var postData=angular.copy(scope.wafinal);postData.cal_id=scope.params.apptInfo,postData.patient_id=scope.params.patientInfo;for(var key in postData)postData[key]instanceof Date&&(postData[key]=ConfigService.getCommonDate(postData[key]));scope.params.edit===!1?(postData.Created_by=$cookieStore.get("userInfo").id,WaWorkCoverService.finaladd(postData).then(function(result){console.log("this is insert result",result),"success"===result.status?(toastr.success("Add successfully!","Success!"),$state.go("loggedIn.patient.workcover",{patient_id:scope.params.patientInfo,cal_id:scope.params.apptInfo})):toastr.error("Unexpected Error!","Error!")})):WaWorkCoverService.finaledit(postData.id,postData).then(function(result){"success"===result.status?toastr.success("Edit successfully!","Success!"):toastr.error("Unexpected Error!","Error!")})}},scope.printAssessment=function(){var printId=scope.wafinal.id;WaWorkCoverService.finalprint(printId).then(function(result){})},scope.$watch("wafinal.isFullCapacity",function(fullCapa){"1"!==fullCapa&&(scope.wafinal.fullCapaFrom=null,scope.wafinal.isRequireTreat=null)}),scope.$watch("wafinal.isCapacityForWork",function(isCapacityForWork){"1"!==isCapacityForWork&&(scope.wafinal.capaFrom=null,scope.wafinal.capaHours=null,scope.wafinal.capaDays=null,scope.wafinal.isLiftUp=null,scope.wafinal.isStandUp=null,scope.wafinal.isSitUp=null,scope.wafinal.isWalkUp=null,scope.wafinal.liftUpKg=null,scope.wafinal.standUpMins=null,scope.wafinal.sitUpMins=null,scope.wafinal.walkUpMeter=null,scope.wafinal.isWorkBelow=null,scope.wafinal.capaCmt=null)}),scope.$watch("wafinal.isLiftUp",function(isLiftUp){"1"!==isLiftUp&&(scope.wafinal.liftUpKg=null)}),scope.$watch("wafinal.liftUpKg",function(liftUpKg){scope.wafinal.isLiftUp=void 0!==liftUpKg&&null!==liftUpKg&&""!==liftUpKg?"1":"0"}),scope.$watch("wafinal.isSitUp",function(isSitUp){"1"!==isSitUp&&(scope.wafinal.sitUpMins=null)}),scope.$watch("wafinal.sitUpMins",function(sitUpMins){scope.wafinal.isSitUp=void 0!==sitUpMins&&null!==sitUpMins&&""!==sitUpMins?"1":"0"}),scope.$watch("wafinal.isStandUp",function(isStandUp){"1"!==isStandUp&&(scope.wafinal.standUpMins=null)}),scope.$watch("wafinal.standUpMins",function(standUpMins){scope.wafinal.isStandUp=void 0!==standUpMins&&null!==standUpMins&&""!==standUpMins?"1":"0"}),scope.$watch("wafinal.isWalkUp",function(isWalkUp){"1"!==isWalkUp&&(scope.wafinal.walkUpMeter=null)}),scope.$watch("wafinal.walkUpMeter",function(walkUpMeter){scope.wafinal.isWalkUp=void 0!==walkUpMeter&&null!==walkUpMeter&&""!==walkUpMeter?"1":"0"})}}}),angular.module("app.loggedIn.waworkcover.first.directive",[]).directive("workCoverFirst",function(DocumentService,DoctorService,ReceptionistService,ConfigService,PatientService,toastr,WaWorkCoverService,$state,$cookieStore,CompanyService){return{restrict:"EA",scope:{data:"@",params:"="},templateUrl:"modules/waWorkCover/directives/templates/first.html",link:function(scope,element,attrs){scope.isTakeSignatureFromInjury=!1;var init=function(){scope.oneAtATime=!1,scope.isSubmit=!1,scope.wafirst={examDate:new Date},PatientService.mdtById(scope.params.patientInfo).then(function(res){"success"===res.status&&""!==res.data&&null!==res.data&&void 0!==res.data&&(scope.patient=res.data,scope.patient.DOB=new Date(scope.patient.DOB),void 0!==scope.patient.company_id&&null!==scope.patient.company_id&&""!==scope.patient.company_id&&CompanyService.mdtById(scope.patient.company_id).then(function(res2){"success"===res2.status&&void 0!==res.data&&null!==res.data&&""!==res.data&&(scope.company=res2.data)}))}),console.log(scope.params),WaWorkCoverService.firstGetInjury(scope.params.patientInfo,scope.params.apptInfo).then(function(result){console.log("this is result",result),0!==result.data.length&&(scope.isTakeSignatureFromInjury=!0,scope.wafirst.signature=result.data[0].signature)});var userInfo=$cookieStore.get("userInfo"),apptInfo={user_id:userInfo.id};DocumentService.getDoctor(apptInfo).then(function(result){"error"===result.status?toastr.error("Unexpected error!","Error"):"no doctor"===result.status?toastr.error("The account treating this workcover have no doctor link with it","Error!"):(console.log("this is doctor",result),scope.doctor=result.data[0])}),scope.params.edit===!0&&scope.params.workcover&&WaWorkCoverService.firstdetail(scope.params.workcover).then(function(res){if(res.data){scope.wafirst=res.data;for(var key in scope.wafirst)scope.wafirst[key]&&((-1!=key.indexOf("is")||-1!=key.indexOf("Is")||-1!=key.indexOf("IS"))&&(scope.wafirst[key]=scope.wafirst[key].toString()),(-1!=key.indexOf("date")||-1!=key.indexOf("Date")||-1!=key.indexOf("DATE")||-1!=key.indexOf("reviewOn")||-1!=key.indexOf("From")||-1!=key.indexOf("To"))&&(scope.wafirst[key]=new Date(scope.wafirst[key])))}})};init(),scope.clearSignature=function(){scope.wafirst.signature=""},scope.clickAction=function(){if(scope.isSubmit=!0,scope.wafirstform.$invalid)toastr.error("Please fix the red field!","Invalid information");else{var postData=angular.copy(scope.wafirst);postData.cal_id=scope.params.apptInfo,postData.patient_id=scope.params.patientInfo;for(var key in postData)postData[key]instanceof Date&&(postData[key]=ConfigService.getCommonDate(postData[key]));scope.params.edit===!1?(postData.Created_by=$cookieStore.get("userInfo").id,WaWorkCoverService.firstadd(postData).then(function(result){console.log("this is insert result",result),"success"===result.status?(toastr.success("Add successfully!","Success!"),$state.go("loggedIn.patient.workcover",{patient_id:scope.params.patientInfo,cal_id:scope.params.apptInfo})):toastr.error("Unexpected Error!","Error!")})):WaWorkCoverService.firstedit(postData.Ass_id,postData).then(function(result){"success"===result.status?toastr.success("Edit successfully!","Success!"):toastr.error("Unexpected Error!","Error!")})}},scope.printAssessment=function(){var printId=scope.wafirst.Ass_id;WaWorkCoverService.firstprint(printId).then(function(result){})},scope.$watch("wafirst.isFullCapacity",function(fullCapa){"1"!==fullCapa&&(scope.wafirst.fullCapaFrom=null,scope.wafirst.isRequireTreat=null)}),scope.$watch("wafirst.isSomeCapacity",function(someCapa){"1"!==someCapa&&(scope.wafirst.someCapaFrom=null,scope.wafirst.someCapaTo=null,scope.wafirst.isPreDuties=null,scope.wafirst.isModiDuties=null,scope.wafirst.isWorkModifi=null,scope.wafirst.isPreHours=null,scope.wafirst.isModiHours=null)}),scope.$watch("wafirst.isModiHours",function(isModi){"1"!==isModi&&(scope.wafirst.modiHrs=null,scope.wafirst.modiDays=null)}),scope.$watch("wafirst.modiHrs",function(modiHrs){void 0!==modiHrs&&null!==modiHrs&&""!==modiHrs&&void 0!==scope.wafirst.modiDays&&null!==scope.wafirst.modiDays&&""!==scope.wafirst.modiDays&&"1"!==scope.wafirst.isModiHours&&(scope.wafirst.isModiHours="1")}),scope.$watch("wafirst.modiDays",function(modiDays){void 0!==modiDays&&null!==modiDays&&""!==modiDays&&void 0!==scope.wafirst.modiHrs&&null!==scope.wafirst.modiHrs&&""!==scope.wafirst.modiHrs&&"1"!==scope.wafirst.isModiHours&&(scope.wafirst.isModiHours="1")}),scope.$watch("wafirst.isNoCapacity",function(noCapa){"1"!==noCapa&&(scope.wafirst.noCapaFrom=null,scope.wafirst.noCapaTo=null)}),scope.$watch("wafirst.isLiftUp",function(isLiftUp){"1"!==isLiftUp&&(scope.wafirst.liftUpKg=null)}),scope.$watch("wafirst.liftUpKg",function(liftUpKg){scope.wafirst.isLiftUp=void 0!==liftUpKg&&null!==liftUpKg&&""!==liftUpKg?"1":"0"}),scope.$watch("wafirst.isSitUp",function(isSitUp){"1"!==isSitUp&&(scope.wafirst.sitUpMins=null)}),scope.$watch("wafirst.sitUpMins",function(sitUpMins){scope.wafirst.isSitUp=void 0!==sitUpMins&&null!==sitUpMins&&""!==sitUpMins?"1":"0"}),scope.$watch("wafirst.isStandUp",function(isStandUp){"1"!==isStandUp&&(scope.wafirst.standUpMins=null)}),scope.$watch("wafirst.standUpMins",function(standUpMins){scope.wafirst.isStandUp=void 0!==standUpMins&&null!==standUpMins&&""!==standUpMins?"1":"0"}),scope.$watch("wafirst.isWalkUp",function(isWalkUp){"1"!==isWalkUp&&(scope.wafirst.walkUpMeter=null)}),scope.$watch("wafirst.walkUpMeter",function(walkUpMeter){scope.wafirst.isWalkUp=void 0!==walkUpMeter&&null!==walkUpMeter&&""!==walkUpMeter?"1":"0"}),scope.$watch("wafirst.isReview",function(isReview){"1"!==isReview&&(scope.wafirst.reviewOn=null)}),scope.$watch("wafirst.reviewOn",function(reviewOn){void 0!==reviewOn&&null!==reviewOn&&""!==reviewOn&&(scope.wafirst.isReview="1")})}}}),angular.module("app.loggedIn.waworkcover.progress.directive",[]).directive("workCoverProgress",function(DocumentService,DoctorService,ReceptionistService,ConfigService,PatientService,toastr,WaWorkCoverService,$cookieStore,$state,CompanyService){return{restrict:"EA",scope:{data:"@",params:"="},templateUrl:"modules/waWorkCover/directives/templates/progress.html",link:function(scope,element,attrs){var init=function(){scope.oneAtATime=!1,scope.isSubmit=!1,scope.waprogress={examDate:new Date},PatientService.mdtById(scope.params.patientInfo).then(function(res){"success"===res.status&&""!==res.data&&null!==res.data&&void 0!==res.data&&(scope.patient=res.data,scope.patient.DOB=new Date(scope.patient.DOB),void 0!==scope.patient.company_id&&null!==scope.patient.company_id&&""!==scope.patient.company_id&&CompanyService.mdtById(scope.patient.company_id).then(function(res2){"success"===res2.status&&void 0!==res.data&&null!==res.data&&""!==res.data&&(scope.company=res2.data)}))});var userInfo=$cookieStore.get("userInfo"),apptInfo={user_id:userInfo.id};DocumentService.getDoctor(apptInfo).then(function(result){"error"===result.status?toastr.error("Unexpected error!","Error"):"no doctor"===result.status?toastr.error("The account treating this workcover have no doctor link with it","Error!"):(console.log("this is doctor",result),scope.doctor=result.data[0])}),scope.params.edit===!0&&scope.params.workcover&&WaWorkCoverService.progressdetail(scope.params.workcover).then(function(res){if("success"===res.status&&res.data){scope.waprogress=res.data;for(var key in scope.waprogress)scope.waprogress[key]&&((-1!=key.indexOf("is")||-1!=key.indexOf("Is")||-1!=key.indexOf("IS"))&&(scope.waprogress[key]=scope.waprogress[key].toString()),(-1!=key.indexOf("date")||-1!=key.indexOf("Date")||-1!=key.indexOf("DATE")||-1!=key.indexOf("reviewOn")||-1!=key.indexOf("From")||-1!=key.indexOf("To"))&&(scope.waprogress[key]=new Date(scope.waprogress[key])))}})};init(),scope.clearSignature=function(){scope.waprogress.signature=""},scope.clickAction=function(){if(scope.isSubmit=!0,scope.waprogressform.$invalid)toastr.error("Please fix the red field!","Invalid information");else{var postData=angular.copy(scope.waprogress);postData.cal_id=scope.params.apptInfo,postData.patient_id=scope.params.patientInfo;for(var key in postData)postData[key]instanceof Date&&(postData[key]=ConfigService.getCommonDate(postData[key]));scope.params.edit===!1?(postData.Created_by=$cookieStore.get("userInfo").id,WaWorkCoverService.progressadd(postData).then(function(result){console.log("this is insert result",result),"success"===result.status?(toastr.success("Add successfully!","Success!"),$state.go("loggedIn.patient.workcover",{patient_id:scope.params.patientInfo,cal_id:scope.params.apptInfo})):toastr.error("Unexpected Error!","Error!")})):WaWorkCoverService.progressedit(postData.progress_id,postData).then(function(result){"success"===result.status?toastr.success("Edit successfully!","Success!"):toastr.error("Unexpected Error!","Error!")})}},scope.printAssessment=function(){var printId=scope.waprogress.progress_id;WaWorkCoverService.progressprint(printId).then(function(result){})},scope.$watch("waprogress.isFullCapacity",function(fullCapa){"1"!==fullCapa&&(scope.waprogress.fullCapaFrom=null,scope.waprogress.isRequireTreat=null)}),scope.$watch("waprogress.isSomeCapacity",function(someCapa){"1"!==someCapa&&(scope.waprogress.someCapaFrom=null,scope.waprogress.someCapaTo=null,scope.waprogress.isPreDuties=null,scope.waprogress.isModiDuties=null,scope.waprogress.isWorkModifi=null,scope.waprogress.isPreHours=null,scope.waprogress.isModiHours=null)}),scope.$watch("waprogress.isModiHours",function(isModi){"1"!==isModi&&(scope.waprogress.modiHrs=null,scope.waprogress.modiDays=null)}),scope.$watch("waprogress.modiHrs",function(modiHrs){void 0!==modiHrs&&null!==modiHrs&&""!==modiHrs&&void 0!==scope.waprogress.modiDays&&null!==scope.waprogress.modiDays&&""!==scope.waprogress.modiDays&&"1"!==scope.waprogress.isModiHours&&(scope.waprogress.isModiHours="1")}),scope.$watch("waprogress.modiDays",function(modiDays){void 0!==modiDays&&null!==modiDays&&""!==modiDays&&void 0!==scope.waprogress.modiHrs&&null!==scope.waprogress.modiHrs&&""!==scope.waprogress.modiHrs&&"1"!==scope.waprogress.isModiHours&&(scope.waprogress.isModiHours="1")}),scope.$watch("waprogress.isNoCapacity",function(noCapa){"1"!==noCapa&&(scope.waprogress.noCapaFrom=null,scope.waprogress.noCapaTo=null)}),scope.$watch("waprogress.isLiftUp",function(isLiftUp){"1"!==isLiftUp&&(scope.waprogress.liftUpKg=null)}),scope.$watch("waprogress.liftUpKg",function(liftUpKg){scope.waprogress.isLiftUp=void 0!==liftUpKg&&null!==liftUpKg&&""!==liftUpKg?"1":"0"}),scope.$watch("waprogress.isSitUp",function(isSitUp){"1"!==isSitUp&&(scope.waprogress.sitUpMins=null)}),scope.$watch("waprogress.sitUpMins",function(sitUpMins){scope.waprogress.isSitUp=void 0!==sitUpMins&&null!==sitUpMins&&""!==sitUpMins?"1":"0"}),scope.$watch("waprogress.isStandUp",function(isStandUp){"1"!==isStandUp&&(scope.waprogress.standUpMins=null)}),scope.$watch("waprogress.standUpMins",function(standUpMins){scope.waprogress.isStandUp=void 0!==standUpMins&&null!==standUpMins&&""!==standUpMins?"1":"0"}),scope.$watch("waprogress.isWalkUp",function(isWalkUp){"1"!==isWalkUp&&(scope.waprogress.walkUpMeter=null)}),scope.$watch("waprogress.walkUpMeter",function(walkUpMeter){scope.waprogress.isWalkUp=void 0!==walkUpMeter&&null!==walkUpMeter&&""!==walkUpMeter?"1":"0"}),scope.$watch("waprogress.activities_1",function(activities_1){(null===activities_1||void 0===activities_1||""===activities_1)&&(scope.waprogress.outcome_1=null,scope.waprogress.isRequired_1=null)}),scope.$watch("waprogress.activities_2",function(activities_2){(null===activities_2||void 0===activities_2||""===activities_2)&&(scope.waprogress.outcome_2=null,scope.waprogress.isRequired_2=null)}),scope.$watch("waprogress.activities_3",function(activities_3){(null===activities_3||void 0===activities_3||""===activities_3)&&(scope.waprogress.outcome_3=null,scope.waprogress.isRequired_3=null)}),scope.$watch("waprogress.activities_4",function(activities_4){(null===activities_4||void 0===activities_4||""===activities_4)&&(scope.waprogress.outcome_4=null,scope.waprogress.isRequired_4=null)}),scope.$watch("waprogress.activities_5",function(activities_5){(null===activities_5||void 0===activities_5||""===activities_5)&&(scope.waprogress.outcome_5=null,scope.waprogress.isRequired_5=null)}),scope.$watch("waprogress.activities_6",function(activities_6){(null===activities_6||void 0===activities_6||""===activities_6)&&(scope.waprogress.outcome_6=null,scope.waprogress.isRequired_6=null)}),scope.$watch("waprogress.isReview",function(isReview){"1"!==isReview&&(scope.waprogress.reviewOn=null)}),scope.$watch("waprogress.reviewOn",function(reviewOn){void 0!==reviewOn&&null!==reviewOn&&""!==reviewOn&&(scope.waprogress.isReview="1")})}}}),angular.module("app.loggedIn.waworkcover.general.directive",[]).directive("workCoverGeneral",function(DocumentService,PatientService,InsurerService,ReceptionistService,WaWorkCoverService,DoctorService,ConfigService,$state,$cookieStore,toastr,CompanyService){return{restrict:"EA",scope:{data:"@",params:"="},templateUrl:"modules/waWorkCover/directives/templates/general.html",link:function(scope,element,attrs){var init=function(){scope.oneAtATime=!1,scope.isOpen=!0,scope.isSubmit=!1,scope.generalwc={examDate:new Date},PatientService.mdtById(scope.params.patientInfo).then(function(res){"success"===res.status&&res.data&&(scope.patient=res.data,scope.patient.fullname=scope.patient.First_name,scope.patient.Middle_name&&(scope.patient.fullname=scope.patient.fullname+" "+scope.patient.Middle_name),scope.patient.fullname=scope.patient.fullname+" "+scope.patient.Sur_name,scope.patient.DOB=new Date(scope.patient.DOB),scope.patient.company_id&&CompanyService.mdtById(scope.patient.company_id).then(function(res2){"success"===res2.status&&res2.data&&(scope.companyInfo=res2.data,scope.companyInfo.Insurer&&InsurerService.detail(scope.companyInfo.Insurer).then(function(res3){"success"===res3.status&&res3.row&&(scope.insurer=res3.row)}))}))});var userInfo=$cookieStore.get("userInfo"),apptInfo={user_id:userInfo.id};DocumentService.getDoctor(apptInfo).then(function(result){"error"===result.status?toastr.error("Unexpected error!","Error"):"no doctor"===result.status?toastr.error("The account treating this workcover have no doctor link with it","Error!"):(console.log("this is doctor",result),scope.doctor=result.data[0])}),scope.params.edit===!0&&scope.params.workcover&&WaWorkCoverService.generaldetail(scope.params.workcover).then(function(res){if(res.data){scope.generalwc=res.data;for(var key in scope.generalwc)scope.generalwc[key]&&((-1!=key.indexOf("is")||-1!=key.indexOf("Is")||-1!=key.indexOf("IS"))&&(scope.generalwc[key]=scope.generalwc[key].toString()),(-1!=key.indexOf("date")||-1!=key.indexOf("Date")||-1!=key.indexOf("DATE")||-1!=key.indexOf("reviewOn")||-1!=key.indexOf("From")||-1!=key.indexOf("To"))&&(scope.generalwc[key]=new Date(scope.generalwc[key])))}})};init(),scope.clickAction=function(){if(scope.isSubmit=!0,scope.generalform.$invalid)toastr.error("Please fix the red field!","Invalid information");else{var postData=angular.copy(scope.generalwc);postData.cal_id=scope.params.apptInfo,postData.patient_id=scope.params.patientInfo;for(var key in postData)postData[key]instanceof Date&&(postData[key]=ConfigService.getCommonDate(postData[key]));scope.params.edit===!1?(postData.Created_by=$cookieStore.get("userInfo").id,WaWorkCoverService.generaladd(postData).then(function(result){"success"===result.status?(toastr.success("Add successfully!","Success!"),$state.go("loggedIn.patient.workcover",{patient_id:scope.params.patientInfo,cal_id:scope.params.apptInfo})):toastr.error("Unexpected error!","Error!")})):WaWorkCoverService.generaledit(postData.id,postData).then(function(result){"success"===result.status?toastr.success("Edit successfully!","Success!"):toastr.error("Unexpected Error!","Error!")})}}}}}),angular.module("app.loggedIn.waworkcover.controller",["app.loggedIn.waworkcover.first.controller","app.loggedIn.waworkcover.progress.controller","app.loggedIn.waworkcover.final.controller","app.loggedIn.waworkcover.general.controller"]).controller("WaWorkCoverController",function(){}),angular.module("app.loggedIn.waworkcover.final.controller",[]).controller("WaWorkCoverFinalController",function($scope,$stateParams){var patientInfo=$stateParams.patient_id,apptInfo=$stateParams.cal_id,editMode=!1,wc_id=$stateParams.wc_id;editMode="edit"!==$stateParams.action?!1:!0,$scope.params={edit:editMode,patientInfo:patientInfo,apptInfo:apptInfo,workcover:wc_id}}),angular.module("app.loggedIn.waworkcover.first.controller",[]).controller("WaWorkCoverFirstController",function($scope,$stateParams){var patientInfo=$stateParams.patient_id,apptInfo=$stateParams.cal_id,editMode=!1,wc_id=$stateParams.wc_id;editMode="edit"!==$stateParams.action?!1:!0,$scope.params={edit:editMode,patientInfo:patientInfo,apptInfo:apptInfo,workcover:wc_id}}),angular.module("app.loggedIn.waworkcover.progress.controller",[]).controller("WaWorkCoverProgressController",function($scope,$stateParams){var patientInfo=$stateParams.patient_id,apptInfo=$stateParams.cal_id,editMode=!1,wc_id=$stateParams.wc_id;editMode="edit"!==$stateParams.action?!1:!0,$scope.params={edit:editMode,patientInfo:patientInfo,apptInfo:apptInfo,workcover:wc_id}}),angular.module("app.loggedIn.waworkcover.general.controller",[]).controller("WaWorkCoverGeneralController",function($scope,$stateParams){var patientInfo=$stateParams.patient_id,apptInfo=$stateParams.cal_id,editMode=!1,wc_id=$stateParams.wc_id;editMode="edit"!==$stateParams.action?!1:!0,$scope.params={edit:editMode,patientInfo:patientInfo,apptInfo:apptInfo,workcover:wc_id}}),angular.module("app.loggedIn.waworkcover.service",[]).factory("WaWorkCoverService",function(Restangular){var mdtService={},mdtApi=Restangular.all("api/meditek/v1/");return mdtService.firstadd=function(postData){var funcApi=mdtApi.all("wa/workcover/first/add");return funcApi.post({add_data:postData})},mdtService.firstsearch=function(option){var funcApi=mdtApi.all("wa/workcover/first/search");return funcApi.post(option)},mdtService.firstdetail=function(wc_id){var funcApi=mdtApi.all("wa/workcover/first/detail");return funcApi.post({ID:wc_id})},mdtService.firstedit=function(id,postData){var funcApi=mdtApi.all("wa/workcover/first/edit");return funcApi.post({edit_data:postData,edit_id:id})},mdtService.firstGetInjury=function(patient_id,cal_id){var funcApi=mdtApi.all("wa/workcover/first/getinjury");return funcApi.post({patient_id:patient_id,cal_id:cal_id})},mdtService.firstprint=function(id){var funcApi=mdtApi.one("wa/workcover/first/print/"+id);return funcApi.get()},mdtService.progressadd=function(postData){var funcApi=mdtApi.all("wa/workcover/progress/add");return funcApi.post({add_data:postData})},mdtService.progresssearch=function(option){var funcApi=mdtApi.all("wa/workcover/progress/search");return funcApi.post(option)},mdtService.progressedit=function(id,postData){var funcApi=mdtApi.all("wa/workcover/progress/edit");return funcApi.post({edit_data:postData,edit_id:id})},mdtService.progressdetail=function(wc_id){var funcApi=mdtApi.all("wa/workcover/progress/detail");return funcApi.post({ID:wc_id})},mdtService.progressprint=function(id){var funcApi=mdtApi.one("wa/workcover/progress/print/"+id);return funcApi.get()},mdtService.finaladd=function(postData){var funcApi=mdtApi.all("wa/workcover/final/add");return funcApi.post({add_data:postData})},mdtService.finalsearch=function(option){var funcApi=mdtApi.all("wa/workcover/final/search");return funcApi.post(option)},mdtService.finaledit=function(id,postData){var funcApi=mdtApi.all("wa/workcover/final/edit");return funcApi.post({edit_data:postData,edit_id:id})},mdtService.finaldetail=function(wc_id){var funcApi=mdtApi.all("wa/workcover/final/detail");return funcApi.post({ID:wc_id})},mdtService.finalprint=function(id){var funcApi=mdtApi.one("wa/workcover/final/print/"+id);return funcApi.get()},mdtService.generaladd=function(postData){var funcApi=mdtApi.all("wa/workcover/general/add");return funcApi.post(postData)},mdtService.generaledit=function(id,postData){var funcApi=mdtApi.all("wa/workcover/general/edit");return funcApi.post({edit_data:postData,edit_id:id})},mdtService.generaldetail=function(wc_id){var funcApi=mdtApi.all("wa/workcover/general/detail");return funcApi.post({ID:wc_id})},mdtService});