angular.module("app.loggedIn.mdtspecialty",["app.loggedIn.mdtspecialty.directives","app.loggedIn.mdtspecialty.services"]),angular.module("app.loggedIn.mdtspecialty.services",[]).factory("mdtSpecialtyService",function(Restangular){var mdtService={},mdtApi=Restangular.all("api/meditek/v1/mdtspecialty/");return mdtService.add=function(postData){var funcApi=mdtApi.all("add");return funcApi.post({add_data:postData})},mdtService.edit=function(id,postData){var funcApi=mdtApi.all("edit");return funcApi.post({edit_data:postData,edit_id:id})},mdtService.byId=function(id){var funcApi=mdtApi.all("byId");return funcApi.post({detail_id:id})},mdtService.search=function(option){var funcApi=mdtApi.all("search");return funcApi.post(option)},mdtService.loadWithoutDoctor=function(data){var funcApi=mdtApi.all("loadWithoutDoctor");return funcApi.post({data:data})},mdtService.selectServiceDoctor=function(data){var funcApi=mdtApi.all("selectServiceDoctor");return funcApi.post({data:data})},mdtService.listByServiceDoctor=function(data){var funcApi=mdtApi.all("listByServiceDoctor");return funcApi.post({data:data})},mdtService.active=function(data){var funcApi=mdtApi.all("active");return funcApi.post({data:data})},mdtService.removeServiceDoctor=function(data){var funcApi=mdtApi.all("removeServiceDoctor");return funcApi.post({data:data})},mdtService}),angular.module("app.loggedIn.mdtspecialty.directives",["app.loggedIn.mdtspecialty.detail.directive","app.loggedIn.mdtspecialty.search.directive","app.loggedIn.mdtspecialty.search_by_doctor.directive","app.loggedIn.mdtspecialty.listByDoctor.dialog"]),angular.module("app.loggedIn.mdtspecialty.detail.directive",[]).directive("mdtspecialtyDetail",function(mdtSpecialtyModel,ConfigService,mdtSpecialtyService,toastr){return{restrict:"EA",scope:{options:"=",params:"="},templateUrl:"modules/mdtspecialty/directives/templates/detail.html",link:function(scope,element,attrs){var init=function(){scope.isSubmit=!1,scope.params.permission.edit===!0&&mdtSpecialtyService.byId(scope.params.id).then(function(response){"error"==response.status&&toastr.error("Error Get Detail","Error"),angular.extend(scope.mdtSpecialtyMap,response.data);for(var key in scope.mdtSpecialtyMap)scope.mdtSpecialtyMap[key]&&((-1!=key.indexOf("is")||-1!=key.indexOf("Is")||-1!=key.indexOf("IS"))&&(scope.mdtSpecialtyMap[key]=scope.mdtSpecialtyMap[key].toString()),(-1!=key.indexOf("date")||-1!=key.indexOf("Date")||-1!=key.indexOf("DATE"))&&(scope.mdtSpecialtyMap[key]=new Date(scope.mdtSpecialtyMap[key])))}),scope.mdtSpecialtyMap=angular.copy(mdtSpecialtyModel)};init(),scope.clickAction=function(){if(scope.isSubmit=!0,scope.mdtspecialtyForm.$invalid)toastr.error("You got some fields left","Error");else{var postData=angular.copy(scope.mdtSpecialtyMap);for(var key in postData)postData[key]instanceof Date&&(postData[key]=ConfigService.getCommonDate(postData[key]));scope.params.permission.edit===!0?mdtSpecialtyService.edit(scope.params.id,postData).then(function(response){"error"==response.status&&toastr.error("Error Get Detail","Error"),init(),toastr.success("Edit Successfully !!!","Success")}):(mdtSpecialtyService.add(postData).then(function(data){"error"==data.status&&toastr.error("Cannot Insert","Error"),toastr.success("Insert Successfully !!!","Success"),init()}),init())}}}}}),angular.module("app.loggedIn.mdtspecialty.search.directive",[]).directive("mdtspecialtySearch",function(mdtSpecialtyService,toastr){return{restrict:"EA",scope:{clickRow:"&"},templateUrl:"modules/mdtspecialty/directives/templates/search.html",link:function(scope,element,attrs){var init=function(){scope.list={},scope.params={pagination:{limit:5,offset:0,current_page:1,max_size:3},filters:[{type:"text",name:"Specialties_name",value:""},{type:"text",name:"Isenable",value:""},{type:"text",name:"Created_by",value:""}],select:["Specialties_name","Isenable","Created_by"]}},loadList=function(){mdtSpecialtyService.search(scope.params).then(function(response){"error"===response.status&&toastr.error("Cannot get Seacrh","Error"),scope.list=response})};init(),loadList(),scope.setPage=function(){scope.params.pagination.offset=(scope.params.pagination.current_page-1)*scope.params.pagination.limit,loadList()}}}}),angular.module("app.loggedIn.mdtspecialty.search_by_doctor.directive",[]).directive("mdtspecialtySearchbydoctor",function(mdtDoctorService,toastr){return{restrict:"EA",scope:{clickRow:"&",options:"=",doctor:"=",count:"="},templateUrl:"modules/mdtspecialty/directives/templates/searchByDoctor.html",link:function(scope,element,attrs){var init=function(){scope.list={},scope.params={pagination:{limit:5,offset:0,current_page:1,max_size:3},filters:[{type:"text",name:"Specialties_name",value:""},{type:"select",name:"RL_TYPE_ID",value:""},{type:"text",name:"cln_specialties.Isenable",value:1}],doctor_id:0}};scope.$watch("doctor",function(newDoctor){"undefined"!=typeof newDoctor.doctor_id&&(init(),scope.params.doctor_id=newDoctor.doctor_id,loadList())});var loadList=function(){mdtDoctorService.specialities(scope.params).then(function(response){scope.list=response,scope.count=response.count},function(error){console.log(error)})};scope.setPage=function(){scope.params.pagination.offset=(scope.params.pagination.current_page-1)*scope.params.pagination.limit,loadList()},scope.refresh=function(){loadList()}}}}),angular.module("app.loggedIn.mdtspecialty.listByDoctor.dialog",[]).directive("mdtspecialtyListbydoctor",function($modal,mdtSpecialtyService,toastr){return{restrict:"EA",scope:{limit:"=",reload:"=",doctorId:"=",onRowClick:"&"},templateUrl:"modules/mdtspecialty/dialogs/templates/listDoctor.html",link:function(scope,elem,attrs){var search={page:1,limit:scope.limit,offset:0,max_size:5,Specialties_name:"",Creation_date:"desc",doctor_id:scope.doctorId},load=function(){var postData=angular.copy(scope.speciality.search);mdtSpecialtyService.loadWithoutDoctor(postData).then(function(response){scope.speciality.list=response.data,scope.speciality.count=response.count})},onSearch=function(){scope.speciality.search.offset=0,scope.speciality.load(),scope.speciality.search.page=1},onOrderBy=function(option){switch(option.field){case"Creation_date":scope.speciality.search.Creation_date=option.order}scope.speciality.load()},remove=function(list){$modal.open({templateUrl:"dialogAlertRemove",controller:"AlertRemoveDialog",size:"sm",resolve:{list:function(){return list}}}).result.then(function(list){AlertModel.remove(list).then(function(response){toastr.success("Delete Successfully"),scope.speciality.load()},function(error){})})},edit=function(list){$modal.open({templateUrl:"dialogAlertEdit",controller:"AlertEditDialog",size:"lg",resolve:{list:function(){return list}}}).result.then(function(response){"success"===response&&(toastr.success("Edit Successfully"),scope.speciality.load())})},onPage=function(page){scope.speciality.search.offset=(page-1)*scope.speciality.search.limit,scope.speciality.load()};scope.speciality={dialog:{remove:function(list){remove(list)},edit:function(list){edit(list)}},search:angular.copy(search),load:function(){load()},list:[],onSearch:function(){onSearch()},onOrderBy:function(option){onOrderBy(option)},onPage:function(page){onPage(page)}},scope.speciality.load(),scope.$watch("reload",function(reload){reload&&(scope.speciality.search=angular.copy(search),scope.speciality.load())})}}});