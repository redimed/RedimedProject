angular.module("app.loggedIn.treeApprove.controllers",["app.loggedIn.treeApprove.listSystem.controller","app.loggedIn.treeApprove.detail.controller","app.loggedIn.treeApprove.listDepartment.controller"]),angular.module("app.loggedIn.treeApprove.detail.controller",[]).controller("DetailTree",function($scope,$modal,$cookieStore,TreeApproveService,localStorageService,toastr,$state){$scope.treeData=[],$scope.loadTree=function(){var IdTree=localStorageService.get("IdTree");IdTree.userId=$cookieStore.get("userInfo").id,TreeApproveService.LoadTreeApprove(IdTree).then(function(response){"fail"===response.status?toastr.error("Loading fail!","Error"):"findFound"===response.status||"findNull"===response.status?angular.forEach(response.result,function(nodeOfTree,index){$scope.treeData.push({id:nodeOfTree.NODE_ID,name:nodeOfTree.NODE_CODE||null,FROM_VALUE:nodeOfTree.FROM_VALUE,TO_VALUE:nodeOfTree.TO_VALUE,ISVALUE:nodeOfTree.ISVALUE,GROUP_ID:nodeOfTree.GROUP_ID,GROUP_TYPE:nodeOfTree.GROUP_TYPE,parent:void 0===nodeOfTree.TO_NODE_ID||null===nodeOfTree.TO_NODE_ID||""===nodeOfTree.TO_NODE_ID?0:nodeOfTree.TO_NODE_ID,decription:nodeOfTree.DECRIPTION||null,seq:nodeOfTree.seq})}):($state.go("loggedIn.home",null,{reload:!0}),toastr.error("Server not response!","Error")),$scope.org_chart($scope.treeData)})};var dialogTree=function(nodeInfo){var modalInstance=$modal.open({templateUrl:"AddNode",controller:function($scope,$modalInstance,TreeApproveService){$scope.getReturnedValue=function(value){value&&$modalInstance.close({status:"addCancel",result:[]})},"addNew"===nodeInfo.status?($scope.isNew=!0,$scope.NodeIdEdit=null):"edit"===nodeInfo.status&&($scope.isNew=!1,$scope.NodeIdEdit=nodeInfo.node),$scope.getInfo=function(value){$scope.isNew===!0?(value.userId=$cookieStore.get("userInfo").id,value.seq=nodeInfo.node.seq+1,value.parent=nodeInfo.node.id,value.GROUP_ID=localStorageService.get("IdTree").GROUP_ID,value.GROUP_TYPE=localStorageService.get("IdFunction"),TreeApproveService.InsertNode(value).then(function(response){$modalInstance.close("success"===response.status?{status:"addSuccess",result:response.result}:"fail"===response.status?{status:"addFail",result:response.result}:"error"===response.status?{status:"addError",result:response.result}:{status:"addCatch",result:response.result})})):$scope.isNew===!1&&(value.userId=$cookieStore.get("userInfo").id,TreeApproveService.UpdateNode(value).then(function(response){$modalInstance.close("fail"===response.status?{status:"editFail",result:[]}:"success"===response.status?{status:"editSuccess",result:response.result}:{status:"editError",result:[]})}))}},size:"md"});modalInstance.result.then(function(data){if("addSuccess"===data.status){var treeData=[];angular.forEach(data.result,function(nodeOfTree,index){treeData.push({id:nodeOfTree.NODE_ID,name:nodeOfTree.NODE_CODE||null,FROM_VALUE:nodeOfTree.FROM_VALUE,TO_VALUE:nodeOfTree.TO_VALUE,ISVALUE:nodeOfTree.ISVALUE,GROUP_ID:nodeOfTree.GROUP_ID,GROUP_TYPE:nodeOfTree.GROUP_TYPE,parent:void 0===nodeOfTree.TO_NODE_ID||null===nodeOfTree.TO_NODE_ID||""===nodeOfTree.TO_NODE_ID?0:nodeOfTree.TO_NODE_ID,decription:nodeOfTree.DECRIPTION||null,seq:nodeOfTree.seq||-1})}),$scope.org_chart(treeData),toastr.success("Add new node success!","Success")}else if("addFail"===data.status)toastr.error("Add node fail!","Error");else if("addError"===data.status)toastr.error("Add node error!","Error");else if("addCatch"===data.status)$state.go("loggedIn.home",null,{reload:!0}),toastr.error("Server not response!","500");else if("editFail"===data.status)toastr.error("Update node fail!","Error");else if("editError"===data.status)$state.go("loggedIn.home",null,{reload:!0}),toastr.error("Server not response!","500");else if("editSuccess"===data.status){var treeData=[];angular.forEach(data.result,function(nodeOfTree,index){treeData.push({id:nodeOfTree.NODE_ID,name:nodeOfTree.NODE_CODE||null,FROM_VALUE:nodeOfTree.FROM_VALUE,TO_VALUE:nodeOfTree.TO_VALUE,ISVALUE:nodeOfTree.ISVALUE,GROUP_ID:nodeOfTree.GROUP_ID,GROUP_TYPE:nodeOfTree.GROUP_TYPE,parent:void 0===nodeOfTree.TO_NODE_ID||null===nodeOfTree.TO_NODE_ID||""===nodeOfTree.TO_NODE_ID?0:nodeOfTree.TO_NODE_ID,decription:nodeOfTree.DECRIPTION||null,seq:nodeOfTree.seq||-1})}),$scope.org_chart(treeData),toastr.success("Update node success!","Success")}})};$scope.org_chart=function(data){org_chart=$("#orgChart").orgChart({data:data,showControls:!0,allowEdit:!1,onAddNode:function(node){dialogTree({status:"addNew",node:node.data})},onDeleteNode:function(node){swal({title:"Are you sure?",type:"warning",showCancelButton:!0,confirmButtonColor:"#DD6B55",confirmButtonText:"Yes",closeOnConfirm:!0},function(){0!==node.data.parent?$scope.deleteNode(node):toastr.error("Can not delete root!","Fail")})},onClickNode:function(node){dialogTree({status:"edit",node:node.data.id})}})},$scope.deleteNode=function(node){var info={GROUP_ID:node.data.GROUP_ID,NODE_ID:node.data.id};TreeApproveService.DeleteNode(info).then(function(response){if("success"===response.status){var treeData=[];angular.forEach(response.result,function(nodeOfTree,index){treeData.push({id:nodeOfTree.NODE_ID,name:nodeOfTree.NODE_CODE||null,FROM_VALUE:nodeOfTree.FROM_VALUE,TO_VALUE:nodeOfTree.TO_VALUE,ISVALUE:nodeOfTree.ISVALUE,GROUP_ID:nodeOfTree.GROUP_ID,GROUP_TYPE:nodeOfTree.GROUP_TYPE,parent:void 0===nodeOfTree.TO_NODE_ID||null===nodeOfTree.TO_NODE_ID||""===nodeOfTree.TO_NODE_ID?0:nodeOfTree.TO_NODE_ID,decription:nodeOfTree.DECRIPTION||null,seq:nodeOfTree.seq||-1})}),$scope.org_chart(treeData),toastr.success("Delete node success!","Success")}else"fail"===response.status&&toastr.error("Delete node fail!","Error")})},$scope.loadTree()}),angular.module("app.loggedIn.treeApprove",["app.loggedIn.treeApprove.controllers","app.loggedIn.treeApprove.directives","app.loggedIn.treeApprove.service"]).config(function($stateProvider){$stateProvider.state("loggedIn.treeApprove",{url:"/tree-approve","abstract":!0,templateUrl:"/modules/treeApprove/views/structure.html"}).state("loggedIn.treeApprove.ListFunction",{url:"/list-function",views:{"main-content":{templateUrl:"modules/treeApprove/views/ListFunction.html",controller:"ListFunctionController"}}}).state("loggedIn.treeApprove.ListTree",{url:"/list-tree",views:{"main-content":{templateUrl:"modules/treeApprove/views/ListTree.html",controller:"ListTreeController"}}}).state("loggedIn.treeApprove.DetailTree",{url:"/detail-tree",views:{"main-content":{templateUrl:"modules/treeApprove/views/DetailTree.html",controller:"DetailTree"}}})}),angular.module("app.loggedIn.treeApprove.listDepartment.controller",[]).controller("ListTreeController",function($scope,MODE_ROW,localStorageService,$state,TreeApproveService,$modal,$cookieStore,toastr){$scope.info={},$scope.setPage=function(){$scope.searchObjectMap.offset=($scope.searchObjectMap.currentPage-1)*$scope.searchObjectMap.limit,$scope.loadList()},$scope.reset=function(){$scope.searchObjectMap=angular.copy($scope.searchDepartmentsObject),$scope.loadList()},$scope.loadList=function(idInput){"DESC"===idInput?$scope.searchObjectMap.order="DESC":"ASC"===idInput&&($scope.searchObjectMap.order="ASC"),TreeApproveService.LoadTree($scope.searchObjectMap).then(function(response){"fail"!==response[status]?$scope.list=response:($scope.list=response,toastr.error("Loading fail!","Error"))}),$(idInput).focus()};var init=function(){$scope.searchObject={limit:10,offset:0,maxSize:5,currentPage:1,data:{NAME:"",Email:"",phone:null}},$scope.rows=MODE_ROW,$scope.searchDepartmentsObject={limit:10,offset:0,maxSize:5,currentPage:1,order:"DESC",GROUP_TYPE:localStorageService.get("IdFunction"),data:{GROUP_NAME:""}},$scope.searchObjectMap=angular.copy($scope.searchDepartmentsObject),$scope.list={},$scope.loadList(),$scope.dateOptions={formatYear:"yy",startingDay:1}};init(),$scope.goTotreeApproveDetail=function(IdTree){localStorageService.set("IdTree",IdTree),$state.go("loggedIn.treeApprove.DetailTree")},$scope.DeleteTree=function(groupId){swal({title:"Are you sure?",type:"warning",showCancelButton:!0,confirmButtonColor:"#DD6B55",confirmButtonText:"Yes",closeOnConfirm:!0},function(){TreeApproveService.DeleteTree(groupId).then(function(response){"success"===response.status?($scope.loadList(),toastr.success("Delete success!","Success")):"fail"===response.status?toastr.error("Delete fail!","Error"):($state.go("loggedIn.home",null,{reload:!0}),toastr.error("Server not response!","Error"))})})},$scope.EditTree=function(IdTree){DialogTree(IdTree)},$scope.AddTree=function(){DialogTree(null)};var DialogTree=function(groupId){var modalInstance=$modal.open({templateUrl:"AddTree",controller:function($scope,$modalInstance,TreeApproveService,localStorageService,$cookieStore){$scope.getReturnedValue=function(value){if(value){var data=[{status:"cancel",result:[]}];$modalInstance.close(data)}},$scope.getInfo=function(value){value.userId=$cookieStore.get("userInfo").id,value.GROUP_TYPE=localStorageService.get("IdFunction"),$scope.isNew===!0?TreeApproveService.InsertTree(value).then(function(responsive){if("fail"===responsive.status)toastr.error("Add new tree fail!","Error");else if("success"===responsive.status){var data=[{status:"success",result:responsive.result}];$modalInstance.close(data),toastr.success("Add new tree success!","Success")}else $state.go("loggedIn.home",null,{reload:!0}),toastr.error("Server not responsive!","Error")}):$scope.isNew===!1&&TreeApproveService.UpdateTree(value).then(function(responsive){if("fail"===responsive.status)toastr.error("Update tree fail!","Error");else if("success"===responsive.status){var data=[{status:"success",result:responsive.result}];$modalInstance.close(data),toastr.success("Update tree success!","Success")}else $state.go("loggedIn.home",null,{reload:!0}),toastr.error("Server not responsive!","Error")})},null===groupId?($scope.isNew=!0,$scope.TreeIdEdit=null):($scope.isNew=!1,$scope.TreeIdEdit=groupId)},size:"md"});modalInstance.result.then(function(data){"success"===data[0].status&&($scope.list.result=data[0].result)})}}),angular.module("app.loggedIn.treeApprove.listSystem.controller",[]).controller("ListFunctionController",function($scope,MODE_ROW,TreeApproveService,localStorageService,$state,$modal,$cookieStore,toastr){$scope.info={},$scope.setPage=function(){$scope.searchObjectMap.offset=($scope.searchObjectMap.currentPage-1)*$scope.searchObjectMap.limit,$scope.loadList()},$scope.reset=function(){$scope.searchObjectMap=angular.copy($scope.searchSystemsObject),$scope.loadList()},$scope.loadList=function(idInput){$scope.list.loading=!0,"ASC"===idInput&&($scope.searchObjectMap.order="ASC"),"DESC"===idInput&&($scope.searchObjectMap.order="DESC"),TreeApproveService.LoadFunction($scope.searchObjectMap).then(function(response){"fail"!==response[status]?$scope.list=response:($scope.list=response,toastr.error("Loading fail"))}),$scope.list.loading=!1,$(idInput).focus()},$scope.goToTree=function(IdFunction){localStorageService.set("IdFunction",IdFunction),$state.go("loggedIn.treeApprove.ListTree")},$scope.DeleteFunction=function(typeId){swal({title:"Are you sure?",type:"warning",showCancelButton:!0,confirmButtonColor:"#DD6B55",confirmButtonText:"Yes",closeOnConfirm:!0},function(){TreeApproveService.DeleteFunction(typeId).then(function(response){"success"===response.status?($scope.loadList(),toastr.success("Delete success!","Success")):"fail"===response.status?toastr.error("Delete fail!","Error"):($state.go("loggedIn.home",null,{reload:!0}),toastr.error("Server not reponse!","Error"))})})},$scope.EditFunction=function(typeId){DialogFunction(typeId)},$scope.AddFunction=function(){DialogFunction(null)};var init=function(){$scope.searchObject={limit:10,offset:0,maxSize:5,currentPage:1,data:{NAME:"",Email:"",phone:null}},$scope.rows=MODE_ROW,$scope.searchSystemsObject={limit:10,offset:0,maxSize:5,order:"DESC",currentPage:1,data:{TYPE_NAME:""}},$scope.searchObjectMap=angular.copy($scope.searchSystemsObject),$scope.list={},$scope.list.loading=!1,$scope.loadList(),$scope.dateOptions={formatYear:"yy",startingDay:1}};init();var DialogFunction=function(typeId){var modalInstance=$modal.open({templateUrl:"AddFunction",controller:function($scope,$modalInstance,TreeApproveService,localStorageService){$scope.getReturnedValue=function(value){if(value){var data=[{status:"cancel",result:null}];$modalInstance.close(data)}},null===typeId?($scope.isNew=!0,$scope.FunctionIdEdit=null):($scope.isNew=!1,$scope.FunctionIdEdit=typeId),$scope.getInfo=function(value){value.userId=$cookieStore.get("userInfo").id,$scope.isNew===!0?TreeApproveService.InsertFunction(value).then(function(responsive){"error"===responsive.status?($modalInstance.close(),toastr.error("Add function fail!","Error")):"success"===responsive.status?($modalInstance.close(),$state.go("loggedIn.treeApprove.ListFunction",null,{reload:!0}),toastr.success("Add function success!","success")):($state.go("loggedIn.home",null,{reload:!0}),toastr.error("Server not responsive!","Error"))}):$scope.isNew===!1&&TreeApproveService.UpdateFunction(value).then(function(responsive){"error"===responsive.status?($modalInstance.close(),toastr.error("Update function fail!","Error")):"success"===responsive.status?($modalInstance.close(),$state.go("loggedIn.treeApprove.ListFunction",null,{reload:!0}),toastr.success("Update function success!","success")):($state.go("loggedIn.home",null,{reload:!0}),toastr.error("Server not responsive!","Error"))})}},size:"md"});modalInstance.result.then(function(data){$scope.loadList()})}}),angular.module("app.loggedIn.treeApprove.AddNode.directive",[]).directive("addNode",function(TreeApproveService,toastr,$state){return{restrict:"EA",require:"ngModel",scope:{onCancel:"&",onSave:"&",ngModel:"="},link:function(scope,element,attrs){scope.$watch("ngModel",function(newModel){null!==newModel?(scope.addOrUpdateTitle="Update Node",scope.addOrUpdateButton="Update",TreeApproveService.LoadOneNode(newModel).then(function(response){"error"===response.status?toastr.error("Loading error!","Error"):"fail"===response.status?toastr.error("Loading fail!","Fail"):"success"===response.status?scope.info=angular.copy(response.result):($state.go("loggedIn.home",null,{reload:!0}),toastr.error("Server not reponse!","Error"))})):(scope.addOrUpdateTitle="Add Node",scope.addOrUpdateButton="Add")})},templateUrl:"modules/treeApprove/directives/templates/AddNode.html"}}),angular.module("app.loggedIn.treeApprove.AddSystem.directive",[]).directive("addFunction",function(TreeApproveService,toastr,$state){return{restrict:"EA",require:"ngModel",scope:{onCancel:"&",onSave:"&",ngModel:"="},link:function(scope,element,attrs){scope.$watch("ngModel",function(newModel){scope.info={},null!==newModel?(scope.addOrUpdateTitle="Update Function",scope.addOrUpdateButton="Update",TreeApproveService.LoadOneFunction(newModel).then(function(response){"success"===response.status?(scope.info=response.result,scope.info.oldName=scope.info.TYPE_NAME):"fail"===response.status?($state.go("loggedIn.treeApprove.ListFunction",null,{reload:!0}),toastr.error("Loading fail!","Error")):($state.go("loggedIn.home",null,{reload:!0}),toastr.error("Server not response!","Error"))})):(scope.addOrUpdateTitle="Add Function",scope.addOrUpdateButton="Add")})},templateUrl:"modules/treeApprove/directives/templates/AddFunction.html"}}),angular.module("app.loggedIn.treeApprove.AddDepartment.directive",[]).directive("addTree",function(TreeApproveService,$state,toastr){return{restrict:"EA",require:"ngModel",scope:{onCancel:"&",onSave:"&",ngModel:"="},link:function(scope,element,attrs){scope.$watch("ngModel",function(newModel){null!==newModel?(scope.addOrUpdateTitle="Update Tree",scope.addOrUpdateButton="Update",TreeApproveService.LoadOneTree(newModel).then(function(response){"success"===response.status?scope.info=response.result:"fail"===response.status?toastr.error("Loading fail!","Error"):($state.go("loggedIn.home",null,{reload:!0}),toastr.error("Server not response!","Error"))})):(scope.addOrUpdateTitle="Add Tree",scope.addOrUpdateButton="Add")}),TreeApproveService.LoadCompany().then(function(responsive){scope.companies=responsive.company,TreeApproveService.LoadSite().then(function(responsive){scope.sites=responsive.redimedSite})})},templateUrl:"modules/treeApprove/directives/templates/AddTree.html"}}),angular.module("app.loggedIn.treeApprove.directives",["app.loggedIn.treeApprove.AddNode.directive","app.loggedIn.treeApprove.AddSystem.directive","app.loggedIn.treeApprove.AddDepartment.directive"]),angular.module("app.loggedIn.treeApprove.service",[]).factory("TreeApproveService",function(Restangular){var TreeApproveService={},api=Restangular.all("api");return TreeApproveService.LoadFunction=function(searchObjPost){var LoadFunction=api.all("treeApprove/post-function-list");return LoadFunction.post({searchObj:searchObjPost})},TreeApproveService.DeleteFunction=function(FunctionIdPost,index){var DeleteFunction=api.all("treeApprove/post-function-delete");return DeleteFunction.post({info:FunctionIdPost})},TreeApproveService.InsertFunction=function(systemPost){var InsertFunction=api.all("treeApprove/post-function-insert");return InsertFunction.post({info:systemPost})},TreeApproveService.LoadOneFunction=function(idPost){var LoadOneFunction=api.all("treeApprove/post-function-one");return LoadOneFunction.post({info:idPost})},TreeApproveService.UpdateFunction=function(idPost){var UpdateFunction=api.all("treeApprove/post-function-update");return UpdateFunction.post({info:idPost})},TreeApproveService.LoadTreeApprove=function(infoPost){var LoadTreeApprove=api.all("treeApprove/get-function-tree");return LoadTreeApprove.post({info:infoPost})},TreeApproveService.DeleteTree=function(idPost){var DeleteTree=api.all("treeApprove/post-tree-delete");return DeleteTree.post({info:idPost})},TreeApproveService.LoadTree=function(TreeCodePost){var LoadTree=api.all("treeApprove/post-tree-list");return LoadTree.post({searchObj:TreeCodePost})},TreeApproveService.LoadOneTree=function(idPost){var LoadOneTree=api.all("treeApprove/post-tree-one");return LoadOneTree.post({info:idPost})},TreeApproveService.UpdateTree=function(infoPost){var UpdateTree=api.all("treeApprove/post-tree-update");return UpdateTree.post({info:infoPost})},TreeApproveService.LoadCompany=function(){var LoadCompany=api.one("treeApprove/get-company-list");return LoadCompany.get({})},TreeApproveService.LoadSite=function(){var LoadSite=api.one("treeApprove/get-site-list");return LoadSite.get({})},TreeApproveService.InsertTree=function(departmentPost){var InsertTree=api.all("treeApprove/post-tree-insert");return InsertTree.post({info:departmentPost})},TreeApproveService.InsertNode=function(nodePost){var InsertNode=api.all("treeApprove/post-node-insert");return InsertNode.post({info:nodePost})},TreeApproveService.UpdateNode=function(nodePost){var UpdateNode=api.all("treeApprove/post-node-update");return UpdateNode.post({info:nodePost})},TreeApproveService.LoadOneNode=function(nodePost){var LoadOneNode=api.all("treeApprove/post-node-one");return LoadOneNode.post({info:nodePost})},TreeApproveService.DeleteNode=function(nodePost){var DeleteNode=api.all("treeApprove/post-node-delete");return DeleteNode.post({info:nodePost})},TreeApproveService});