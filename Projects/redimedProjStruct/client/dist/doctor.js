angular.module("app.loggedIn.doctor",["app.loggedIn.doctor.controller","app.loggedIn.doctor.services","app.loggedIn.doctor.directives"]).config(function($stateProvider){$stateProvider.state("loggedIn.doctor",{"abstract":!0,templateUrl:"modules/doctor/views/structure.html",controller:"DoctorController"}).state("loggedIn.doctor.paperless",{url:"/doctor/paperless/:patient_id/:cal_id",views:{"main-content":{templateUrl:"modules/doctor/views/paperless.html",controller:"DoctorPaperlessController"}}}).state("loggedIn.doctor.home",{url:"/doctor/home",views:{"main-content":{templateUrl:"modules/doctor/views/home.html",controller:"DoctorHomeController"}}}).state("loggedIn.doctor.add",{url:"/doctor/add",views:{"main-content":{templateUrl:"modules/doctor/views/add.html",controller:"DoctorAddController"}}}).state("loggedIn.doctor.list",{url:"/doctor/list",views:{"main-content":{templateUrl:"modules/doctor/views/doclist.html",controller:"DoctorListController"}}}).state("loggedIn.doctor.setting",{url:"/doctor/setting",views:{"main-content":{templateUrl:"modules/doctor/views/docSetting.html",controller:"DoctorSettingController"}}}).state("loggedIn.doctor.timetable",{url:"/doctor/timetable",views:{"main-content":{templateUrl:"modules/doctor/views/timetable.html",controller:"DoctorTimetableController"}}}).state("loggedIn.doctor.timetable.detail",{"abstract":!0,url:"/:doctorId",views:{"main-content@loggedIn.doctor":{templateUrl:"modules/doctor/views/structure-timetable.html",controller:"DoctorTimetableDetailController"}}}).state("loggedIn.doctor.timetable.detail.calendar",{url:"/calendar",views:{"main-content-timetable":{templateUrl:"modules/doctor/views/timetable-calendar.html",controller:"DoctorTimetableDetailCalendarController"}}}).state("loggedIn.doctor.timetable.detail.profile",{url:"/profile",views:{"main-content-timetable":{templateUrl:"modules/doctor/views/timetable-profile.html",controller:"DoctorTimetableDetailProfileController"}}}).state("loggedIn.doctor.timetable.detail.casual",{url:"/casual",views:{"main-content-timetable":{templateUrl:"modules/doctor/views/timetable-casual.html",controller:"DoctorTimetableDetailCasualController"}}}).state("loggedIn.doctor.timetable.detail.leave",{url:"/leave",views:{"main-content-timetable":{templateUrl:"modules/doctor/views/timetable-leave.html",controller:"DoctorTimetableDetailLeaveController"}}}).state("loggedIn.doctor.items",{url:"/doctor/items",views:{"main-content":{templateUrl:"modules/doctor/views/items.html",controller:"DoctorItemsController"}}}).state("loggedIn.doctor.items.cat",{url:"/cat",views:{"main-content@loggedIn.doctor":{templateUrl:"modules/doctor/views/items-cat.html",controller:"DoctorItemsCatController"}}}).state("loggedIn.doctor.items.add",{url:"/add",views:{"main-content@loggedIn.doctor":{templateUrl:"modules/doctor/views/items-form.html",controller:"DoctorItemsAddController"}}}).state("loggedIn.doctor.items.edit",{url:"/edit",views:{"main-content@loggedIn.doctor":{templateUrl:"modules/doctor/views/items-form.html",controller:"DoctorItemsEditController"}}}).state("loggedIn.doctor.patients",{url:"/doctor/patients",views:{"main-content":{templateUrl:"modules/doctor/views/patients.html",controller:"DoctorPatientsController"}}}).state("loggedIn.doctor.patients.detail",{url:"/detail",views:{"main-content@loggedIn.doctor":{templateUrl:"modules/doctor/views/patients-detail.html",controller:"DoctorPatientsDetailController"}}}).state("loggedIn.doctor.patients.detail.appt",{url:"/appt",views:{"main-content@loggedIn.doctor":{templateUrl:"modules/doctor/views/patients-detail-appt.html",controller:"DoctorPatientsDetailApptController"}}}).state("loggedIn.doctor.patients.detail.appt.more",{url:"/more",views:{"main-content@loggedIn.doctor":{templateUrl:"modules/doctor/views/patients-detail-appt-more.html",controller:"DoctorPatientsDetailApptMoreController"}}})}),angular.module("app.loggedIn.doctor.services",[]).factory("DoctorService",function(Restangular){{var doctorService={},doctorApi=Restangular.all("api/erm"),mdtApi=Restangular.all("api/meditek/v1/doctor/");Restangular.all("api/restful")}doctorService.mdtSearch=function(options){var funcApi=mdtApi.all("search");return funcApi.post(options)},doctorService.doctor_calendar_by_date=function(doctor_id,from,to){var instanceApi=doctorApi.all("v2/doctor/calendar_by_date");return instanceApi.post({doctor_id:doctor_id,fromDate:from,toDate:to})},doctorService.getApptWorkInProgress=function(doctor_id,from,to){var instanceApi=doctorApi.all("v2/doctor/appt_work_in_progress");return instanceApi.post({doctor_id:doctor_id,fromDate:from,toDate:to})},doctorService.catItemDept=function(items){for(var newlist=[],i=0,len=items.length;len>i;++i){var item=items[i];if(0==newlist.length||newlist[newlist.length-1].cat!=item.POPULAR_HEADER_ID){var t2={cat:item.POPULAR_HEADER_ID,cattitle:item.POPULAR_NAME,list:[]};newlist.push(t2)}var t={ITEM_ID:item.ITEM_ID,ITEM_CODE:item.ITEM_CODE,ITEM_NAME:item.ITEM_NAME,PRICE:item.PRICE?item.PRICE:0,QUANTITY:item.QUANTITY?item.QUANTITY:1,TIME_SPENT:item.TIME_SPENT?item.TIME_SPENT:0,inserted:item.inserted?!0:!1,appt_item_id:item.appt_item_id,checked:item.checked?"1":"0"};newlist[newlist.length-1].list.push(t)}return newlist},doctorService.insertItemAppt=function(appt_id,patient_id,items){appt_id||console.log("MISSING INFO APPT_ID");var instanceApi=doctorApi.all("v1/appointment/insert_items");return instanceApi.post({cal_id:appt_id,patient_id:patient_id,items:items})},doctorService.updateItemAppt=function(appt_id,items){var instanceApi=doctorApi.all("v1/appointment/update_items");return instanceApi.post({cal_id:appt_id,items:items})},doctorService.deleteItemAppt=function(appt_id,patient_id,items){var instanceApi=doctorApi.all("v1/appointment/delete_items");return instanceApi.post({cal_id:appt_id,patient_id:patient_id,items:items})},doctorService.getItemAppt=function(appt_id,patient_id){var instanceApi=doctorApi.all("v1/appointment/get_items");return instanceApi.post({appt_id:appt_id,patient_id:patient_id})},doctorService.getItemByDept=function(dept_id,isenable){var instanceApi=doctorApi.one("v1/items/list_by_dept"),enable=void 0!==isenable?parseInt(isenable):1;return instanceApi.get({dept_id:dept_id,isenable:enable})},doctorService.getItemHeader=function(dept_id){var instanceApi=doctorApi.one("v1/items/get_header_by_dept");return instanceApi.get({dept_id:dept_id})},doctorService.insertItemHeader=function(dept_id,data){var instanceApi=doctorApi.all("v1/items/insert_header");return instanceApi.post({dept_id:dept_id,data:data})},doctorService.deleteItemHeader=function(dept_id,header_id){var instanceApi=doctorApi.all("v1/items/delete_header");return instanceApi.post({dept_id:dept_id,header_id:header_id})},doctorService.updateItemHeader=function(data){var instanceApi=doctorApi.all("v1/items/update_header");return instanceApi.post({data:data})},doctorService.insertItem=function(header_id,data){var instanceApi=doctorApi.all("v1/items/insert");return instanceApi.post({h_item:header_id,data:data})},doctorService.getItemByCode=function(item_id){var instanceApi=doctorApi.all("v1/items/get_item_by_id"),postData={item_id:item_id};return instanceApi.post(postData)},doctorService.editItem=function(editItem,old_header_id,new_header_id){var instanceApi=doctorApi.all("v1/items/edit_item"),postData={editItem:editItem,old_header_id:old_header_id,new_header_id:new_header_id};return instanceApi.post(postData)},doctorService.getApptById=function(appt_id){var instanceApi=doctorApi.one("v1/appointment/get_by_id");return instanceApi.get({cal_id:appt_id})},doctorService.updateAppt=function(appt_id,data){var instanceApi=doctorApi.all("v1/appointment/update"),postData={cal_id:appt_id,data:data};return console.log(postData),instanceApi.post(postData)},doctorService.listCurPatients=function(doctor_id){var instanceApi=doctorApi.one("v1/doctors/list_patients");return instanceApi.get({doctor_id:doctor_id,current:1})},doctorService.searchItem=function(option){var opt={limit:option.limit,offset:option.offset,k:option.data.name,code:option.data.code,type:option.data.type},instanceApi=doctorApi.one("v1/items/search");return instanceApi.get(opt)},doctorService.getMaxId=function(){var maxApi=doctorApi.one("doctors/getMaxId");return maxApi.get()},doctorService.update=function(options){var updateApi=doctorApi.all("doctors/update");return updateApi.post(options)},doctorService.insert=function(options){var insertApi=doctorApi.all("doctors/insert");return insertApi.post(options)},doctorService.getByUserId=function(user_id){var instanceApi=doctorApi.all("v1/doctors/by_user_id");return instanceApi.post({user_id:user_id})},doctorService.listPatients=function(option){var listApi=doctorApi.all("v1/patients/search");return listApi.post(option)},doctorService.all=function(){var allApi=doctorApi.one("doctors/list");return allApi.get()},doctorService.listByClinical=function(options){var listApi=doctorApi.all("doctors/listByClinical");return listApi.post(options)},doctorService.getById=function(id){var getApi=doctorApi.all("doctors/getById");return getApi.post({id:id})},doctorService.search=function(options){var searchApi=doctorApi.all("doctors/search");return searchApi.post({search:options})},doctorService.timetable=function(doctor_id){var timeApi=doctorApi.all("doctors/timetable");return timeApi.post({doctor_id:doctor_id})},doctorService.timetableWeekById=function(options){var timeApi=doctorApi.all("doctors/timetableWeekById");return timeApi.post(options)},doctorService.changeTimetable=function(options){var timeApi=doctorApi.all("doctors/changeTimetable");return timeApi.post(options)},doctorService.insertTimetable=function(options){var timeApi=doctorApi.all("doctors/insertTimetable");return timeApi.post(options)},doctorService.removeTimetable=function(options){var timeApi=doctorApi.all("doctors/removeTimetable");return timeApi.post(options)},doctorService.changeTimetableWeek=function(options){var timeApi=doctorApi.all("doctors/changeTimetableWeek");return timeApi.post(options)},doctorService.insertTimetableWeek=function(options){var timeApi=doctorApi.all("doctors/insertTimetableWeek");return timeApi.post(options)},doctorService.removeTimetableWeek=function(options){var timeApi=doctorApi.all("doctors/removeTimetableWeek");return timeApi.post(options)},doctorService.generateTimetable=function(data){var generateApi=doctorApi.all("doctors/generateTimetable");return generateApi.post({data:data})},doctorService.getCasualCalendar=function(data){var casualApi=doctorApi.all("doctors/getCasualCalendar");return casualApi.post(data)},doctorService.changeCasual=function(options){var casualApi=doctorApi.all("doctors/changeCasual");return casualApi.post(options)},doctorService.overviewCalendar=function(doctor_id,from_time,to_time){var api=doctorApi.all("v2/timetable/overview_doctor");return api.post({doctor_id:doctor_id,from_time:from_time,to_time:to_time})},doctorService.deleteDateCalendar=function(doctor_id,date){var api=doctorApi.all("v2/timetable/delete_date");return api.post({doctor_id:doctor_id,date:date})},doctorService.addCalendar=function(postData){var result=doctorApi.all("appointment/insert-casual-calendar");return result.post({postData:postData})},doctorService.editCalendar=function(postData){var result=doctorApi.all("appointment/edit-casual-calendar");return result.post({postData:postData})},doctorService.leaveCalendar=function(doctor_id,from_time,to_time){var api=doctorApi.all("v2/timetable/doctor_leave");return api.post({doctor_id:doctor_id,from_time:from_time,to_time:to_time})};var leaveApi=Restangular.all("api/meditek/v1/appointment");return doctorService.leaveCal=function(data){var instanceApi=leaveApi.all("leaveCal");return instanceApi.post({data:data})},doctorService.beforeLeaveCal=function(data){var instanceApi=leaveApi.all("beforePostLeaveCal");return instanceApi.post({data:data})},doctorService}),angular.module("app.loggedIn.doctor.controller",["app.loggedIn.doctor.home.controller","app.loggedIn.doctor.list.controller","app.loggedIn.doctor.setting.controller","app.loggedIn.doctor.timetable.controller","app.loggedIn.doctor.patients.controller","app.loggedIn.doctor.items.controller","app.loggedIn.doctor.add.controller","app.loggedIn.doctor.paperless.controller","app.loggedIn.doctor.fachoose.controller"]).controller("DoctorController",function($scope,$filter,$cookieStore,MODE_ROW,ConfigService,DoctorService){$scope.searchObject={limit:10,offset:0,maxSize:5,currentPage:1,data:{NAME:"",Email:"",Phone:null}},$scope.rows=MODE_ROW,$scope.searchPatientsObject={doctor_id:0,limit:10,offset:0,maxSize:5,currentPage:1,data:{First_name:"",Sur_name:"",Middle_name:"",Post_code:null}},$scope.modelDoctorObject={NAME:"",Email:"",Phone:"",Signature:"",Title:"",First_name:"",Middle_name:"",Sur_name:"",CLINICAL_DEPT_ID:null,Provider_no:0,Provider_type:"",Appt_interval:0,isReceiveEmailAfterHour:"0",Qualification_id:"",Prescriber_no:0,Sign_off:"",Payee_provider_no:0,ABN_no:0,Default_bank_account_id:"",Medical_Registration_no:0,OSHC_ID:"",isAppointmentBook:"0",Isenable:"0",isNewCalendarSlot:"0",Address:""},$scope.setClassAppt=function(type){return null===type||"ChangePers"===type?"danger":"Done"===type?"success":"NotYet"===type?"warning":"Billing"===type?"info":void 0},$scope.apptStatus=ptnConst.apptStatus,$scope.setColorAppt=function(status){return status==ptnConst.apptStatus.booking.value?"un_tn_row_blue un_tn_row_hover_blue":status==ptnConst.apptStatus.checkedIn.value?"un_tn_row_violet un_tn_row_hover_violet":status==ptnConst.apptStatus.waiting.value?"un_tn_row_red un_tn_row_hover_red":status==ptnConst.apptStatus.inConsult.value?"un_tn_row_yellow un_tn_row_hover_yellow":status==ptnConst.apptStatus.completed.value?"un_tn_row_green un_tn_row_hover_green":status==ptnConst.apptStatus.urgent.value?"un_tn_row_red un_tn_row_hover_red":"un_tn_row_blank un_tn_row_hover_blank"},$scope.views={patient_info:"modules/doctor/views/patient-info.html",paperless:"modules/doctor/views/paperless.html",patient_path:"modules/patient/views/patient/"},$scope.modeFormItem={reset:function(){$scope.isSubmit=!1,$scope.modelObjectMap={ITEM_TYPE:"Services",Prefix:""},$scope.invalid={}},validate:function(){var date_pattern=/^([0-9]{2})\/([0-9]{2})\/([0-9]{4})$/,isValidDateFormat=function(date){return date&&!date_pattern.test(date)};return $scope.invalid.ITEM_START_DATE=isValidDateFormat($scope.modelObjectMap.ITEM_START_DATE),$scope.invalid.ITEM_END_DATE=isValidDateFormat($scope.modelObjectMap.ITEM_END_DATE),$scope.invalid.ITEM_END_DATE||$scope.invalid.ITEM_START_DATE?!1:!0},init:function(){$scope.modeFormItem.reset(),$scope.doctorInfo=$cookieStore.get("doctorInfo");var dept_id=$scope.doctorInfo.CLINICAL_DEPT_ID,initOption=function(){$scope.options={},ConfigService.taxes_option().then(function(data){$scope.options.taxes=data}),ConfigService.prefix_headers_option("item").then(function(data){$scope.options.prefix_headers=data}),ConfigService.provider_types_option().then(function(data){$scope.options.provider_types=data}),ConfigService.inv_uoms_option().then(function(data){$scope.options.uoms=data}),DoctorService.getItemHeader(dept_id).then(function(data){$scope.options.item_headers=data})};initOption()},submit:function(callback){var t_start=$scope.modelObjectMap.ITEM_START_DATE,t_end=$scope.modelObjectMap.ITEM_END_DATE;$scope.modelObjectMap.ITEM_START_DATE=ConfigService.getCommonDateDatabase(t_start),$scope.modelObjectMap.ITEM_END_DATE=ConfigService.getCommonDateDatabase(t_end),$scope.modelObjectMap.ITEM_START_DATE||delete $scope.modelObjectMap.ITEM_START_DATE,$scope.modelObjectMap.ITEM_END_DATE||delete $scope.modelObjectMap.ITEM_END_DATE;var arrFilter=$filter("arrGetBy"),obj=arrFilter($scope.options.prefix_headers,"PREFIX_NAME",$scope.modelObjectMap.ITEM_TYPE);$scope.modelObjectMap.Prefix=obj.PREFIX,callback()}}}),angular.module("app.loggedIn.doctor.home.controller",[]).controller("DoctorHomeController",function($scope,socket,$state,$cookieStore,DoctorService,ConfigService,localStorageService,toastr,moment,$modal){function getDoctorInfo(){$scope.doctorInfo=$cookieStore.get("doctorInfo"),console.log("Doctor Info: ",$scope.doctorInfo),$scope.doctorInfo&&$scope.doctorInfo.doctor_id||alert("Not Doctor Information !!!"),init()}moment();$scope.selectDate=moment().range(moment().subtract(1,"days"),moment()),$scope.loadCalendar=function(){var fromDate=moment($scope.selectDate.start.format("YYYY-MM-DD")),toDate=moment($scope.selectDate.end.format("YYYY-MM-DD")),doctor_id=$scope.doctorInfo.doctor_id;DoctorService.doctor_calendar_by_date(doctor_id,fromDate._i,toDate._i).then(function(data){"success"==data.status?($scope.list_appts=data.data,exlog.log($scope.list_appts),angular.forEach($scope.list_appts,function(value,key){var patientArr=[];patientArr.push(value.Title,value.First_name,value.Sur_name,value.Middle_name),value.PATIENT_NAME=patientArr.join(" ")})):(alert("error when load data."),exlog.logErr(data))},function(err){alert("error when load data."),exlog.logErr(data)})},$scope.goToApptDetail=function(item){return console.log("this is item",item),item.CAL_ID&&item.Patient_id?void $state.go("loggedIn.patient.consult",{patient_id:item.Patient_id,cal_id:item.CAL_ID}):void toastr.error("Unexpected error!","Error!")};var init=function(){$scope.loadCalendar()};$scope.checkIsDoctor=function(){$scope.userInfo=$cookieStore.get("userInfo"),$cookieStore.get("doctorInfo")&&$cookieStore.get("doctorInfo").doctor_id?getDoctorInfo():DoctorService.getByUserId($scope.userInfo.id).then(function(data){data&&($cookieStore.put("doctorInfo",{doctor_id:data.doctor_id,NAME:data.NAME,Provider_no:data.Provider_no,CLINICAL_DEPT_ID:data.CLINICAL_DEPT_ID}),getDoctorInfo())})},$scope.checkIsDoctor(),socket.on("receiveNotifyDoctor",function(){$scope.checkIsDoctor()})}),angular.module("app.loggedIn.doctor.list.controller",[]).controller("DoctorListController",function($scope){$scope.doctor_panel={},$scope.doctor={},$scope.doctors={select:0,"class":function(doctor){return{selected:doctor.doco==$scope.doctors.select}},scope:$scope.doctor_panel,options:{api:"api/erm/v2/doctor/search",method:"post",scope:$scope.doctor_panel,columns:[{field:"doctor_id",is_hide:!0},{field:"NAME",label:"Full name"},{field:"Email",label:"Email"},{field:"Phone",label:"Phone"},{field:"Specialties",label:"Specialties",not_submit:!0,type:"custom",fn:function(item){if(!item.specialties||0==item.specialties.length)return"";var specialties=[];return angular.forEach(item.specialties,function(value,key){specialties.push(value.Specialties_name)}),specialties.join(", ")}}],use_filters:!0,filters:{NAME:{type:"text"},Email:{type:"text"},Phone:{type:"text"}},use_actions:!0,actions:[{"class":"fa fa-pencil",title:"Edit",callback:function(doctor){$scope.doctorEditForm.open(doctor.doctor_id)}}]}},$scope.doctorAddForm={is_show:!1,open:function(){$scope.params_doctor={permission:{create:!0,edit:!1}},this.is_show=!0},close:function(){this.is_show=!1},success:function(response){"success"==response.status&&$scope.doctor_panel.reload()}},$scope.doctorEditForm={is_show:!1,open:function(doc_id){$scope.params_doctor={permission:{create:!1,edit:!0},id:doc_id},this.is_show=!0},close:function(){this.is_show=!1},success:function(response){"success"==response.status&&$scope.doctor_panel.reload()}}}),angular.module("app.loggedIn.doctor.setting.controller",[]).controller("DoctorSettingController",function($scope){}),angular.module("app.loggedIn.doctor.add.controller",[]).controller("DoctorAddController",function($scope,$state,$cookieStore,$stateParams,toastr,ConfigService,DoctorService){$scope.newId=0;var loadOption=function(){ConfigService.clinical_option().then(function(list){$scope.options.clinicals=list}),ConfigService.provider_type_option().then(function(list){$scope.options.providers=list.list}),ConfigService.qualification_option().then(function(list){$scope.options.qualifications=list.list}),ConfigService.account_type_option().then(function(list){$scope.options.account_types=list.list})};loadOption(),$scope.modelObjectMap={};var init=function(){$scope.modelObjectMap=angular.copy($scope.modelDoctorObject),$scope.modelObjectMap.Created_by=$cookieStore.get("userInfo").id,DoctorService.getMaxId().then(function(data){$scope.newId=data.data.doctor_id+1,$scope.modelObjectMap.doctor_id=$scope.newId})};init(),$scope.isSubmit=!1,$scope.step=1,$scope.label_step="Next",$scope.prevStep=function(){$scope.step>1&&($scope.label_step="Next",$scope.step--)},$scope.nextStep=function(){switch($scope.isSubmit=!0,$scope.step){case 1:$scope.mainForm.$invalid||($scope.isSubmit=!1,$scope.step=2,$scope.label_step="Insert");break;case 2:$scope.mainForm.$invalid||($scope.isSubmit=!1,DoctorService.insert($scope.modelObjectMap).then(function(response){"success"===response.status&&(toastr.success("Insert Successfully","Success"),$scope.step=1,$scope.label_step="Next",init(),$state.go("loggedIn.doctor.timetable.detail.profile",{doctorId:$scope.newId}))}))}}}),angular.module("app.loggedIn.doctor.timetable.controller",["app.loggedIn.doctor.timetable.detail.controller"]).controller("DoctorTimetableController",function($scope,$state){$scope.$watch("itemUpdate",function(newItem){"undefined"!=typeof newItem&&newItem===!0&&(angular.element("#TimetableDoctorAdd").fadeOut(),$state.go("loggedIn.doctor.timetable",null,{reload:!0}),$scope.itemUpdate=!1)}),$scope.params_doctor_add={permission:{create:!0,popup:!0},popupId:"TimetableDoctorAdd"},$scope.relationships={specialties:{count:0}},$scope.openPopup=function(option){if("doctor"===option.module)switch(option.type){case"add":angular.element("#"+$scope.params_doctor_add.popupId).fadeIn()}},$scope.accordion={oneAtATime:!1,specialties:!0},$scope.selectedDoctor={},$scope.selectDoctor=function(row){$scope.selectedDoctor=row,$state.go("loggedIn.doctor.timetable.detail.calendar",{doctorId:$scope.selectedDoctor.doctor_id})}}),angular.module("app.loggedIn.doctor.timetable.detail.controller",["app.loggedIn.doctor.timetable.detail.calendar.controller","app.loggedIn.doctor.timetable.detail.profile.controller","app.loggedIn.doctor.timetable.detail.casual.controller","app.loggedIn.doctor.timetable.detail.leave.controller"]).controller("DoctorTimetableDetailController",function($scope,$state,$stateParams,DoctorService,ConfigService){$scope.modelDetail={};var loadDetail=function(){DoctorService.getById($stateParams.doctorId).then(function(detail){$scope.modelDetail=detail})};loadDetail(),$scope.getActive=function(state){return state===$state.current.name?"active":""}}),angular.module("app.loggedIn.doctor.timetable.detail.calendar.controller",[]).controller("DoctorTimetableDetailCalendarController",function($scope){}),angular.module("app.loggedIn.doctor.timetable.detail.profile.controller",[]).controller("DoctorTimetableDetailProfileController",function($scope,$stateParams,toastr,ConfigService,DoctorService,PatientService){$scope.params={permission:{create:!1,edit:!0},id:$stateParams.doctorId};var loadOption=function(){ConfigService.clinical_option().then(function(list){$scope.options.clinicals=list}),ConfigService.provider_type_option().then(function(list){$scope.options.providers=list.list}),ConfigService.qualification_option().then(function(list){$scope.options.qualifications=list.list}),ConfigService.account_type_option().then(function(list){$scope.options.account_types=list.list})};loadOption(),$scope.getImage=function(image){PatientService.getSkinApp(image).then(function(response){})},$scope.modelObjectMap={};var sign_map="",init=function(){$scope.modelObjectMap=angular.copy($scope.modelDoctorObject),DoctorService.getById($stateParams.doctorId).then(function(detail){angular.extend($scope.modelObjectMap,detail),sign_map=$scope.modelObjectMap.Signature,$scope.modelObjectMap.isReceiveEmailAfterHour&&($scope.modelObjectMap.isReceiveEmailAfterHour=$scope.modelObjectMap.isReceiveEmailAfterHour.toString()),$scope.modelObjectMap.isAppointmentBook&&($scope.modelObjectMap.isAppointmentBook=$scope.modelObjectMap.isAppointmentBook.toString()),$scope.modelObjectMap.isNewCalendarSlot&&($scope.modelObjectMap.isNewCalendarSlot=$scope.modelObjectMap.isNewCalendarSlot.toString()),$scope.modelObjectMap.Isenable&&($scope.modelObjectMap.Isenable=$scope.modelObjectMap.Isenable.toString())})};init(),$scope.isSubmit=!1,$scope.step=1,$scope.label_step="Next",$scope.prevStep=function(){$scope.step>1&&($scope.label_step="Next",$scope.step--)},$scope.nextStep=function(){switch($scope.isSubmit=!0,$scope.step){case 1:$scope.mainForm.$invalid||($scope.isSubmit=!1,$scope.step=2,$scope.label_step="Update");break;case 2:$scope.mainForm.$invalid||($scope.isSubmit=!1,DoctorService.update($scope.modelObjectMap).then(function(response){"success"===response.status&&(toastr.success("Updated Successfully","Success"),$scope.step=1,$scope.label_step="Next",init())}))}},$scope.resetSignature=function(){$scope.modelObjectMap.Signature=sign_map},$scope.clearSignature=function(){$scope.modelObjectMap.Signature=""}}),angular.module("app.loggedIn.doctor.timetable.detail.leave.controller",[]).controller("DoctorTimetableDetailLeaveController",function($scope,$state,$stateParams,DoctorService,ConfigService,mdtDoctorService,mdtTimetableService,sysServiceService,REAL_DAY_OF_WEEK,toastr,$modal){$scope.list_day_of_week=[{value:"Monday"},{value:"Tuesday"},{value:"Wednesday"},{value:"Thursday"},{value:"Friday"},{value:"Saturday"}];var submitLeave=function(){ConfigService.beforeSave($scope.leave.errors);var postData=angular.copy($scope.leave.form);postData.from_date=ConfigService.convertToDB(postData.from_date),postData.to_date=ConfigService.convertToDB(postData.to_date),postData.doctor_id=$stateParams.doctorId;var modalInstance=$modal.open({templateUrl:"notifyToLeaveCalendar",controller:function($scope,postData,$modalInstance){$scope.fromDateDisplay=moment(postData.from_date,"YYYY-MM-DD").format("DD/MM/YYYY"),$scope.toDateDisplay=moment(postData.to_date,"YYYY-MM-DD").format("DD/MM/YYYY"),DoctorService.beforeLeaveCal(postData).then(function(data){"success"==data.status?$scope.bookedList=data.data:toastr.error("Fail.")},function(err){toastr.error("Fail.")}),$scope.ok=function(){$modalInstance.close(postData)},$scope.cancel=function(){$modalInstance.dismiss("cancel")}},resolve:{postData:function(){return postData}}});modalInstance.result.then(function(postData){postData&&DoctorService.leaveCal(postData).then(function(response){"success"==response.status?toastr.success("Success."):toastr.error("Fail.")},function(error){toastr.error("Fail."),$scope.leave.errors=error.data.errors,ConfigService.beforeError($scope.leave.errors)})})};$scope.leave={form:{from_date:null,to_date:null,doctor_id:""},errors:[],submitLeave:function(){submitLeave()}}}),angular.module("app.loggedIn.doctor.paperless.controller",[]).controller("DoctorPaperlessController",function($scope,$state,$modal,DocumentService,PatientService,$stateParams,localStorageService){var patient_id=$scope.patient_id=$stateParams.patient_id,cal_id=$scope.cal_id=$stateParams.cal_id;PatientService.get(patient_id).then(function(response){response.data&&localStorageService.set("tempPatient",response.data)}),$scope.navigator.add_general=function(){var params={patient_id:patient_id,cal_id:cal_id},str_state="loggedIn."+$scope.tab;$state.go(str_state,params)},$scope.faNewClick=function(){$modal.open({animation:!0,templateUrl:"modules/doctor/views/fachooseModal.html",controller:"FaChooseController"})},$scope.OptionGorgonMA=DocumentService.optionGorgonMA(patient_id),$scope.OptionGorgonFA=DocumentService.optionGorgonFA(patient_id),$scope.OptionGorgonUQ=DocumentService.optionGorgonUQ(patient_id),$scope.OptionGorgonMH=DocumentService.optionGorgonMH(patient_id),$scope.OptionMRS=DocumentService.optionMRS(patient_id),$scope.OptionFA=DocumentService.OptionFA(patient_id),$scope.OptionMA=DocumentService.OptionMA(patient_id),$scope.OptionCategory2=DocumentService.optionCategory2(patient_id),$scope.OptionCategory3=DocumentService.optionCategory3(patient_id),$scope.OptionIDS=DocumentService.OptionIDS(patient_id),$scope.Optionform18=DocumentService.Optionform18(patient_id),$scope.OptionSA1=DocumentService.OptionSA1(patient_id),$scope.OptionSA2=DocumentService.OptionSA2(patient_id),$scope.OptionMH=DocumentService.OptionMH(patient_id),$scope.OptionCOE=DocumentService.OptionCOE(patient_id)}),angular.module("app.loggedIn.doctor.timetable.detail.casual.controller",[]).controller("DoctorTimetableDetailCasualController",function($scope,$stateParams,DoctorService,ConfigService,mdtDoctorService,mdtTimetableService,sysServiceService,REAL_DAY_OF_WEEK,toastr,TimetableModel,$modal){var doctor_id=$stateParams.doctorId;$scope.objectMap={},$scope.objectMap.from_time=moment(new Date).toDate(),$scope.objectMap.to_time=moment(new Date).add(30,"days").toDate(),$scope.timetable={add:function(item){if(!item.list[0]||null!==item.list[0].CAL_ID){var object={CAL_ID:null,SITE_ID:1,DOCTOR_ID:doctor_id,FROM_TIME:"00:00",TO_TIME:"00:00",SERVICE_ID:1};item.list.push(object)}},addRowData:function(item,cal){var from_time_part=moment(cal.FROM_TIME,"HHmm").format("HH:mm"),to_time_part=moment(cal.TO_TIME,"HHmm").format("HH:mm"),from_time=moment(item.DATE).format("YYYY-MM-DD")+" "+from_time_part+":00",to_time=moment(item.DATE).format("YYYY-MM-DD")+" "+to_time_part+":00",options={FROM_TIME:from_time,TO_TIME:to_time,SITE_ID:cal.SITE_ID,DOCTOR_ID:$stateParams.doctorId,CLINICAL_DEPT_ID:$scope.doctor.CLINICAL_DEPT_ID,SERVICE_ID:cal.SERVICE_ID};DoctorService.addCalendar(options).then(function(response){toastr.success("Add successfully !!!"),cal.CAL_ID=response.data},function(err){})},updateRow:function(item,cal){var from_time_part=moment(cal.FROM_TIME,"HHmm").format("HH:mm"),to_time_part=moment(cal.TO_TIME,"HHmm").format("HH:mm"),from_time=moment(item.DATE).format("YYYY-MM-DD")+" "+from_time_part+":00",to_time=moment(item.DATE).format("YYYY-MM-DD")+" "+to_time_part+":00",options={FROM_TIME:from_time,TO_TIME:to_time,SITE_ID:cal.SITE_ID,SERVICE_ID:cal.SERVICE_ID,CAL_ID:cal.CAL_ID};DoctorService.editCalendar(options).then(function(response){console.log(response),"success"==response.status?toastr.success("Edit successfully !!!"):toastr.error("Edit fail !!!")})},remove:function(options){if(null===options.cal.CAL_ID)$scope.data[options.parentIndex].list.splice(options.index,1);else{TimetableModel.beforeDeleteSelectedCalendar(options.cal.CAL_ID).then(function(data){if("success"==data.status){var bookedList=data.data,modalInstance=$modal.open({templateUrl:"notifyToDeleteSelectedCalendar",controller:function($scope,bookedList,$modalInstance){$scope.bookedList=bookedList,$scope.ok=function(){$modalInstance.close(bookedList)},$scope.cancel=function(){$modalInstance.dismiss("cancel")}},resolve:{bookedList:function(){return bookedList}}});modalInstance.result.then(function(bookedList){bookedList&&executeDelete()})}else toastr.error("Delete fail.")},function(err){toastr.error("Delete fail.")});var executeDelete=function(){TimetableModel.deleteSelectedCalendar(options.cal.CAL_ID).then(function(data){"success"==data.status?(toastr.success("Delete success."),$scope.data[options.parentIndex].list.splice(options.index,1)):toastr.error("Delete fail.")},function(err){toastr.error("Delete fail.")})}}},removeAllDay:function(item){var postData={doctorId:doctor_id,date:item.DATE},modalInstance=$modal.open({templateUrl:"notifyToDeleteAllCalendarInDate",controller:function($scope,item,$modalInstance){TimetableModel.beforeDeleteAllCalendarInDate(postData).then(function(data){"success"==data.status?$scope.bookedList=data.data:toastr.error("Delete fail.")},function(err){toastr.error("Delete fail.")}),$scope.ok=function(){$modalInstance.close(item)},$scope.cancel=function(){$modalInstance.dismiss("cancel")}},resolve:{item:function(){return item}}});modalInstance.result.then(function(item){item&&TimetableModel.deleteAllCalendarInDate(postData).then(function(data){"success"==data.status?(item.list=[],toastr.success("Delete success.")):toastr.error("Delete fail.")},function(err){toastr.error("Delete fail.");

})})},getAllCalendarInDate:function(item){var postData={doctorId:doctor_id,date:item.DATE},updateData={DOCTOR_ID:doctor_id},modalInstance=$modal.open({templateUrl:"changeServiceOfCalendarsInDate",controller:function($scope,$modalInstance,$stateParams){$scope.updateData=updateData,$scope.doctor={},mdtDoctorService.byId($stateParams.doctorId).then(function(response){$scope.doctor=response.data,sysServiceService.byClinicalDepartment(response.data.CLINICAL_DEPT_ID).then(function(response){$scope.services=response.data})}),TimetableModel.getAllCalendarInDate(postData).then(function(data){"success"==data.status?$scope.calendarsInDate=data.data:toastr.error("Error when get data.")},function(err){toastr.error("Error when get data.")}),$scope.ok=function(){$modalInstance.close(updateData)},$scope.cancel=function(){$modalInstance.dismiss("cancel")}},resolve:{updateData:function(){return updateData}}});modalInstance.result.then(function(updateData){updateData&&TimetableModel.updateServiceInDate(updateData).then(function(data){"success"==data.status?($scope.getAppointments(),toastr.success("Update success.")):toastr.error("Update fail.")},function(err){toastr.error("Update fail.")})})}},$scope.getAppointments=function(){toastr.info("Loading data from server");var str_from_time=moment($scope.objectMap.from_time).format("YYYY-MM-DD"),str_to_time=moment($scope.objectMap.to_time).format("YYYY-MM-DD"),get_date=new Date(str_from_time),get_to_date=new Date(str_to_time),timeDiff=Math.abs(get_to_date.getTime()-get_date.getTime()),num_date=Math.ceil(timeDiff/864e5)+1;if(console.log(num_date),console.log(timeDiff),1>num_date)return void alert("To time must be greater then from time");for(var cal_list=[],i=0;cal_list.length<num_date;++i){var run_date=new Date(get_date);run_date.setDate(get_date.getDate()+i);var str_date=run_date;cal_list.push({DATE:str_date,list:[]})}$scope.data=cal_list,DoctorService.overviewCalendar(doctor_id,str_from_time,str_to_time).then(function(response){for(var cal_list=response.data,i=0;i<cal_list.length;++i){var cal=cal_list[i],pos=_.findIndex($scope.data,function(item){return moment(item.DATE).format("DD/MM/YYYY")==cal.DATE});-1!==pos&&($scope.data[pos].list=cal.list)}})},$scope.getAppointments(),$scope.doctor={},mdtDoctorService.byId($stateParams.doctorId).then(function(response){$scope.doctor=response.data,sysServiceService.byClinicalDepartment(response.data.CLINICAL_DEPT_ID).then(function(response){$scope.options.clinical_depts=response.data})})}),angular.module("app.loggedIn.doctor.patients.controller",["app.loggedIn.doctor.patients.detail.controller"]).controller("DoctorPatientsController",function($scope,$state,$cookieStore,DoctorService,localStorageService,CompanyModel){var userInfo=$cookieStore.get("userInfo"),doctorInfo=$cookieStore.get("doctorInfo");$scope.isFilterBelowDoctor=1,doctorInfo||$state.go("loggedIn.home"),$scope.reset=function(){$scope.searchObjectMap=angular.copy($scope.searchPatientsObject),$scope.loadList()},$scope.loadList=function(){DoctorService.getByUserId(userInfo.id).then(function(data){1==$scope.isFilterBelowDoctor?$scope.searchObjectMap.doctor_id=data.doctor_id:delete $scope.searchObjectMap.doctor_id,DoctorService.listPatients($scope.searchObjectMap).then(function(response){console.log(response),$scope.list=response})})},$scope.setPage=function(){$scope.searchObjectMap.offset=($scope.searchObjectMap.currentPage-1)*$scope.searchObjectMap.limit,$scope.loadList()},$scope.goToTimetableDetail=function(list){localStorageService.set("patientTempInfo",list);var postData={datetime:moment().format("YYYY-MM-DD hh:mm:ss"),patient_id:list.Patient_id};CompanyModel.getFromTime(postData).then(function(response){-1==response.data?$state.go("loggedIn.patient.appointment",{patient_id:list.Patient_id,cal_id:-1}):$state.go("loggedIn.patient.appointment",{patient_id:list.Patient_id,cal_id:response.data.CAL_ID})},function(error){})};var init=function(){$scope.searchObjectMap=angular.copy($scope.searchPatientsObject),$scope.list=[],$scope.loadList()};init()}),angular.module("app.loggedIn.doctor.patients.detail.controller",["app.loggedIn.doctor.patients.detail.appt.controller"]).controller("DoctorPatientsDetailController",function($scope,$state,$cookieStore,DoctorService,PatientService,localStorageService){$scope.goToApptDetail=function(row){var cal_id=row.CAL_ID,patient_id=$scope.patient.Patient_id;$state.go("loggedIn.patient.appointment",{patient_id:patient_id,cal_id:cal_id})};var doctorInfo=$cookieStore.get("doctorInfo"),init=function(){if(!doctorInfo)return void $state.go("loggedIn.doctor.patients");var doctor_id=doctorInfo.doctor_id;$scope.patient=localStorageService.get("patientTempInfo"),$scope.patient||$state.go("loggedIn.doctor.home"),PatientService.getAppointment($scope.patient.Patient_id,doctor_id).then(function(data){$scope.list_appt=data}),PatientService.getById($scope.patient.Patient_id).then(function(data){$scope.patient=data})};init()}),angular.module("app.loggedIn.doctor.patients.detail.appt.controller",["app.loggedIn.doctor.patients.detail.appt.more.controller"]).controller("DoctorPatientsDetailApptController",function($scope,$filter,$state,toastr,$cookieStore,ConfigService,DoctorService,PatientService,localStorageService){alert("form nay khong con su dung [tannv.dts@gmail.com]"),$scope.patient_detail_modules=[{name:"Patient",color:"blue-soft",desc:"Info",icon:"fa fa-user"},{name:"Companies",color:"red-soft",desc:"Total: 12",icon:"fa fa-building"},{name:"Claim",color:"green-soft",desc:"Available",icon:"fa fa-newspaper-o"},{name:"Outside Referral",color:"purple-soft",desc:"Total: 12",icon:"fa fa-envelope-o"}],$scope.patient_apt_modules=[{name:"Appointment",icon:"fa fa-bookmark-o",color:"blue soft",desc:"Info"},{name:"Paperless",icon:"fa fa-pencil-square-o",color:"red soft",desc:"Total: 12"},{name:"Workcover",icon:"fa fa-paper-plane-o",color:"green-soft",desc:"Has: 2"},{name:"Script, Referral",icon:"fa fa-envelope-square",color:"purple-soft",desc:"Has: 2"}],$scope.doctor_detail={permission:{create:"no"},Patient_id:localStorageService.get("patientTempInfo").Patient_id};var arrGetBy=$filter("arrGetBy"),active_item=function(){for(var i=0;i<$scope.list_appt_item.length;++i){var appt_item=$scope.list_appt_item[i],t_item=arrGetBy($scope.list_dept_item,"ITEM_ID",appt_item.ITEM_ID);t_item?(t_item.checked="1",t_item.inserted=!0,t_item.appt_item_id=appt_item.appt_item_id,t_item.QUANTITY=appt_item.QUANTITY?appt_item.QUANTITY:1):(t_item=arrGetBy($scope.extra_list,"ITEM_ID",appt_item.ITEM_ID),t_item?(t_item.chosen=!1,t_item.appt_item_id=appt_item.appt_item_id,t_item.QUANTITY=appt_item.QUANTITY?appt_item.QUANTITY:1):(appt_item.checked="1",appt_item.chosen=!1,$scope.extra_list.push(appt_item)))}for(var i=0;i<$scope.extra_list.length;++i){var extra_item=$scope.extra_list[i],t_item=arrGetBy($scope.list_dept_item,"ITEM_ID",extra_item.ITEM_ID);t_item&&$scope.extra_list.splice(i,1)}$scope.item_list=DoctorService.catItemDept($scope.list_dept_item),delete $scope.list_dept_item,delete $scope.list_appt_item},init=function(){$scope.patient=localStorageService.get("patientTempInfo"),$scope.patient||$state.go("loggedIn.doctor.home"),PatientService.getById($scope.patient.Patient_id).then(function(data){$scope.modelObjectMap=data,localStorageService.set("tempPatient",data),$scope.modelObjectMap.DOB=ConfigService.getCommonDateDefault($scope.modelObjectMap.DOB),$scope.modelObjectMap.Exp_medicare=ConfigService.getCommonDateDefault($scope.modelObjectMap.Exp_medicare),$scope.modelObjectMap.Exp_pension=ConfigService.getCommonDateDefault($scope.modelObjectMap.Exp_pension)});var doctorInfo=$cookieStore.get("doctorInfo");$scope.apptInfo=localStorageService.get("apptTempInfo"),DoctorService.getApptById($scope.apptInfo.CAL_ID).then(function(data){$scope.apptInfo=data,localStorageService.set("tempAppt",data),$scope.apptChange={},$scope.apptChange.NOTES=data.NOTES,$scope.apptChange.APP_TYPE=data.APP_TYPE}),$scope.options.app_status=ConfigService.appt_status_option();var extra_list=localStorageService.get("itemsTempList");extra_list?($scope.extra_list=extra_list,localStorageService.remove("itemsTempList")):$scope.extra_list=[],DoctorService.getItemByDept(doctorInfo.CLINICAL_DEPT_ID).then(function(data){return $scope.list_dept_item=data,DoctorService.getItemAppt($scope.apptInfo.CAL_ID)}).then(function(data){$scope.list_appt_item=data,active_item()},function(err){console.error(err),toastr.error("Error, please Refresh Page !!!","Error")})};init();var reloadpage=function(){$state.go($state.current,{},{reload:!0})};$scope.saveItemsheet=function(){var insert_list=[],update_list=[],delete_list=[];for(var key in $scope.item_list){var cat=$scope.item_list[key];for(var key2 in cat.list){var item=cat.list[key2];item.inserted?"1"==item.checked?update_list.push({appt_item_id:item.appt_item_id,QUANTITY:item.QUANTITY}):delete_list.push(item.ITEM_ID):"1"==item.checked&&insert_list.push({CLN_ITEM_ID:item.ITEM_ID,QUANTITY:item.QUANTITY})}}for(var i=0,len=$scope.extra_list.length;len>i;++i){{var item=$scope.extra_list[i];({CLN_ITEM_ID:item.ITEM_ID,QUANTITY:item.QUANTITY})}item.chosen&&"1"==item.checked?insert_list.push({CLN_ITEM_ID:item.ITEM_ID,QUANTITY:item.QUANTITY}):"1"==item.checked?update_list.push({appt_item_id:item.appt_item_id,QUANTITY:item.QUANTITY}):delete_list.push(item.ITEM_ID)}submitItemSheet(insert_list,update_list,delete_list)};var submitItemSheet=function(insert_list,update_list,delete_list){var cal_id=$scope.apptInfo.CAL_ID,is_insert=0==insert_list.length,is_delete=0==delete_list.length,is_update=0==update_list.length;is_insert||DoctorService.insertItemAppt(cal_id,insert_list).then(function(data){is_insert=!0,is_delete&&is_update&&(reloadpage(),toastr.success("Save Successfully!!!","Success"))}),is_delete||DoctorService.deleteItemAppt(cal_id,delete_list).then(function(data){is_delete=!0,is_insert&&is_update&&(reloadpage(),toastr.success("Save Successfully!!!","Success"))}),is_update||DoctorService.updateItemAppt(cal_id,update_list).then(function(data){is_update=!0,is_delete&&is_insert&&(reloadpage(),toastr.success("Save Successfully!!!","Success"))})};$scope.saveAppt=function(){console.log($scope.apptChange);var obj=arrGetBy($scope.options.app_status,"code",$scope.apptChange.APP_TYPE);return null==obj?void toastr.error("Cannot set status of appointment !!!","Error"):($scope.apptChange.STATUS=obj.title,void DoctorService.updateAppt($scope.apptInfo.CAL_ID,$scope.apptChange).then(function(res){return"success"!=res.status?void toastr.error("Cannot update this Appointment !!!","Error"):void toastr.success("Update Successfully!!!","Success")}))},$scope.updateCompany=function(company){PatientService.update({Patient_id:$scope.patient.Patient_id,company_id:company.id}).then(function(data){"success"==data.status&&(toastr.success("Save Successfully!!!","Success"),reloadpage()),console.log(data)})},$scope.company_search_options={api:"api/erm/v2/companies/search",method:"post",columns:[{field:"id",is_hide:!0},{field:"Company_name",label:"Company Name"},{field:"Industry"}],use_filters:!0,filters:{Company_name:{type:"text"},Industry:{type:"text"}}},$scope.chooseCompany=function(item){console.log(item),$scope.updateCompany(item)},$scope.show_company_form=!1,$scope.show_company_search=!1,$scope.openCompanySearch=function(){$scope.show_company_search=!0},$scope.closeCompanySearch=function(){$scope.show_company_search=!1},$scope.openCompanyForm=function(){$scope.show_company_form=!0},$scope.closeCompanyForm=function(){$scope.show_company_form=!1}}),angular.module("app.loggedIn.doctor.patients.detail.appt.more.controller",[]).controller("DoctorPatientsDetailApptMoreController",function($scope,$filter,$state,toastr,$cookieStore,ConfigService,DoctorService,localStorageService){var arrGetBy=$filter("arrGetBy");$scope.loadList=function(){DoctorService.searchItem($scope.searchObjectMap).then(function(data){for(var i=0,len=data.list.length;len>i;++i)data.list[i].chosen=arrGetBy($scope.chosenItems,"ITEM_ID",data.list[i].ITEM_ID)?!0:!1;$scope.data=data})},$scope.setPage=function(){$scope.searchObjectMap.offset=($scope.searchObjectMap.currentPage-1)*$scope.searchObjectMap.limit,$scope.loadList()},$scope.setPageLimit=function(){$scope.searchObjectMap.offset=0,$scope.searchObjectMap.currentPage=1,$scope.loadList()},$scope.reset=function(){$scope.searchObjectMap={limit:10,offset:0,maxSize:5,currentPage:1,data:{name:"",code:"",type:""}},$scope.chosenItems=[],$scope.loadList()};var init=function(){$scope.patient=localStorageService.get("patientTempInfo"),$scope.options={},$scope.patient||$state.go("loggedIn.doctor.home"),ConfigService.prefix_headers_option("item").then(function(data){$scope.options.prefixs=data}),$scope.reset()};init(),$scope.removeItem=function(item,index){var t=arrGetBy($scope.data.list,"ITEM_ID",item.ITEM_ID);t&&(t.chosen=!1),$scope.chosenItems.splice(index,1)},$scope.chooseItem=function(item){item.chosen=!0,$scope.chosenItems.push(item),console.log($scope.chosenItems)},$scope.submit=function(){$scope.chosenItems.length>0&&localStorageService.set("itemsTempList",$scope.chosenItems),$state.go("loggedIn.doctor.patients.detail.appt")}}),angular.module("app.loggedIn.doctor.items.controller",["app.loggedIn.doctor.items.cat.controller","app.loggedIn.doctor.items.add.controller","app.loggedIn.doctor.items.edit.controller"]).controller("DoctorItemsController",function($scope,$state,$cookieStore,DoctorService,localStorageService){console.log("ITEMS PAGE "),$scope.objectMap={},$scope.navigateEdit=function(item){var updateMode={isUpdateMode:!0,item_id:item.ITEM_ID,header_code:item.POPULAR_HEADER_ID};localStorageService.set("updateData",updateMode),$state.go("loggedIn.doctor.items.edit")};var init=function(){$scope.doctorInfo=$cookieStore.get("doctorInfo");var dept_id=$scope.doctorInfo.CLINICAL_DEPT_ID;DoctorService.getItemByDept(dept_id,!1).then(function(data){console.log(data),$scope.item_list=data}),DoctorService.getItemHeader(dept_id).then(function(data){$scope.optCat=data,$scope.optCat.unshift({POPULAR_HEADER_ID:"",POPULAR_NAME:"-- All Categories --"})}),$scope.optEnable=[{code:"",title:"All"},{code:"1",title:"Enable"},{code:"0",title:"Disable"}],$scope.searchObj={ISENABLE:"1",POPULAR_HEADER_ID:""}};init()}),angular.module("app.loggedIn.doctor.items.add.controller",[]).controller("DoctorItemsAddController",function($scope,$cookieStore,toastr,ConfigService,DoctorService){var init=function(){$scope.info={action:"Add"},$scope.modeFormItem.init()},submitForm=function(){var header_id=$scope.POPULAR_HEADER_ID;console.log("DATA SUBMIT ",$scope.modelObjectMap),DoctorService.insertItem(header_id,$scope.modelObjectMap).then(function(data){"success"==data.status?(toastr.success("Insert Successfully!!!","Success"),$scope.modeFormItem.reset(),$scope.isSubmit=!1):($scope.modelObjectMap.ITEM_START_DATE="",$scope.modelObjectMap.ITEM_END_DATE="")})};$scope.save=function(){return $scope.isSubmit=!0,$scope.mainForm.$invalid||!$scope.modeFormItem.validate()?void toastr.error("Please Check Your Information !!!","Error"):void $scope.modeFormItem.submit(submitForm)},init()}),angular.module("app.loggedIn.doctor.items.edit.controller",[]).controller("DoctorItemsEditController",function($scope,$state,toastr,localStorageService,ConfigService,DoctorService){var old_header_id="",getData=function(item_id){DoctorService.getItemByCode(item_id).then(function(data){console.log(data),"success"==data.status?(console.log(data),data.result[0].ITEM_START_DATE=ConfigService.getCommonDateDefault(data.result[0].ITEM_START_DATE),data.result[0].ITEM_END_DATE=ConfigService.getCommonDateDefault(data.result[0].ITEM_END_DATE),angular.extend($scope.modelObjectMap,data.result[0])):toastr.error("Something happened!","Error")})},init=function(){$scope.modeFormItem.init(),$scope.isSubmit=!1,$scope.info={action:"Edit"};var updateMode=localStorageService.get("updateData");$scope.inUpdateMode=updateMode.isUpdateMode,null!=updateMode&&void 0!=updateMode&&null!=updateMode.item_id&&""!=updateMode.item_id&&void 0!=updateMode.item_id&&(getData(updateMode.item_id),$scope.POPULAR_HEADER_ID=updateMode.header_code,old_header_id=updateMode.header_code)},submitForm=function(){var new_header_id=$scope.POPULAR_HEADER_ID;console.log("DATA SUBMIT ",$scope.modelObjectMap),DoctorService.editItem($scope.modelObjectMap,old_header_id,new_header_id).then(function(data){"success"==data.status&&(toastr.success("Update Successfully!!!","Success"),$state.go("loggedIn.doctor.items"))})};$scope.editItem=function(){return $scope.isSubmit=!0,$scope.mainForm.$invalid||!$scope.modeFormItem.validate()?void toastr.error("Please Check Your Information !!!","Error"):(delete $scope.modelObjectMap.CREATION_DATE,delete $scope.modelObjectMap.Last_update_date,delete $scope.modelObjectMap.BENEFIT_START_DATE,delete $scope.modelObjectMap.EMSN_START_DATE,delete $scope.modelObjectMap.EMSN_END_DATE,delete $scope.modelObjectMap.EMSN_CHANGE_DATE,delete $scope.modelObjectMap.EMSN_CHANGE_DATE,delete $scope.modelObjectMap.DERIVED_FEE_START_DATE,delete $scope.modelObjectMap.DESCRIPTION_START_DATE,delete $scope.modelObjectMap.QFE_START_DATE,delete $scope.modelObjectMap.QFE_END_DATE,void $scope.modeFormItem.submit(submitForm))},init()}),angular.module("app.loggedIn.doctor.items.cat.controller",[]).controller("DoctorItemsCatController",function($scope,$cookieStore,DoctorService,toastr){$scope.validateCat=function(cat){return""!=cat.POPULAR_CODE.trim()&&""!=cat.POPULAR_NAME.trim()},$scope.resetNewCat=function(){$scope.isNewCat=!1,$scope.newCatObj=angular.copy($scope.newCat)},$scope.setNewCat=function(){$scope.isNewCat=!0},$scope.saveNewCat=function(){return $scope.validateCat($scope.newCatObj)?void DoctorService.insertItemHeader($scope.doctorInfo.CLINICAL_DEPT_ID,$scope.newCatObj).then(function(data){console.log(data),"success"==data.status&&($scope.newCatObj.POPULAR_HEADER_ID=data.header_id,$scope.list_cat.push($scope.newCatObj),$scope.resetNewCat(),toastr.success("Insert Successfully !!!","Success"))}):void toastr.error("Please Fill All Information !!!","Error")},$scope.saveEditCat=function(){return $scope.validateCat($scope.editCatObj)?void DoctorService.updateItemHeader($scope.editCatObj).then(function(data){console.log(data),"success"==data.status?(toastr.success("Update Successfully !!!","Success"),$scope.list_cat[$scope.editIndex]=angular.copy($scope.editCatObj),$scope.isEditCat=!1):toastr.error(data.message,"Error")}):void toastr.error("Please Fill All Information !!!","Error")},$scope.setEditCat=function(index){var item=$scope.list_cat[index];$scope.editIndex=index,$scope.editCatObj=angular.copy(item),$scope.editCatObj.ISENABLE+="",$scope.isEditCat=!0},$scope.setDeleteCat=function(item,index){var x=confirm("Do you really want to delete ?");x&&DoctorService.deleteItemHeader($scope.doctorInfo.CLINICAL_DEPT_ID,item.POPULAR_HEADER_ID).then(function(data){console.log(data),"success"==data.status?(toastr.success("Delete Successfully !!!","Success"),$scope.list_cat.splice(index,1)):toastr.error(data.message,"Error")})};var init=function(){$scope.doctorInfo=$cookieStore.get("doctorInfo"),DoctorService.getItemHeader($scope.doctorInfo.CLINICAL_DEPT_ID).then(function(data){console.log(data),$scope.list_cat=data}),$scope.newCat={POPULAR_CODE:"",POPULAR_NAME:"",ISENABLE:"1"},$scope.isEditCat=!1,$scope.resetNewCat()};init()}),angular.module("app.loggedIn.doctor.fachoose.controller",[]).controller("FaChooseController",function($scope,$stateParams,$state){var patient_id=$scope.patient_id=$stateParams.patient_id,cal_id=$scope.cal_id=$stateParams.cal_id;$scope.fa_panel={},$scope.fa={select:0,scope:$scope.fa_panel,options:{api:"api/erm/v2/fa/fa_choose_search",method:"post",scope:$scope.fa_panel,columns:[{field:"FA_ID",is_hide:!0},{field:"TYPE",label:"Type"},{field:"FA_NAME",label:"Name"}],search:{patient_id:patient_id,cal_id:cal_id},use_filters:!0,filters:{TYPE:{type:"text"},FA_NAME:{type:"text"}}}},$scope.clickRow=function(item){console.log("this is choosen item",item);var params={patient_id:patient_id,cal_id:cal_id,fa_id:item.FA_ID},str_state="loggedIn.FA";$state.go(str_state,params)}}),angular.module("app.loggedIn.doctor.directives",["app.loggedIn.doctor.list.directive","app.loggedIn.doctor.search.directive","app.loggedIn.doctor.itemsearch.directive"]),angular.module("app.loggedIn.doctor.search.directive",[]).directive("doctorSearch",function(DoctorService){return{restrict:"EA",scope:{clickRow:"&",isClose:"@"},templateUrl:"modules/doctor/directives/templates/search.html",link:function(scope,element,attrs){if(scope.list={},scope.isClose)var idClose="#"+scope.isClose;scope.params={pagination:{limit:10,offset:0,current_page:1,max_size:5},filters:[{type:"text",name:"NAME",value:""},{type:"text",name:"Email",value:""}],select:["doctor_id","NAME","Email"]},scope.closePopup=function(){angular.element(idClose).fadeOut()};var loadList=function(){DoctorService.mdtSearch(scope.params).then(function(response){"success"===response.status&&(scope.list=response)},function(error){alert("Error Server")})};loadList(),scope.refreshList=function(){loadList()},scope.setPage=function(){scope.params.pagination.offset=(scope.params.pagination.current_page-1)*scope.params.pagination.limit,loadList()}}}}),angular.module("app.loggedIn.doctor.list.directive",[]).directive("doctorList",function(){return{restrict:"EA",scope:{},templateUrl:"modules/doctor/directives/templates/list.html",link:function(scope,element,attrs){scope.data_options={api:"api/erm/doctors/search",method:"post",columns:[{field:"doctor_id",is_hide:!0},{field:"NAME",label:"Doctor Name"},{field:"Email",label:"Email"}],show_index:!0,use_filters:!0,filters:{NAME:{type:"text"},Email:{type:"text"}}},scope.clickRow=function(item){console.log(item)}}}}),angular.module("app.loggedIn.doctor.itemsearch.directive",[]).directive("itemSearch",function($filter,PatientService,OutsideReferralModel,ReceptionistService,toastr){var arrGetBy=$filter("arrGetBy");return{restrict:"EA",scope:{list:"=",extra:"=",appt:"="},template:'<my-data-table options="data_options" rowclass="set_row_class" rowclick="row_click">',controller:function($scope){$scope.data_options={api:"api/erm/v2/items/search",method:"post",columns:[{field:"ITEM_ID",is_hide:!0},{field:"ITEM_CODE",label:"Item Code"},{field:"ITEM_NAME",label:"Item Name"},{field:"ITEM_TYPE",label:"Type"}],use_filters:!0,filters:{ITEM_CODE:{type:"text"},ITEM_NAME:{type:"text"},ITEM_TYPE:{type:"text"}}},$scope.set_row_class=function(item){var t_item=arrGetBy($scope.list,"ITEM_ID",item.ITEM_ID);if(t_item)return"success";var t_item=arrGetBy($scope.extra,"ITEM_ID",item.ITEM_ID);return t_item?"success":void 0},$scope.row_click=function(item){if(void 0!==$scope.extra&&null!==$scope.extra){var t_item=arrGetBy($scope.extra,"ITEM_ID",item.ITEM_ID);if(!t_item){var t_item=arrGetBy($scope.list,"ITEM_ID",item.ITEM_ID);t_item||(item.QUANTITY=1,item.checked="1",item.chosen=!0,$scope.extra.push(item),ReceptionistService.itemFeeAppt($scope.appt.SERVICE_ID,[item.ITEM_ID]).then(function(response){var list_fee=response.list,t_item=arrGetBy(list_fee,"CLN_ITEM_ID",item.ITEM_ID);t_item?(item.PRICE=t_item.SCHEDULE_FEE,item.disable_fee=!0):(item.PRICE=0,item.disable_fee=!1)},function(err){console.log(err)}))}}}}}});