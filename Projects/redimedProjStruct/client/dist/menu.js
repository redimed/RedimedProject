angular.module("app.loggedIn.menu",["app.loggedIn.menu.controller","app.loggedIn.menu.services"]).config(function($stateProvider){$stateProvider.state("loggedIn.menu",{url:"/menus",templateUrl:"modules/menu/views/menu.html",controller:"MenuController"})}),angular.module("app.loggedIn.menu.services",[]).factory("MenuService",function(Restangular){var menuService={},api=Restangular.all("api");return menuService.menuRootList=function(){var menuList=api.one("menu/list/root");return menuList.get()},menuService.menuList=function(id){var list=api.all("menu/list/id");return list.post({id:id})},menuService.functionList=function(){var functionList=api.one("function/list");return functionList.get()},menuService.insertMenu=function(info){var insert=api.all("menu/new");return insert.post({info:info})},menuService.editMenu=function(info){var edit=api.all("menu/edit");return edit.post({info:info})},menuService.menuInfo=function(id){var info=api.all("menu/id");return info.post({id:id})},menuService.deleteRootMenu=function(id){var a=api.all("menu/delete");return a.post({id:id,isRoot:!0})},menuService.deleteMenu=function(id){var a=api.all("menu/delete");return a.post({id:id,isRoot:!1})},menuService}),angular.module("app.loggedIn.menu.controller",[]).controller("MenuController",function($scope,$modal,$state,$filter,ngTableParams,MenuService,$http,toastr){$scope.functionList=[],$scope.data=[],$scope.data1=[],$scope.isSelected=!1,$scope.selectedId=null,$scope.tableParams2=new ngTableParams({page:1,count:25},{total:$scope.data1.length,getData:function($defer,params){var orderedData=params.sorting()?$filter("orderBy")($scope.data1,params.orderBy()):$scope.data1;orderedData=params.filter()?$filter("filter")(orderedData,params.filter()):orderedData,params.total(orderedData.length),$defer.resolve(orderedData.slice((params.page()-1)*params.count(),params.page()*params.count()))}}),MenuService.menuRootList().then(function(data){MenuService.functionList().then(function(data){$scope.functionList=data}),$scope.data=data,$scope.tableParams=new ngTableParams({page:1,count:10},{total:$scope.data.length,getData:function($defer,params){var orderedData=params.sorting()?$filter("orderBy")($scope.data,params.orderBy()):$scope.data;orderedData=params.filter()?$filter("filter")(orderedData,params.filter()):orderedData,params.total(orderedData.length),$defer.resolve(orderedData.slice((params.page()-1)*params.count(),params.page()*params.count()))}})}),$scope.showChild=function(m){$scope.childTitle=m.description,$scope.selectedId=m.menu_id,$scope.isSelected=!0,$scope.data1=[],MenuService.menuList(m.menu_id).then(function(data){$scope.data1=data,$scope.$watch("data1",function(data){$scope.tableParams2.reload()})})},$scope.addNewMenu=function(){var modalInstance=$modal.open({templateUrl:"modules/menu/views/menuDetails.html",controller:"NewMenuController",size:"md",resolve:{isSub:function(){return!1},parentId:function(){return null}}});$scope.data=[],modalInstance.result.then(function(){MenuService.menuRootList().then(function(data){$scope.data=data,$scope.$watch("data",function(data){$scope.tableParams.reload()})})})},$scope.editMenu=function(m){$scope.showChild(m);var modalInstance=$modal.open({templateUrl:"modules/menu/views/menuDetails.html",controller:"EditMenuController",size:"md",resolve:{menuId:function(){return m.menu_id},isSub:function(){return!1}}});$scope.data=[],modalInstance.result.then(function(){MenuService.menuRootList().then(function(data){$scope.data=data,$scope.$watch("data",function(data){$scope.tableParams.reload()})})})},$scope.deleteRootMenu=function(m){MenuService.deleteRootMenu(m.menu_id).then(function(data){"success"===data.status?(toastr.success("Delete Menu Successfully!","Success"),$scope.data=[],MenuService.menuRootList().then(function(data){$scope.data=data,$scope.$watch("data",function(data){$scope.tableParams.reload()})}),$scope.selectedId=null):toastr.error("Delete Menu Failed!","Error")})},$scope.deleteSubMenu=function(m){MenuService.deleteMenu(m.menu_id).then(function(data){"success"===data.status?(toastr.success("Delete Menu Successfully!","Success"),$scope.data1=[],MenuService.menuList($scope.selectedId).then(function(data){$scope.data1=data,$scope.$watch("data1",function(data){$scope.tableParams2.reload()})})):toastr.error("Delete Menu Failed!","Error")})},$scope.addNewSubMenu=function(){var modalInstance=$modal.open({templateUrl:"modules/menu/views/menuDetails.html",controller:"NewMenuController",size:"md",resolve:{isSub:function(){return!0},parentId:function(){return $scope.selectedId}}});modalInstance.result.then(function(){$scope.data1=[],MenuService.menuList($scope.selectedId).then(function(data){$scope.data1=data,$scope.$watch("data1",function(data){$scope.tableParams2.reload()})})})},$scope.editSubMenu=function(m){var modalInstance=$modal.open({templateUrl:"modules/menu/views/menuDetails.html",controller:"EditMenuController",size:"md",resolve:{menuId:function(){return m.menu_id},isSub:function(){return!0}}});modalInstance.result.then(function(){$scope.data1=[],MenuService.menuList($scope.selectedId).then(function(data){$scope.data1=data,$scope.$watch("data1",function(data){$scope.tableParams2.reload()})})})}}).controller("NewMenuController",function($scope,$filter,$state,$modalInstance,MenuService,isSub,parentId,toastr){$scope.cancel=function(){$modalInstance.dismiss("cancel")},$scope.info={MenuDescription:null,MenuDefinition:null,MenuType:null,MenuEnable:"1",MenuWeb:"1",MenuMobile:null,FunctionID:null,ParentID:parentId},$scope.isSub=isSub,1==$scope.isSub&&MenuService.functionList().then(function(data){$scope.functionList=data}),$scope.submitMenu=function(menuForm){$scope.showClickedValidation=!0,menuForm.$invalid?toastr.error("Please Input All Required Information!","Error"):MenuService.insertMenu($scope.info).then(function(data){"success"===data.status?(toastr.success("Insert New Menu Successfully!","Success"),$modalInstance.close()):toastr.error("Insert New Menu Failed!","Error")})}}).controller("EditMenuController",function($scope,$filter,$state,$modalInstance,MenuService,isSub,menuId,toastr){$scope.cancel=function(){$modalInstance.dismiss("cancel")},console.log(menuId),$scope.isSub=isSub,1==$scope.isSub&&MenuService.functionList().then(function(data){$scope.functionList=data}),$scope.info={MenuID:null,MenuDescription:null,MenuDefinition:null,MenuEnable:null,MenuWeb:null,MenuMobile:null,MenuType:null,FunctionID:null},MenuService.menuInfo(menuId).then(function(data){$scope.info.MenuID=data.menu_id,$scope.info.MenuDescription=data.description,$scope.info.MenuDefinition=data.definition,$scope.info.MenuEnable=1==data.isEnable?"1":"0",$scope.info.MenuWeb=1==data.isWeb?"1":"0",$scope.info.MenuMobile=1==data.isMobile?"1":"0",$scope.info.MenuType=data.type,$scope.info.FunctionID=null!=data.function_id||""!=data.function_id?data.function_id:null}),$scope.submitMenu=function(menuForm){$scope.showClickedValidation=!0,menuForm.$invalid?toastr.error("Please Input All Required Information!","Error"):MenuService.editMenu($scope.info).then(function(data){"success"===data.status?(toastr.success("Edit Menu Successfully!","Success"),$modalInstance.close()):toastr.error("Edit Menu Failed!","Error")})}});