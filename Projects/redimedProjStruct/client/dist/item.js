var itemConst={feeGroupType:{private_fund:{value:"private_fund",display:"Private Fund",haveStartDate:!0,sourceFileTypes:{txt:{value:"txt",display:"txt"}}},medicare:{value:"medicare",display:"Medicare",haveStartDate:!1,sourceFileTypes:{xml:{value:"xml",display:"xml"}}},dva:{value:"dva",display:"DVA",haveStartDate:!0,sourceFileTypes:{xml:{value:"xml",display:"xml"}}},public_hospital:{value:"public_hospital",haveStartDate:!1,display:"Public Hospital"},workcover:{value:"workcover",haveStartDate:!1,display:"Workcover"}},sourceFileType:{xml:"xml",txt:"txt",xls:"xls"}};angular.module("app.loggedIn.item",["app.loggedIn.item.controller","app.loggedIn.item.services","app.loggedIn.item.directives"]).config(function($stateProvider){$stateProvider.state("loggedIn.item",{"abstract":!0,templateUrl:"modules/item/views/structure.html",controller:"ItemController"}).state("loggedIn.item.list",{url:"/item/list",views:{"main-content":{templateUrl:"modules/item/views/list.html",controller:"ItemListController"}}}).state("loggedIn.item.fee",{url:"/item/fee",views:{"main-content":{templateUrl:"modules/item/views/fee.html",controller:"ItemFeeController"}}}).state("loggedIn.item.fee.search",{url:"/search",views:{"main-content@loggedIn.item":{templateUrl:"modules/item/views/fee_search.html",controller:"ItemFeeSearchController"}}}).state("loggedIn.item.header",{url:"/item/header",views:{"main-content":{templateUrl:"modules/item/views/header.html",controller:"ItemHeaderController"}}})}),angular.module("app.loggedIn.item.services",[]).factory("ItemService",function(Restangular){var instanceService={},appApi=Restangular.all("api/erm");return instanceService.saveHeaderItems=function(header_id,item_list){for(var list=[],i=item_list.length-1;i>=0;i--)list.push(item_list[i].ITEM_ID);var data={header_id:header_id,items:list},detailApi=appApi.all("v2/items/insert_header_items");return detailApi.post(data)},instanceService.insertManualLine=function(data){var detailApi=appApi.all("v2/items/searchmanual");return detailApi.post(data)},instanceService.insertHeader=function(data){var detailApi=appApi.all("v2/items/insert_header");return detailApi.post(data)},instanceService.insert=function(data){var detailApi=appApi.all("v2/items/insert");return detailApi.post(data)},instanceService.insertFromSource=function(){var detailApi=appApi.all("v2/items/insert_from_source");return detailApi.post(data)},instanceService.detail=function(item_id){var detailApi=appApi.all("v2/items/detail");return detailApi.post({ITEM_ID:item_id})},instanceService.update=function(ITEM_ID,data){var detailApi=appApi.all("v2/items/update");return detailApi.post(data)},instanceService.getItemFees=function(item_id){var detailApi=appApi.one("v2/fees/get_item_fees");return detailApi.get({item_id:item_id})},instanceService.insertItemFees=function(item_id,fee_list){var list=[];console.log(fee_list);for(var i=fee_list.length-1;i>=0;i--)void 0!==fee_list[i].SCHEDULE_FEE&&list.push(fee_list[i]);var data={item_id:item_id,fees:list},detailApi=appApi.all("v2/fees/insert_item_fees");return detailApi.post(data)},instanceService.insertItemFundFees=function(item_id,fee_list){for(var list=[],i=fee_list.length-1;i>=0;i--)(void 0!==fee_list[i].FEE||void 0!==fee_list[i].PERCENT_FEE)&&list.push(fee_list[i]);var data={item_id:item_id,fees:list},detailApi=appApi.all("v2/fees/insert_item_fund_fees");return detailApi.post(data)},instanceService.updateTypePriceSource=function(type_id){var detailApi=appApi.all("v2/fees/update_type_price_source");return detailApi.post({FEE_TYPE_ID:type_id})},instanceService.updateGroupPriceSource=function(group_id){var detailApi=appApi.all("v2/fees/update_group_price_source");return detailApi.post({FEE_GROUP_ID:group_id})},instanceService.feegroupinsert=function(data){var detailApi=appApi.all("v2/fees/group/insert");return detailApi.post(data)},instanceService.feegroupdetail=function(group_id){console.log(group_id);var detailApi=appApi.all("v2/fees/group/detail");return detailApi.post({FEE_GROUP_ID:group_id})},instanceService.feegroupupdate=function(data){var detailApi=appApi.all("v2/fees/group/update");return detailApi.post(data)},instanceService.feetypeinsert=function(data){var detailApi=appApi.all("v2/fees/type/insert");return detailApi.post(data)},instanceService.feetypedetail=function(type_id){var detailApi=appApi.all("v2/fees/type/detail");return detailApi.post({FEE_TYPE_ID:type_id})},instanceService.feetypeupdate=function(data){var detailApi=appApi.all("v2/fees/type/update");return detailApi.post(data)},instanceService.privatefundsinsert=function(data){var detailApi=appApi.all("v2/fees/funds/insert");return detailApi.post(data)},instanceService.privatefundsdetail=function(pf_id){var detailApi=appApi.all("v2/fees/funds/detail");return detailApi.post({PF_id:pf_id})},instanceService.privatefundsupdate=function(data){var detailApi=appApi.all("v2/fees/funds/update");return detailApi.post(data)},instanceService.all_fee_types=function(){var detailApi=appApi.all("v2/fees/search_type_fees");return detailApi.post()},instanceService.importItemFromXML=function(){var detailApi=appApi.all("v2/items/import_from_source");return detailApi.post()},instanceService.importMedicareFeeFromSource=function(postData){var detailApi=appApi.all("v2/fees/group/import_medicare_fee_from_source");return detailApi.post({postData:postData})},instanceService.importFeeFromTxtSource=function(postData){var detailApi=appApi.all("v2/fees/group/import_fee_from_txt_source");return detailApi.post({postData:postData})},instanceService.importDvaFeeFromSource=function(postData){var detailApi=appApi.all("v2/fees/group/import_dva_fee_from_source");return detailApi.post({postData:postData})},instanceService.showHistory=function(data){var detailApi=appApi.all("v2/items/show_history");return detailApi.post(data)},instanceService.getListGroupFee=function(){var detailApi=appApi.all("v2/fees/group/get_list_group_fee");return detailApi.post()},instanceService.getItemFeeTypes=function(postData){var detailApi=appApi.all("v2/fees/type/get_item_fee_types");return detailApi.post({postData:postData})},instanceService.getItemFeeList=function(postData){var detailApi=appApi.all("v2/items/get_item_fee_list");return detailApi.post({postData:postData})},instanceService.saveAllItemFeeInGroupFee=function(feeGroup){var detailApi=appApi.all("v2/fees/group/save_all_item_fee_in_group_fee");return detailApi.post({feeGroup:feeGroup})},instanceService.removeItemFee=function(itemFeeId){var detailApi=appApi.all("v2/fees/remove_item_fee");return detailApi.post({itemFeeId:itemFeeId})},instanceService}),angular.module("app.loggedIn.item.directives",["app.loggedIn.item.detail.directive","app.loggedIn.item.search.directive","app.loggedIn.item.header_detail.directive","app.loggedIn.item.item_fees.directive","app.loggedIn.item.feegroup.detail.directive","app.loggedIn.item.feetype.detail.directive","app.loggedIn.item.privatefunds.detail.directive","app.loggedIn.item.showhistory.detail.directive"]),angular.module("app.loggedIn.item.detail.directive",[]).directive("itemDetail",function(ItemModel,ItemService,ConfigService,toastr,$timeout){return{restrict:"EA",scope:{data:"@",on_success:"=onsuccess"},templateUrl:"modules/item/directives/templates/detail.html",controller:function($scope,ConfigService){ConfigService.taxes_option().then(function(data){$scope.taxes=data}),ConfigService.prefix_headers_option("item").then(function(data){$scope.prefix_headers=data}),ConfigService.inv_uoms_option().then(function(data){$scope.uoms=data}),$scope.loadData=function(id){$scope.id=id,ItemService.detail(id).then(function(data){angular.extend($scope.modelObjectMap,data.data),ConfigService.autoConvertData($scope.modelObjectMap)})}},link:function(scope,element,attrs){if(scope.modelObjectMap=angular.copy(ItemModel),scope.mode={type:"add",text:"Add Item"},scope.data){var data=scope.$eval(scope.data);data.id&&(scope.itemId=data.id,scope.loadData(data.id),scope.mode={type:"edit",text:"Save Item"})}var addProcess=function(postData){ItemService.insert(postData).then(function(response){"success"===response.status&&(toastr.success("Added a new Item","Success"),scope.isSubmit=!1,scope.modelObjectMap=angular.copy(response.data),scope.mode={type:"edit",text:"Save Item"})},function(error){toastr.error("Fail to add a new Item","Error")})},editProcess=function(postData){var id=postData.id;delete postData.id,ItemService.update(id,postData).then(function(response){"success"===response.status&&(toastr.success("Edit Item Successfully","Success"),scope.isSubmit=!1,scope.on_success&&scope.on_success(response))})};scope.clickAction=function(option){if("view"!=option.type&&(scope.isSubmit=!0,!scope.mainForm.$invalid)){var postData=angular.copy(scope.modelObjectMap);postData.TAX_ID&&_.filter(scope.taxes,function(n){n.TAX_ID==postData.TAX_ID&&(console.log("postData",postData),postData.TAX_CODE=n.TAX_CODE,postData.TAX_RATE=n.TAX_RATE)});for(var key in postData)postData[key]instanceof Date&&(postData[key]=ConfigService.getCommonDate(postData[key]));"add"==option.type?addProcess(postData):"edit"==option.type&&editProcess(postData)}}}}}),angular.module("app.loggedIn.item.search.directive",[]).directive("itemSearch",function(ItemModel,ItemService,ConfigService,toastr){}),angular.module("app.loggedIn.item.item_fees.directive",[]).directive("itemFees",function(ItemService,ConfigService,toastr){return{restrict:"EA",scope:{item_id:"=id"},templateUrl:"modules/item/directives/templates/item_fees.html",controller:function($scope,$modal){var currentFeeGroupId=$scope.currentFeeGroupId=null;$scope.setCurrentFeeGroupId=function(feeGroup){currentFeeGroupId=feeGroup.FEE_GROUP_ID},$scope.loadFeeArr=function(){var feeStruct=$scope.feeStruct={},feeArr=$scope.feeArr=[];ItemService.getItemFeeList({itemId:$scope.item_id}).then(function(data){if("success"==data.status){for(var i=0;i<data.data.length;i++){var item=data.data[i];if(feeStruct[item.FEE_GROUP_ID]||(feeStruct[item.FEE_GROUP_ID]={FEE_GROUP_ID:item.FEE_GROUP_ID,FEE_GROUP_NAME:item.FEE_GROUP_NAME,FEE_GROUP_TYPE:item.FEE_GROUP_TYPE,FEE_TYPES:{}}),item.FEE_TYPE_ID&&!feeStruct[item.FEE_GROUP_ID].FEE_TYPES[item.FEE_TYPE_ID]&&(feeStruct[item.FEE_GROUP_ID].FEE_TYPES[item.FEE_TYPE_ID]={FEE_TYPE_ID:item.FEE_TYPE_ID,FEE_TYPE_NAME:item.FEE_TYPE_NAME,LIST_FEE:[]}),item.ITEM_FEE_ID){var fee={ITEM_FEE_ID:item.ITEM_FEE_ID,CLN_ITEM_ID:item.CLN_ITEM_ID,FEE_START_DATE:item.FEE_START_DATE,FEE_START_DATE_DISPLAY:moment(new Date(item.FEE_START_DATE)).format("DD-MM-YYYY"),FEE:item.FEE,PERCENT:item.PERCENT};feeStruct[item.FEE_GROUP_ID].FEE_TYPES[item.FEE_TYPE_ID].LIST_FEE.push(fee);var currentDate=moment(),startDate=moment(new Date(item.FEE_START_DATE));!feeStruct[item.FEE_GROUP_ID].FEE_TYPES[item.FEE_TYPE_ID].currentFee&&startDate.isBefore(currentDate)&&(feeStruct[item.FEE_GROUP_ID].FEE_TYPES[item.FEE_TYPE_ID].currentFee=fee)}}angular.forEach(feeStruct,function(feeGroupItem,key){var feeGroup={FEE_GROUP_ID:feeGroupItem.FEE_GROUP_ID,FEE_GROUP_NAME:feeGroupItem.FEE_GROUP_NAME,FEE_GROUP_TYPE:feeGroupItem.FEE_GROUP_TYPE,FEE_TYPES:[]};feeGroup.FEE_GROUP_ID==currentFeeGroupId&&(feeGroup.isCurrent=!0),feeArr.push(feeGroup),angular.forEach(feeGroupItem.FEE_TYPES,function(feeTypeItem,key){var feeType={FEE_TYPE_ID:feeTypeItem.FEE_TYPE_ID,FEE_TYPE_NAME:feeTypeItem.FEE_TYPE_NAME,LIST_FEE:feeTypeItem.LIST_FEE,currentFee:feeTypeItem.currentFee};feeGroup.FEE_TYPES.push(feeType)})}),null==currentFeeGroupId&&(feeArr[0].isCurrent=!0);var feeGroupSort=function(a,b){var A=a.FEE_GROUP_TYPE.toLowerCase(),B=b.FEE_GROUP_TYPE.toLowerCase();if(B>A)return-1;if(A>B)return 1;var C=a.FEE_GROUP_NAME.toLowerCase(),D=b.FEE_GROUP_NAME.toLowerCase();return D>C?-1:C>D?1:0},feeTypeSort=function(a,b){var A=a.FEE_TYPE_NAME.toLowerCase(),B=b.FEE_TYPE_NAME.toLowerCase();return B>A?-1:A>B?1:0},feeListSort=function(a,b){var A=moment(new Date(a.FEE_START_DATE)),B=moment(new Date(b.FEE_START_DATE));return A.isBefore(B)?1:A.isAfter(B)?-1:0};feeArr.sort(feeGroupSort);for(var i=0;i<feeArr.length;i++){var feeTypes=feeArr[i].FEE_TYPES;feeTypes.sort(feeTypeSort);for(var j=0;j<feeTypes.length;j++)feeTypes[j].LIST_FEE.sort(feeListSort)}}else exlog.logErr("item->itemFeesDirective",data)},function(err){exlog.logErr("item->itemFeesDirective",err)})},$scope.$watch("item_id",function(newValue,oldValue){$scope.item_id&&$scope.loadFeeArr()}),$scope.addNewFeeItem=function(feeType){$modal.open({templateUrl:"addNewFeeItemTemplate",controller:function($scope,$modalInstance,feeType,itemId){var newFeeItem=$scope.newFeeItem={CLN_ITEM_ID:itemId};$scope.add=function(){newFeeItem.FEE_START_DATE=moment(newFeeItem.FEE_START_DATE_DISPLAY,"DD/MM/YYYY").toDate(),newFeeItem.FEE_START_DATE_DISPLAY=moment(newFeeItem.FEE_START_DATE).format("DD-MM-YYYY");for(var i=0;i<feeType.LIST_FEE.length;i++)if(feeType.LIST_FEE[i].FEE_START_DATE_DISPLAY==newFeeItem.FEE_START_DATE_DISPLAY)return void toastr.warning("Duplicate Start Date.","Warning");feeType.LIST_FEE.push($scope.newFeeItem),feeType.currentFee=newFeeItem,$modalInstance.close("success")},$scope.cancel=function(){$modalInstance.dismiss("cancel")}},resolve:{feeType:function(){return feeType},itemId:function(){return $scope.item_id}}})},$scope.saveAllItemFeeInGroupFee=function(groupFee){ItemService.saveAllItemFeeInGroupFee(groupFee).then(function(data){"success"==data.status?(toastr.success("Save success.","Success"),$scope.loadFeeArr()):"empty"==data.status?(toastr.warning("Data empty.","Warning"),exlog.logErr(data)):(toastr.error("Save error.","Error"),exlog.logErr(data))},function(err){toastr.error("Save error.","Error"),exlog.logErr(err)})},$scope.removeItemFee=function(itemFee){if(itemFee){var modalInstance=$modal.open({templateUrl:"notifyRemoveItemFeeTemplate",controller:function($scope,$modalInstance){$scope.ok=function(){$modalInstance.close("ok")},$scope.cancel=function(){$modalInstance.dismiss("cancel")}},size:"sm"});modalInstance.result.then(function(result){"ok"==result&&ItemService.removeItemFee(itemFee.ITEM_FEE_ID).then(function(data){"success"==data.status?(toastr.success("Remove item fee success.","Success"),$scope.loadFeeArr()):(toastr.error("Remove item fee error.","Error"),exlog.logErr(data))},function(err){toastr.error("Remove item fee error.","Error"),exlog.logErr(err)})},function(reason){})}else toastr.warning("No Fee Exist.","Warning")}}}}),angular.module("app.loggedIn.item.header_detail.directive",[]).directive("itemHeaderDetail",function(ItemHeaderModel,ItemService,ConfigService,toastr){return{restrict:"EA",scope:{data:"@",onsuccess:"=onsuccess"},templateUrl:"modules/item/directives/templates/header_detail.html",link:function(scope,element,attrs){var loadData=function(id){ItemService.detailHeader(id).then(function(data){angular.extend(scope.modelObjectMap,data.row),ConfigService.autoConvertData(scope.modelObjectMap)})};if(scope.modelObjectMap=angular.copy(ItemHeaderModel),scope.mode={type:"add",text:"Add Popular"},scope.data){var data=scope.$eval(scope.data);data.id&&(loadData(data.id),scope.mode={type:"edit",text:"Edit Item"})}var addProcess=function(postData){console.log(postData),ItemService.insertHeader(postData).then(function(response){console.log(response),"success"===response.status&&(toastr.success("Added a Popular","Success"),scope.modelObjectMap=angular.copy(ItemHeaderModel),scope.isSubmit=!1,scope.onsuccess&&(console.log(scope.onsuccess),scope.onsuccess(response)))})},editProcess=function(postData){var id=postData.id;delete postData.id,ItemService.update(id,postData).then(function(response){"success"===response.status&&(toastr.success("Edit Item Successfully","Success"),scope.isSubmit=!1,scope.onsuccess&&scope.onsuccess(response))})};scope.clickAction=function(option){if("view"!=option.type&&(scope.isSubmit=!0,!scope.mainForm.$invalid)){var postData=angular.copy(scope.modelObjectMap);for(var key in postData)postData[key]instanceof Date&&(postData[key]=ConfigService.getCommonDate(postData[key]));"add"==option.type?addProcess(postData):"edit"==option.type&&editProcess(postData)}}}}}),angular.module("app.loggedIn.item.feegroup.detail.directive",[]).directive("feeGroupDetail",function(FeeGroupModel,ItemService,ConfigService,toastr,$modal){return{restrict:"EA",scope:{data:"@",options:"=",on_success:"=onsuccess"},templateUrl:"modules/item/directives/templates/fee_group_detail.html",link:function(scope,element,attrs){scope.feeGroupType=itemConst.feeGroupType,scope.currentGroupType={},scope.feeMapping={},scope.feeGroupTypeChange=function(){scope.currentGroupType=scope.feeGroupType[scope.modelObjectMap.FEE_GROUP_TYPE],scope.modelObjectMap.SOURCE_FILE_TYPE=null};var loadData=function(id){ItemService.feegroupdetail(id).then(function(data){if(angular.extend(scope.modelObjectMap,data.data),scope.currentGroupType=scope.feeGroupType[scope.modelObjectMap.FEE_GROUP_TYPE],ConfigService.autoConvertData(scope.modelObjectMap),scope.modelObjectMap.COLUMN_MAPPING){scope.modelObjectMap.COLUMN_MAPPING=JSON.parse(scope.modelObjectMap.COLUMN_MAPPING);var feeMapping=scope.modelObjectMap.COLUMN_MAPPING;scope.modelObjectMap.itemCode=feeMapping.itemCode,console.log(scope.modelObjectMap),scope.feeMapping=feeMapping.feeMapping}scope.modelObjectMap.SOURCE_START_DATE&&(scope.modelObjectMap.SOURCE_START_DATE=moment(scope.modelObjectMap.SOURCE_START_DATE).format("DD/MM/YYYY"))})};if(scope.modelObjectMap=angular.copy(FeeGroupModel),scope.mode={type:"add",text:"Save Fee Group"},scope.data){var data=scope.$eval(scope.data);data.id&&(loadData(data.id),scope.mode={type:"edit",text:"Save Fee Group"})}var addProcess=function(postData){ItemService.feegroupinsert(postData).then(function(response){"success"===response.status&&(toastr.success("Add successfully","Success"),scope.modelObjectMap=angular.copy(FeeGroupModel),scope.isSubmit=!1,scope.on_success&&scope.on_success(response))})},editProcess=function(postData){postData.id;delete postData.id,ItemService.feegroupupdate(postData).then(function(response){"success"===response.status&&(toastr.success("Edit successfully","Success"),scope.isSubmit=!1,scope.on_success&&scope.on_success(response))})};scope.deleteFeeMapping=function(key){$modal.open({templateUrl:"deleteFeeMapping",controller:function($scope,$modalInstance,feeMapping,key){$scope.Ok=function(){for(keys in feeMapping)keys===key&&delete feeMapping[key];console.log(feeMapping,key),$modalInstance.close(feeMapping)},$scope.cancel=function(){$modalInstance.dismiss("cancel")}},resolve:{feeMapping:function(){return scope.feeMapping},key:function(){return key}}}).result.then(function(response){scope.feeMapping=response})},scope.addFeeMapping=function(){$modal.open({templateUrl:"addFeeMapping",controller:function($scope,$modalInstance,feeMapping){$scope.FeeMapping={FEE_TYPE_ORDER:"",col:"",uom:""},$scope.saveFeeMapping=function(){if($scope.isSubmitFee=!0,!$scope.FeeMappingForm.$invalid){var countkey=0,countcol=0,object={col:$scope.FeeMapping.col,uom:$scope.FeeMapping.uom};for(key in feeMapping)key===$scope.FeeMapping.FEE_TYPE_ORDER&&countkey++;for(key in feeMapping)feeMapping[key].col===$scope.FeeMapping.col&&countcol++;0===countkey?0===countcol?(feeMapping[$scope.FeeMapping.FEE_TYPE_ORDER]=object,$modalInstance.close(feeMapping)):toastr.error("Colum Index exits"):toastr.error("Fee Type Order exits")}},$scope.cancel=function(){$modalInstance.dismiss("cancel")}},resolve:{feeMapping:function(){return scope.feeMapping}}}).result.then(function(response){scope.feeMapping=response})},scope.editFeeMapping=function(key){$modal.open({templateUrl:"addFeeMapping",controller:function($scope,$modalInstance,feeMapping){var keyroot="",colroot="";for(keys in feeMapping)keys==key&&(keyroot=keys,colroot=feeMapping[keys].col,$scope.FeeMapping={FEE_TYPE_ORDER:keys,col:feeMapping[keys].col,uom:feeMapping[keys].uom});$scope.saveFeeMapping=function(){if($scope.isSubmitFee=!0,!$scope.FeeMappingForm.$invalid){var countkey=0,countcol=0,object={col:$scope.FeeMapping.col,uom:$scope.FeeMapping.uom};for(key in feeMapping)key===$scope.FeeMapping.FEE_TYPE_ORDER&&key!==keyroot&&countkey++;for(key in feeMapping)feeMapping[key].col===$scope.FeeMapping.col&&feeMapping[key].col!==colroot&&countcol++;console.log(countkey),0===countkey?0===countcol?(keyroot!==$scope.FeeMapping.FEE_TYPE_ORDER?(delete feeMapping[keyroot],feeMapping[$scope.FeeMapping.FEE_TYPE_ORDER]=object):feeMapping[$scope.FeeMapping.FEE_TYPE_ORDER]=object,$modalInstance.close(feeMapping)):toastr.error("Colum Index exits"):toastr.error("Fee Type Order exits")}},$scope.cancel=function(){$modalInstance.dismiss("cancel")}},resolve:{feeMapping:function(){return scope.feeMapping}}}).result.then(function(response){scope.feeMapping=response})},scope.clickAction=function(option){if("view"!=option.type&&(scope.isSubmit=!0,!scope.mainForm.$invalid)){scope.modelObjectMap.SOURCE_START_DATE=ConfigService.convertToDB(scope.modelObjectMap.SOURCE_START_DATE);var postData=angular.copy(scope.modelObjectMap),columnMapping={itemCode:scope.modelObjectMap.itemCode,feeMapping:scope.feeMapping};postData.COLUMN_MAPPING=columnMapping;for(var key in postData)postData[key]instanceof Date&&(postData[key]=ConfigService.getCommonDate(postData[key]));if("txt"!==postData.SOURCE_FILE_TYPE)for(key in postData)"COLUMN_MAPPING"===key&&delete postData[key];"add"==option.type?addProcess(postData):"edit"==option.type&&editProcess(postData)}}}}}),angular.module("app.loggedIn.item.feetype.detail.directive",[]).directive("feeTypeDetail",function(FeeTypesModel,ItemService,ConfigService,toastr){return{restrict:"EA",scope:{data:"@",options:"=",success:"=",on_success:"=onsuccess"},templateUrl:"modules/item/directives/templates/fee_type_detail.html",link:function(scope,element,attrs){console.log(scope.options),scope.groupOptions=scope.options.groupSelect.data.items;var loadData=function(id){ItemService.feetypedetail(id).then(function(data){angular.extend(scope.modelObjectMap,data.data),ConfigService.autoConvertData(scope.modelObjectMap)})};if(scope.modelObjectMap=angular.copy(FeeTypesModel),scope.mode={type:"add",text:"Add Fee Type"},console.log(scope.data),scope.data){var data=scope.$eval(scope.data);data.id&&(loadData(data.id),scope.mode={type:"edit",text:"Edit Fee Type"})}var addProcess=function(postData){ItemService.feetypeinsert(postData).then(function(response){"success"===response.status&&(toastr.success("Add successfully","Success"),scope.modelObjectMap=angular.copy(FeeTypesModel),scope.isSubmit=!1,scope.success=!0,console.log(scope.success),scope.on_success&&scope.on_success(response))})},editProcess=function(postData){postData.id;delete postData.id,ItemService.feetypeupdate(postData).then(function(response){"success"===response.status&&(toastr.success("Edit successfully","Success"),scope.isSubmit=!1,scope.success=!0,scope.on_success&&scope.on_success(response))})};scope.clickAction=function(option){if("view"!=option.type&&(scope.isSubmit=!0,!scope.mainForm.$invalid)){var postData=angular.copy(scope.modelObjectMap);for(var key in postData)postData[key]instanceof Date&&(postData[key]=ConfigService.getCommonDate(postData[key]));"add"==option.type?addProcess(postData):"edit"==option.type&&editProcess(postData)}}}}}),angular.module("app.loggedIn.item.showhistory.detail.directive",[]).directive("itemShowhistory",function(ConfigService,toastr,ItemService){return{restrict:"EA",scope:{id:"="},templateUrl:"modules/item/directives/templates/showhistory.html",link:function(scope,element,attrs){var loadData=function(id){var postData={id:id};ItemService.showHistory(postData).then(function(response){var now=moment();if("success"==data.status){for(var obj={},arr=data.data,i=0;i<arr.length;i++){var item=arr[i];obj[item.FEE_TYPE_ID]?obj[item.FEE_TYPE_ID].listFee.push({ITEM_FEE_ID:item.ITEM_FEE_ID,FEE_START_DATE:moment(item.FEE_START_DATE).format("DD-MM-YYYY"),FEE:item.FEE,FEE_STARTDATE:item.FEE_START_DATE,ISENABLE:item.ISENABLE}):(obj[item.FEE_TYPE_ID]={listFee:[],FEE_TYPE_NAME:item.FEE_TYPE_NAME,historyFee:""},obj[item.FEE_TYPE_ID].listFee.push({ITEM_FEE_ID:item.ITEM_FEE_ID,FEE_START_DATE:moment(item.FEE_START_DATE).format("DD-MM-YYYY"),FEE_STARTDATE:item.FEE_START_DATE,FEE:item.FEE,ISENABLE:item.ISENABLE}))}for(var key in obj)for(var count=0,countsame=0,i=0;i<obj[key].listFee.length;i++)moment(obj[key].listFee[i].FEE_STARTDATE).isBefore(now)&&0===count&&(obj[key].historyFee=obj[key].listFee[i].FEE,count=1),moment(obj[key].listFee[i].FEE_STARTDATE).isSame(now)&&0===countsame&&(obj[key].historyFee=obj[key].listFee[i].FEE,countsame=1);scope.obj=obj,exlog.log(obj)}})};loadData(scope.id),scope.colors=[{name:"white"},{name:"black"}],scope.myColor="white"}}}),angular.module("app.loggedIn.item.privatefunds.detail.directive",[]).directive("privateFundsDetail",function(PrivateFundsModel,ItemService,ConfigService,toastr){return{restrict:"EA",scope:{data:"@",options:"=",on_success:"=onsuccess"},templateUrl:"modules/item/directives/templates/private_fund_detail.html",link:function(scope,element,attrs){var loadData=function(id){ItemService.privatefundsdetail(id).then(function(data){angular.extend(scope.modelObjectMap,data.data),ConfigService.autoConvertData(scope.modelObjectMap),scope.AHSAorBUPA="1"===scope.modelObjectMap.isAHSA?0:1})};if(scope.modelObjectMap=angular.copy(PrivateFundsModel),scope.mode={type:"add",text:"Add Private Funds"},scope.data){var data=scope.$eval(scope.data);data.id&&(loadData(data.id),scope.mode={type:"edit",text:"Edit Private Funds"})}var addProcess=function(postData){ItemService.privatefundsinsert(postData).then(function(response){"success"===response.status&&(toastr.success("Add successfully","Success"),scope.modelObjectMap=angular.copy(PrivateFundsModel),scope.isSubmit=!1,scope.on_success&&scope.on_success(response))})},editProcess=function(postData){postData.id;delete postData.id,ItemService.privatefundsupdate(postData).then(function(response){"success"===response.status&&(toastr.success("Edit successfully","Success"),scope.isSubmit=!1,scope.on_success&&scope.on_success(response))})};scope.clickAction=function(option){if("view"!=option.type&&(scope.isSubmit=!0,!scope.mainForm.$invalid)){console.log(scope.AHSAorBUPA),"0"===scope.AHSAorBUPA?(scope.modelObjectMap.isAHSA=1,scope.modelObjectMap.isBUPA=0):(scope.modelObjectMap.isAHSA=0,scope.modelObjectMap.isBUPA=1);var postData=angular.copy(scope.modelObjectMap);for(var key in postData)postData[key]instanceof Date&&(postData[key]=ConfigService.getCommonDate(postData[key]));"add"==option.type?addProcess(postData):"edit"==option.type&&editProcess(postData)}}}}}),angular.module("app.loggedIn.item.controller",["app.loggedIn.item.list.controller","app.loggedIn.item.header.controller","app.loggedIn.item.fee.controller","app.loggedIn.item.fee.search.controller"]).controller("ItemController",function($scope,ConfigService){$scope.data_options={api:"api/erm/v2/items/search",method:"post",columns:[{field:"ITEM_ID",is_hide:!0},{field:"ITEM_CODE",label:"Item Code",width:"10%"},{field:"ITEM_NAME",label:"Item Name"},{field:"ITEM_TYPE",label:"Type",width:"15%"}],use_filters:!0,filters:{ITEM_CODE:{type:"text"},ITEM_NAME:{type:"text"},ITEM_TYPE:{type:"text"}}}}),angular.module("app.loggedIn.item.list.controller",[]).controller("ItemListController",function($scope,$state,toastr,ItemService,$modal){$scope.item_panel={},$scope.itemInfo={},$scope.items={select:0,"class":function(item){return{selected:item.ITEM_ID==$scope.items.select}},options:{api:"api/erm/v2/items/search",method:"post",scope:$scope.item_panel,columns:[{field:"ITEM_ID",is_hide:!0},{field:"ITEM_CODE",label:"Item Code",width:"10%"},{field:"ITEM_NAME",label:"Item Name"},{field:"ITEM_TYPE",label:"Type",width:"15%"},{field:"ISENABLE",label:"Enable",is_hide:!0}],use_filters:!0,filters:{ITEM_CODE:{type:"text"},ITEM_NAME:{type:"text"},ITEM_TYPE:{type:"text"}},use_actions:!0,actions:[{"class":"fa fa-info",title:"Info",callback:function(item){$scope.itemInfo.ITEM_ID=item.ITEM_ID;$modal.open({templateUrl:"showItemTemplate",controller:function($scope,$modalInstance,options,editForm,itemInfo){$scope.options=options,$scope.editForm=editForm,$scope.itemInfo=itemInfo},resolve:{options:function(){return $scope.options},editForm:function(){return $scope.editForm},itemInfo:function(){return $scope.itemInfo}},size:"lg"})}},{"class":"fa fa-money",title:"Fees",callback:function(item){$scope.items.select=item.ITEM_ID,$scope.itemFees.panel.reload(item.ITEM_ID),$scope.itemFees.open()}},{"class":"fa fa-history",title:"Show History",callback:function(item){$modal.open({templateUrl:"ShowHistory",controller:function($scope,$modalInstance,id){$scope.cancel=function(){$modalInstance.dismiss("cancel")},$scope.ShowHistory={success:!1,id:id},$scope.$watch("ShowHistory.success",function(success){success&&$modalInstance.close("success")})},resolve:{id:function(){return item.ITEM_CODE}}}).result.then(function(response){"success"===response&&$scope.fee_types_panel.reload()})}}]}},$scope.itemFees={is_show:!1,open:function(){this.is_show=!0,angular.element("#popupItemFee").modal("show")},close:function(){this.is_show=!1},panel:{}},$("#popupItemFee").on("hidden.bs.modal",function(e){$scope.itemFees.close()}),console.log("options.taxes",$scope.options),$scope.addForm={is_show:!1,open:function(){this.is_show=!0,angular.element("#popupAddItem").modal("show")},close:function(){this.is_show=!1},success:function(response){$scope.item_panel.reload()}},$("#popupAddItem").on("hidden.bs.modal",function(e){$scope.addForm.close()}),$scope.editForm={is_show:!1,open:function(){this.is_show=!0,angular.element("#popupEditItem").modal("show")},close:function(){this.is_show=!1},success:function(response){$scope.item_panel.reload()}},$("#popupEditItem").on("hidden.bs.modal",function(e){$scope.editForm.close()}),$scope.importItemsFromSource=function(){ItemService.insertFromSource().then(function(response){"success"==response.status&&toastr.success("Update successfully !!!")})}}),angular.module("app.loggedIn.item.header.controller",[]).controller("ItemHeaderController",function($scope,$filter,$state,toastr,ItemService){var arrGetBy=$filter("arrGetBy");$scope.header_color=function(item){return $scope.header_selected==item.POPULAR_HEADER_ID?"success":void 0},$scope.header_click=function(item){$scope.header_selected!=item.POPULAR_HEADER_ID&&($scope.header_selected=item.POPULAR_HEADER_ID,$scope.itemSearch.close(),$scope.showHeaderItem())},$scope.showHeaderItem=function(){$scope.selectList=[],$scope.item_panel.data.more_items=[],$scope.isShowHeaderItem=!0,$scope.item_options.search={POPULAR_HEADER_ID:$scope.header_selected},$scope.item_panel.reload()},$scope.itemHeaderClass=function(item){return item.just_add?"info":void 0},$scope.itemSearch={is_show:!1,open:function(){return 0==$scope.header_selected?void toastr.warning("Please select Header first","Warning"):void(this.is_show=!0)},close:function(){this.is_show=!1},save:function(){ItemService.saveHeaderItems($scope.header_selected,$scope.selectList).then(function(response){"success"===response.status&&(toastr.success("Save Successfully!!!","Success"),$scope.item_panel.reload())})}},$scope.headerAddForm={is_show:!1,open:function(){this.is_show=!0,$scope.itemSearch.close()},close:function(){this.is_show=!1},success:function(response){$scope.header_panel.data.items.unshift(response.data),$scope.headerAddForm.close(),$scope.header_click(response.data)}},$scope.success_add_header=function(response){console.log(response)},$scope.itemSearchClass=function(item){var t_item=arrGetBy($scope.item_panel.data.items,"ITEM_ID",item.ITEM_ID);if(t_item)return"success";var t_item=arrGetBy($scope.selectList,"ITEM_ID",item.ITEM_ID);return t_item?"info":void 0},$scope.itemSearchClick=function(item){var t_item=arrGetBy($scope.item_panel.data.items,"ITEM_ID",item.ITEM_ID);if(!t_item){var t_item=arrGetBy($scope.selectList,"ITEM_ID",item.ITEM_ID);t_item||($scope.selectList.push(item),item.just_add=!0,$scope.item_panel.data.more_items.push(item))}};var init=function(){$scope.item_panel={},$scope.header_panel={},$scope.header_options={api:"api/erm/v2/items/header_search",
method:"post",columns:[{field:"POPULAR_HEADER_ID",is_hide:!0},{field:"POPULAR_CODE",label:"Code",width:"10%"},{field:"POPULAR_NAME",label:"Name"},{field:"ISENABLE",label:"Is enable"}],scope:$scope.header_panel},$scope.item_options={api:"api/erm/v2/items/header_item",method:"post",columns:[{field:"ITEM_ID",is_hide:!0},{field:"ITEM_CODE",label:"Item Code",width:"20%"},{field:"ITEM_NAME",label:"Item Name"}],use_filters:!0,search:{POPULAR_HEADER_ID:0},not_load:!0,scope:$scope.item_panel,"static":!0},$scope.search_item_options={api:"api/erm/v2/items/search",method:"post",columns:[{field:"ITEM_ID",is_hide:!0},{field:"ITEM_CODE",label:"Code",width:"10%"},{field:"ITEM_NAME",label:"Item Name"},{field:"ITEM_TYPE",label:"Type",width:"15%"}],use_filters:!0,filters:{ITEM_CODE:{type:"text"},ITEM_NAME:{type:"text"},ITEM_TYPE:{type:"text"}}},$scope.header_selected=0,$scope.isShowSearchItem=!1,$scope.isShowHeaderItem=!1};init()}),angular.module("app.loggedIn.item.fee.controller",[]).controller("ItemFeeController",function($scope,$http,$state,$timeout,toastr,FileUploader,ItemService,$modal){$scope.fee_types_panel={},$scope.private_funds_panel={},$scope.fee_groups_panel={},$scope.feeGroup={},$scope.feeType={},$scope.pf={},$scope.fee_groups={select_item:{},options:{api:"api/erm/v2/fees/search_group_fees",scope:$scope.fee_groups_panel,not_paging:!0,method:"post",search:{},columns:[{field:"FEE_GROUP_ID",is_hide:!0},{field:"FEE_GROUP_NAME",label:"Group name"},{field:"FEE_GROUP_TYPE",label:"Code"},{field:"PRICE_SOURCE",label:"Price Source"},{field:"SOURCE_FILE_TYPE",label:"Source file type"},{field:"SOURCE_START_DATE",label:"Start date",type:"custom",fn:function(item){return item.SOURCE_START_DATE?moment(new Date(item.SOURCE_START_DATE)).format("DD-MM-YYYY"):null}},{field:"ISENABLE",label:"Is enable"}],use_actions:!0,actions:[{"class":"fa fa-pencil",title:"Edit",callback:function(item){console.log(item),$scope.feeGroup.id=item.FEE_GROUP_ID,$scope.editGroupFee()}},{"class":"fa fa-upload",title:"Upload Price Source",is_hide:function(item){return item.SOURCE_FILE_TYPE?!1:!0},callback:function(item){$scope.fee_groups.select_item=item,$scope.uploadSourceFileFee(item)}},{"class":"fa fa-check-circle",title:"Update Price Source",is_hide:function(item){return item.PRICE_SOURCE?!1:!0},callback:function(item){function chooseImportFunction(){return item.FEE_GROUP_TYPE==itemConst.feeGroupType.medicare.value?ItemService.importMedicareFeeFromSource({feeGroupId:item.FEE_GROUP_ID}):item.FEE_GROUP_TYPE==itemConst.feeGroupType.dva.value?ItemService.importDvaFeeFromSource({feeGroupId:item.FEE_GROUP_ID}):ItemService.importFeeFromTxtSource(item.FEE_GROUP_TYPE==itemConst.feeGroupType.private_fund.value?{feeGroupId:item.FEE_GROUP_ID}:{feeGroupId:item.FEE_GROUP_ID})}exlog.log(item),$scope.fee_groups.select_item=item,chooseImportFunction().then(function(data){"success"==data.status?toastr.success("Update fee success"):(toastr.error("Error when update fee.","Error"),exlog.logErr("Loi update fee tu file",err))},function(err){toastr.error("Error when update fee.","Error"),exlog.logErr("Loi update fee tu file",err)})}}]}},$scope.fee_types={select_item:{},options:{api:"api/erm/v2/fees/search_type_fees",method:"post",scope:$scope.fee_types_panel,not_paging:!0,columns:[{field:"FEE_TYPE_ID",is_hide:!0},{field:"FEE_TYPE_NAME",label:"Fund name"},{field:"FEE_GROUP_ID",label:"Group",type:"custom",fn:function(item){return null==item.feeGroup?"No Group":item.feeGroup.FEE_GROUP_NAME}},{field:"FEE_GROUP_ORDER",label:"Order"},{field:"ISENABLE",is_hide:!0}],use_actions:!0,action_show:function(item){return null==item.feeGroup?!0:""!=item.feeGroup.FEE_GROUP_TYPE?!0:!1},actions:[{"class":"fa fa-pencil",title:"Edit",callback:function(item){console.log(item),$scope.feeType.id=item.FEE_TYPE_ID,$scope.editTypeFormopen()}}]}},$scope.private_funds={options:{api:"api/erm/v2/fees/search_fund_fees",scope:$scope.private_funds_panel,not_paging:!0,method:"post",columns:[{field:"PF_id",is_hide:!0},{field:"Isenable",is_hide:!0},{field:"Fund_name",label:"Fund name"},{field:"isAHSA",label:"AHSA",type:"checkbox",disabled:!0},{field:"isBUPA",label:"BUPA",type:"checkbox",disabled:!0}],use_actions:!0,actions:[{"class":"fa fa-pencil",title:"Edit",callback:function(item){console.log(item),$scope.pf.id=item.PF_id,$scope.editPrivateFundsForm.open()}}]}},$scope.addGroupForm={is_show:!1,open:function(){this.is_show=!0},close:function(){this.is_show=!1},success:function(response){"success"==response.status&&$scope.fee_groups_panel.reload()}},$scope.editGroupForm={is_show:!1,open:function(){this.is_show=!0},close:function(){this.is_show=!1},success:function(response){"success"==response.status&&$scope.fee_groups_panel.reload(),$scope.fee_types_panel.reload()}},$scope.addTypeFormopen=function(){$modal.open({templateUrl:"addTypeForm",controller:function($scope,$modalInstance,options,addTypeForm){$scope.options=options,$scope.cancel=function(){$modalInstance.dismiss("cancel")},$scope.addTypeFormopen={success:!1},$scope.$watch("addTypeFormopen.success",function(success){success&&$modalInstance.close("success")})},resolve:{options:function(){return $scope.addTypeForm.options},addTypeForm:function(){return $scope.addTypeForm}}}).result.then(function(response){"success"===response&&$scope.fee_types_panel.reload()})},$scope.editTypeFormopen=function(){$modal.open({templateUrl:"editTypeForm",controller:function($scope,$modalInstance,options,editTypeForm,id){$scope.options=options,$scope.cancel=function(){$modalInstance.dismiss("cancel")},$scope.editTypeFormopen={id:id,success:!1},$scope.$watch("editTypeFormopen.success",function(success){success&&$modalInstance.close("success")})},resolve:{options:function(){return $scope.editTypeForm.options},editTypeForm:function(){return $scope.editTypeForm},id:function(){return $scope.feeType.id}}}).result.then(function(response){"success"===response&&$scope.fee_types_panel.reload()})},$scope.addTypeForm={options:{groupSelect:$scope.fee_groups_panel},is_show:!1,open:function(){this.is_show=!0},close:function(){this.is_show=!1},success:function(response){"success"==response.status&&$scope.fee_types_panel.reload()}},$scope.editTypeForm={options:{groupSelect:$scope.fee_groups_panel},is_show:!1,open:function(){this.is_show=!0},close:function(){this.is_show=!1},success:function(response){"success"==response.status&&$scope.fee_types_panel.reload()}},$scope.addPrivateFundsForm={is_show:!1,open:function(){this.is_show=!0},close:function(){this.is_show=!1},success:function(response){"success"==response.status&&$scope.private_funds_panel.reload()}},$scope.editPrivateFundsForm={is_show:!1,open:function(){this.is_show=!0},close:function(){this.is_show=!1},success:function(response){"success"==response.status&&$scope.private_funds_panel.reload()}},$scope.addGroupFee=function(){var fee_groups_panel=$scope.fee_groups_panel,modalInstance=$modal.open({templateUrl:"addGroupFeeTemplate",controller:function($scope,$modalInstance,options){$scope.options=options,$scope.cancel=function(){$modalInstance.dismiss("cancel")},$scope.onSuccess=function(response){"success"==response.status&&(fee_groups_panel.reload(),$modalInstance.close("success"))}},resolve:{options:function(){return $scope.options}}});modalInstance.result.then(function(data){exlog.log(data)},function(reason){exlog.log(reason)})},$scope.editGroupFee=function(){var fHeader="item->ItemFeeController->editGroupFee",fee_groups_panel=$scope.fee_groups_panel,fee_types_panel=$scope.fee_types_panel,modalInstance=$modal.open({templateUrl:"editGroupFeeTemplate",controller:function($scope,$modalInstance,options,feeGroup){$scope.options=options,$scope.feeGroup=feeGroup,$scope.onSuccess=function(response){"success"==response.status&&(fee_groups_panel.reload(),fee_types_panel.reload(),$modalInstance.close("success"))},$scope.cancel=function(){$modalInstance.dismiss("cancel")}},resolve:{options:function(){return $scope.options},feeGroup:function(){return $scope.feeGroup}}});modalInstance.result.then(function(data){exlog.log(fHeader,data)},function(reason){exlog.log(fHeader,reason)})},$scope.importMedicareFeeFromSource=function(){ItemService.importMedicareFeeFromSource({feeGroupId:4}).then(function(data){exlog.alert(data)},function(err){})},$scope.importFeeFromTxtSource=function(){ItemService.importFeeFromTxtSource({feeGroupId:18}).then(function(data){exlog.alert(data)},function(err){exlog.alert(err)})},$scope.importDvaFeeFromSource=function(){ItemService.importDvaFeeFromSource({feeGroupId:3}).then(function(data){exlog.alert(data)},function(err){exlog.alert(err)})},$scope.uploadSourceFileFee=function(feeGroup){$modal.open({templateUrl:"uploadFeeSourceTemplate",controller:function($scope,$modalInstance,feeGroup,fee_groups_panel){var uploader=$scope.uploader=new FileUploader({url:"api/erm/v2/fees/group/upload_source_file_fee",autoUpload:!0});uploader.filters.push({name:"checkFileType",fn:function(item){var name=item.name;return name.toLowerCase().indexOf(feeGroup.SOURCE_FILE_TYPE)>0}}),uploader.onWhenAddingFileFailed=function(item,filter,options){"checkFileType"==filter.name&&toastr.error("Source file type invalid","Error")},uploader.onCompleteItem=function(item,response,status,headers){return"success"!=response.status?void toastr.error("Upload fail !","error"):(toastr.success("Upload successfully !","Success"),void finishUploadFeeSourceFile())},uploader.url="api/erm/v2/fees/group/upload_source_file_fee",uploader.formData[0]={},uploader.formData[0].feeGroupId=feeGroup.FEE_GROUP_ID,$scope.cancel=function(){$modalInstance.dismiss("cancel")};var finishUploadFeeSourceFile=function(){$modalInstance.close("success"),fee_groups_panel.reload()}},resolve:{feeGroup:function(){return feeGroup},fee_groups_panel:function(){return $scope.fee_groups_panel}}})}}),angular.module("app.loggedIn.item.fee.search.controller",[]).controller("ItemFeeSearchController",function($scope,$state,toastr,ItemService){$scope.item_panel={},$scope.items={options:{api:"api/erm/v2/items/search_item_fees",method:"post",scope:$scope.item_panel,columns:[{field:"ITEM_ID",is_hide:!0},{field:"INV_GROUP",label:"Group"},{field:"ITEM_CODE",label:"Code"},{field:"ITEM_NAME",label:"Description"},{field:"ISENABLE",is_hide:!0}],use_filters:!0,filters:{INV_GROUP:{type:"text"},ITEM_CODE:{type:"text"},ITEM_NAME:{type:"text"}}}};var combine_item_fee=function(){var options=$scope.items.options;angular.forEach($scope.fee_list,function(fee,key){options.columns.push({field:"t"+fee.FEE_TYPE_ID,not_submit:!0,label:fee.FEE_TYPE_NAME,type:"custom",fn:function(item){if(!item.feeTypes||0==item.feeTypes.length)return"";for(var i=item.feeTypes.length-1;i>=0;i--){var fee_type=item.feeTypes[i];if(fee_type.FEE_TYPE_ID==fee.FEE_TYPE_ID)return fee_type.clnItemFee.SCHEDULE_FEE}return""}})})},init=function(){ItemService.all_fee_types().then(function(res){$scope.fee_list=res.list,combine_item_fee()})};init()});