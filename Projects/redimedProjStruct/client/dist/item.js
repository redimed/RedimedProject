var itemConst={feeGroupType:{privateFund:{value:"private_fund",display:"Private Fund"},medicare:{value:"medicare",display:"Medicare"},otherType:{value:"other_type",display:"Other Types"}}};angular.module("app.loggedIn.item",["app.loggedIn.item.controller","app.loggedIn.item.services","app.loggedIn.item.directives"]).config(function($stateProvider){$stateProvider.state("loggedIn.item",{"abstract":!0,templateUrl:"modules/item/views/structure.html",controller:"ItemController"}).state("loggedIn.item.list",{url:"/item/list",views:{"main-content":{templateUrl:"modules/item/views/list.html",controller:"ItemListController"}}}).state("loggedIn.item.fee",{url:"/item/fee",views:{"main-content":{templateUrl:"modules/item/views/fee.html",controller:"ItemFeeController"}}}).state("loggedIn.item.fee.search",{url:"/search",views:{"main-content@loggedIn.item":{templateUrl:"modules/item/views/fee_search.html",controller:"ItemFeeSearchController"}}}).state("loggedIn.item.header",{url:"/item/header",views:{"main-content":{templateUrl:"modules/item/views/header.html",controller:"ItemHeaderController"}}})}),angular.module("app.loggedIn.item.services",[]).factory("ItemService",function(Restangular){var instanceService={},appApi=Restangular.all("api/erm");return instanceService.saveHeaderItems=function(header_id,item_list){for(var list=[],i=item_list.length-1;i>=0;i--)list.push(item_list[i].ITEM_ID);var data={header_id:header_id,items:list},detailApi=appApi.all("v2/items/insert_header_items");return detailApi.post(data)},instanceService.insertHeader=function(data){var detailApi=appApi.all("v2/items/insert_header");return detailApi.post(data)},instanceService.insert=function(data){var detailApi=appApi.all("v2/items/insert");return detailApi.post(data)},instanceService.insertFromSource=function(){var detailApi=appApi.all("v2/items/insert_from_source");return detailApi.post(data)},instanceService.detail=function(item_id){var detailApi=appApi.all("v2/items/detail");return detailApi.post({ITEM_ID:item_id})},instanceService.update=function(ITEM_ID,data){var detailApi=appApi.all("v2/items/update");return detailApi.post(data)},instanceService.getItemFees=function(item_id){var detailApi=appApi.one("v2/fees/get_item_fees");return detailApi.get({item_id:item_id})},instanceService.insertItemFees=function(item_id,fee_list){var list=[];console.log(fee_list);for(var i=fee_list.length-1;i>=0;i--)void 0!==fee_list[i].SCHEDULE_FEE&&list.push(fee_list[i]);var data={item_id:item_id,fees:list},detailApi=appApi.all("v2/fees/insert_item_fees");return detailApi.post(data)},instanceService.insertItemFundFees=function(item_id,fee_list){for(var list=[],i=fee_list.length-1;i>=0;i--)(void 0!==fee_list[i].FEE||void 0!==fee_list[i].PERCENT_FEE)&&list.push(fee_list[i]);var data={item_id:item_id,fees:list},detailApi=appApi.all("v2/fees/insert_item_fund_fees");return detailApi.post(data)},instanceService.updateTypePriceSource=function(type_id){var detailApi=appApi.all("v2/fees/update_type_price_source");return detailApi.post({FEE_TYPE_ID:type_id})},instanceService.updateGroupPriceSource=function(group_id){var detailApi=appApi.all("v2/fees/update_group_price_source");return detailApi.post({FEE_GROUP_ID:group_id})},instanceService.feegroupinsert=function(data){var detailApi=appApi.all("v2/fees/group/insert");return detailApi.post(data)},instanceService.feegroupdetail=function(group_id){console.log(group_id);var detailApi=appApi.all("v2/fees/group/detail");return detailApi.post({FEE_GROUP_ID:group_id})},instanceService.feegroupupdate=function(data){var detailApi=appApi.all("v2/fees/group/update");return detailApi.post(data)},instanceService.feetypeinsert=function(data){var detailApi=appApi.all("v2/fees/type/insert");return detailApi.post(data)},instanceService.feetypedetail=function(type_id){var detailApi=appApi.all("v2/fees/type/detail");return detailApi.post({FEE_TYPE_ID:type_id})},instanceService.feetypeupdate=function(data){var detailApi=appApi.all("v2/fees/type/update");return detailApi.post(data)},instanceService.privatefundsinsert=function(data){var detailApi=appApi.all("v2/fees/funds/insert");return detailApi.post(data)},instanceService.privatefundsdetail=function(pf_id){var detailApi=appApi.all("v2/fees/funds/detail");return detailApi.post({PF_id:pf_id})},instanceService.privatefundsupdate=function(data){var detailApi=appApi.all("v2/fees/funds/update");return detailApi.post(data)},instanceService.all_fee_types=function(){var detailApi=appApi.all("v2/fees/search_type_fees");return detailApi.post()},instanceService.importItemFromXML=function(){var detailApi=appApi.all("v2/items/import_from_source");return detailApi.post()},instanceService}),angular.module("app.loggedIn.item.directives",["app.loggedIn.item.detail.directive","app.loggedIn.item.search.directive","app.loggedIn.item.header_detail.directive","app.loggedIn.item.item_fees.directive","app.loggedIn.item.feegroup.detail.directive","app.loggedIn.item.feetype.detail.directive","app.loggedIn.item.privatefunds.detail.directive"]),angular.module("app.loggedIn.item.detail.directive",[]).directive("itemDetail",function(ItemModel,ItemService,ConfigService,toastr,$timeout){return{restrict:"EA",scope:{data:"@",options:"=",on_success:"=onsuccess"},templateUrl:"modules/item/directives/templates/detail.html",controller:function($scope){$scope.fee_panel={},$scope.loadData=function(id){$scope.id=id,ItemService.detail(id).then(function(data){angular.extend($scope.modelObjectMap,data.data),ConfigService.autoConvertData($scope.modelObjectMap),$scope.fee_panel.reload(id)})}},link:function(scope,element,attrs){if(scope.modelObjectMap=angular.copy(ItemModel),scope.mode={type:"add",text:"Add Item"},scope.data){var data=scope.$eval(scope.data);data.id&&(scope.loadData(data.id),scope.mode={type:"edit",text:"Edit Item"})}var addProcess=function(postData){console.log(postData),ItemService.insert(postData).then(function(response){"success"===response.status&&(toastr.success("Added a new Item","Success"),scope.isSubmit=!1,scope.modelObjectMap=angular.copy(response.data),scope.mode={type:"edit",text:"Edit Item"},scope.fee_panel.reload(scope.modelObjectMap.ITEM_ID))},function(error){toastr.error("Fail to add a new Item","Error")})},editProcess=function(postData){var id=postData.id;delete postData.id,ItemService.update(id,postData).then(function(response){"success"===response.status&&(toastr.success("Edit Item Successfully","Success"),scope.isSubmit=!1,scope.on_success&&scope.on_success(response))})};scope.clickAction=function(option){if("view"!=option.type&&(scope.isSubmit=!0,!scope.mainForm.$invalid)){var postData=angular.copy(scope.modelObjectMap);for(var key in postData)postData[key]instanceof Date&&(postData[key]=ConfigService.getCommonDate(postData[key]));"add"==option.type?addProcess(postData):"edit"==option.type&&editProcess(postData)}}}}}),angular.module("app.loggedIn.item.search.directive",[]).directive("itemSearch",function(ItemModel,ItemService,ConfigService,toastr){}),angular.module("app.loggedIn.item.item_fees.directive",[]).directive("itemFees",function(ItemService,ConfigService,toastr){return{restrict:"EA",scope:{item_id:"=id",onsuccess:"=",panel:"="},templateUrl:"modules/item/directives/templates/item_fees.html",controller:function($scope){$scope.panel_types={},$scope.panel_funds={},$scope.private_funds={save:function(){var item_id=$scope.item_id;ItemService.insertItemFundFees(item_id,$scope.panel_funds.data.items).then(function(response){"success"==response.status&&toastr.success("Save successfully !!!","Success")})},options:{not_paging:!0,not_load:!0,scope:$scope.panel_funds,method:"post",api:"api/erm/v2/fees/get_item_fund_fees",columns:[{field:"PF_id",is_hide:!0},{field:"isAHSA",label:"AHSA",type:"checkbox",disabled:!0},{field:"isBUPA",label:"BUPA",type:"checkbox",disabled:!0},{field:"Fund_name",label:"Fund"},{field:"FEE",label:"Fee($)",type:"number"},{field:"PERCENT_FEE",label:"% Fee",type:"number"}],search:{item_id:$scope.item_id}}},$scope.fee_types={save:function(){var item_id=$scope.item_id;ItemService.insertItemFees(item_id,$scope.panel_types.data.items).then(function(response){"success"==response.status&&toastr.success("Save successfully !!!","Success")})},options:{not_paging:!0,not_load:!0,scope:$scope.panel_types,method:"post",api:"api/erm/v2/fees/get_item_fees",columns:[{db_field:"cln_fee_types.FEE_TYPE_ID",field:"FEE_TYPE_ID",is_hide:!0},{field:"FEE_TYPE_NAME",label:"Type"},{field:"SCHEDULE_FEE",label:"Fee",type:"number",disabled:!1}],search:{item_id:$scope.item_id}}},$scope.reload=function(item_id){$scope.item_id=item_id,$scope.panel_types.options.search.item_id=$scope.item_id,$scope.panel_types.reload(),$scope.panel_funds.options.search.item_id=$scope.item_id,$scope.panel_funds.reload()},console.log($scope.panel,$scope.item_id),$scope.panel&&angular.extend($scope.panel,$scope),console.log($scope.panel)}}}),angular.module("app.loggedIn.item.header_detail.directive",[]).directive("itemHeaderDetail",function(ItemHeaderModel,ItemService,ConfigService,toastr){return{restrict:"EA",scope:{data:"@",onsuccess:"=onsuccess"},templateUrl:"modules/item/directives/templates/header_detail.html",link:function(scope,element,attrs){var loadData=function(id){ItemService.detailHeader(id).then(function(data){angular.extend(scope.modelObjectMap,data.row),ConfigService.autoConvertData(scope.modelObjectMap)})};if(scope.modelObjectMap=angular.copy(ItemHeaderModel),scope.mode={type:"add",text:"Add Popular"},scope.data){var data=scope.$eval(scope.data);data.id&&(loadData(data.id),scope.mode={type:"edit",text:"Edit Item"})}var addProcess=function(postData){console.log(postData),ItemService.insertHeader(postData).then(function(response){console.log(response),"success"===response.status&&(toastr.success("Added a Popular","Success"),scope.modelObjectMap=angular.copy(ItemHeaderModel),scope.isSubmit=!1,scope.onsuccess&&(console.log(scope.onsuccess),scope.onsuccess(response)))})},editProcess=function(postData){var id=postData.id;delete postData.id,ItemService.update(id,postData).then(function(response){"success"===response.status&&(toastr.success("Edit Item Successfully","Success"),scope.isSubmit=!1,scope.onsuccess&&scope.onsuccess(response))})};scope.clickAction=function(option){if("view"!=option.type&&(scope.isSubmit=!0,!scope.mainForm.$invalid)){var postData=angular.copy(scope.modelObjectMap);for(var key in postData)postData[key]instanceof Date&&(postData[key]=ConfigService.getCommonDate(postData[key]));"add"==option.type?addProcess(postData):"edit"==option.type&&editProcess(postData)}}}}}),angular.module("app.loggedIn.item.feegroup.detail.directive",[]).directive("feeGroupDetail",function(FeeGroupModel,ItemService,ConfigService,toastr){return{restrict:"EA",scope:{data:"@",options:"=",on_success:"=onsuccess"},templateUrl:"modules/item/directives/templates/fee_group_detail.html",link:function(scope,element,attrs){scope.feeGroupType=itemConst.feeGroupType;var loadData=function(id){ItemService.feegroupdetail(id).then(function(data){angular.extend(scope.modelObjectMap,data.data),ConfigService.autoConvertData(scope.modelObjectMap)})};if(scope.modelObjectMap=angular.copy(FeeGroupModel),scope.mode={type:"add",text:"Add Fee Group"},scope.data){var data=scope.$eval(scope.data);data.id&&(loadData(data.id),scope.mode={type:"edit",text:"Edit Fee Group"})}var addProcess=function(postData){ItemService.feegroupinsert(postData).then(function(response){"success"===response.status&&(toastr.success("Add successfully","Success"),scope.modelObjectMap=angular.copy(FeeGroupModel),scope.isSubmit=!1,scope.on_success&&scope.on_success(response))})},editProcess=function(postData){postData.id;delete postData.id,ItemService.feegroupupdate(postData).then(function(response){"success"===response.status&&(toastr.success("Edit successfully","Success"),scope.isSubmit=!1,scope.on_success&&scope.on_success(response))})};scope.clickAction=function(option){if("view"!=option.type&&(scope.isSubmit=!0,!scope.mainForm.$invalid)){var postData=angular.copy(scope.modelObjectMap);for(var key in postData)postData[key]instanceof Date&&(postData[key]=ConfigService.getCommonDate(postData[key]));"add"==option.type?addProcess(postData):"edit"==option.type&&editProcess(postData)}}}}}),angular.module("app.loggedIn.item.feetype.detail.directive",[]).directive("feeTypeDetail",function(FeeTypesModel,ItemService,ConfigService,toastr){return{restrict:"EA",scope:{data:"@",options:"=",on_success:"=onsuccess"},templateUrl:"modules/item/directives/templates/fee_type_detail.html",link:function(scope,element,attrs){scope.groupOptions=scope.options.groupSelect.data.items;var loadData=function(id){ItemService.feetypedetail(id).then(function(data){angular.extend(scope.modelObjectMap,data.data),ConfigService.autoConvertData(scope.modelObjectMap)})};if(scope.modelObjectMap=angular.copy(FeeTypesModel),scope.mode={type:"add",text:"Add Fee Type"},scope.data){var data=scope.$eval(scope.data);data.id&&(loadData(data.id),scope.mode={type:"edit",text:"Edit Fee Type"})}var addProcess=function(postData){ItemService.feetypeinsert(postData).then(function(response){"success"===response.status&&(toastr.success("Add successfully","Success"),scope.modelObjectMap=angular.copy(FeeTypesModel),scope.isSubmit=!1,scope.on_success&&scope.on_success(response))})},editProcess=function(postData){postData.id;delete postData.id,ItemService.feetypeupdate(postData).then(function(response){"success"===response.status&&(toastr.success("Edit successfully","Success"),scope.isSubmit=!1,scope.on_success&&scope.on_success(response))})};scope.clickAction=function(option){if("view"!=option.type&&(scope.isSubmit=!0,!scope.mainForm.$invalid)){var postData=angular.copy(scope.modelObjectMap);for(var key in postData)postData[key]instanceof Date&&(postData[key]=ConfigService.getCommonDate(postData[key]));"add"==option.type?addProcess(postData):"edit"==option.type&&editProcess(postData)}}}}}),angular.module("app.loggedIn.item.privatefunds.detail.directive",[]).directive("privateFundsDetail",function(PrivateFundsModel,ItemService,ConfigService,toastr){return{restrict:"EA",scope:{data:"@",options:"=",on_success:"=onsuccess"},templateUrl:"modules/item/directives/templates/private_fund_detail.html",link:function(scope,element,attrs){var loadData=function(id){ItemService.privatefundsdetail(id).then(function(data){angular.extend(scope.modelObjectMap,data.data),ConfigService.autoConvertData(scope.modelObjectMap),scope.AHSAorBUPA="1"===scope.modelObjectMap.isAHSA?0:1})};if(scope.modelObjectMap=angular.copy(PrivateFundsModel),scope.mode={type:"add",text:"Add Private Funds"},scope.data){var data=scope.$eval(scope.data);data.id&&(loadData(data.id),scope.mode={type:"edit",text:"Edit Private Funds"})}var addProcess=function(postData){ItemService.privatefundsinsert(postData).then(function(response){"success"===response.status&&(toastr.success("Add successfully","Success"),scope.modelObjectMap=angular.copy(PrivateFundsModel),scope.isSubmit=!1,scope.on_success&&scope.on_success(response))})},editProcess=function(postData){postData.id;delete postData.id,ItemService.privatefundsupdate(postData).then(function(response){"success"===response.status&&(toastr.success("Edit successfully","Success"),scope.isSubmit=!1,scope.on_success&&scope.on_success(response))})};scope.clickAction=function(option){if("view"!=option.type&&(scope.isSubmit=!0,!scope.mainForm.$invalid)){console.log(scope.AHSAorBUPA),"0"===scope.AHSAorBUPA?(scope.modelObjectMap.isAHSA=1,scope.modelObjectMap.isBUPA=0):(scope.modelObjectMap.isAHSA=0,scope.modelObjectMap.isBUPA=1);var postData=angular.copy(scope.modelObjectMap);for(var key in postData)postData[key]instanceof Date&&(postData[key]=ConfigService.getCommonDate(postData[key]));"add"==option.type?addProcess(postData):"edit"==option.type&&editProcess(postData)}}}}}),angular.module("app.loggedIn.item.controller",["app.loggedIn.item.list.controller","app.loggedIn.item.header.controller","app.loggedIn.item.fee.controller","app.loggedIn.item.fee.search.controller"]).controller("ItemController",function($scope,ConfigService){$scope.data_options={api:"api/erm/v2/items/search",method:"post",columns:[{field:"ITEM_ID",is_hide:!0},{field:"ITEM_CODE",label:"Item Code",width:"10%"},{field:"ITEM_NAME",label:"Item Name"},{field:"ITEM_TYPE",label:"Type",width:"15%"}],use_filters:!0,filters:{ITEM_CODE:{type:"text"},ITEM_NAME:{type:"text"},ITEM_TYPE:{type:"text"}}}}),angular.module("app.loggedIn.item.list.controller",[]).controller("ItemListController",function($scope,$state,toastr,ItemService){$scope.item_panel={},$scope.itemInfo={},$scope.items={select:0,"class":function(item){return{selected:item.ITEM_ID==$scope.items.select}},options:{api:"api/erm/v2/items/search",method:"post",scope:$scope.item_panel,columns:[{field:"ITEM_ID",is_hide:!0},{field:"ITEM_CODE",label:"Item Code",width:"10%"},{field:"ITEM_NAME",label:"Item Name"},{field:"ITEM_TYPE",label:"Type",width:"15%"},{field:"ISENABLE",label:"Enable",is_hide:!0}],use_filters:!0,filters:{ITEM_CODE:{type:"text"},ITEM_NAME:{type:"text"},ITEM_TYPE:{type:"text"}},use_actions:!0,actions:[{"class":"fa fa-info",title:"Info",callback:function(item){console.log(item),$scope.itemInfo.ITEM_ID=item.ITEM_ID,$scope.editForm.open()}},{"class":"fa fa-money",title:"Fees",callback:function(item){$scope.items.select=item.ITEM_ID,$scope.itemFees.panel.reload(item.ITEM_ID),$scope.itemFees.open()}}]}},$scope.itemFees={is_show:!1,open:function(){this.is_show=!0,angular.element("#popupItemFee").modal("show")},close:function(){this.is_show=!1},panel:{}},$("#popupItemFee").on("hidden.bs.modal",function(e){$scope.itemFees.close()}),$scope.addForm={is_show:!1,open:function(){this.is_show=!0,angular.element("#popupAddItem").modal("show")},close:function(){this.is_show=!1},success:function(response){$scope.item_panel.reload()}},$("#popupAddItem").on("hidden.bs.modal",function(e){$scope.addForm.close()}),$scope.editForm={is_show:!1,open:function(){this.is_show=!0,angular.element("#popupEditItem").modal("show")},close:function(){this.is_show=!1},success:function(response){$scope.item_panel.reload()}},$("#popupEditItem").on("hidden.bs.modal",function(e){$scope.editForm.close()}),$scope.importItemsFromSource=function(){ItemService.insertFromSource().then(function(response){"success"==response.status&&toastr.success("Update successfully !!!")})}}),angular.module("app.loggedIn.item.header.controller",[]).controller("ItemHeaderController",function($scope,$filter,$state,toastr,ItemService){var arrGetBy=$filter("arrGetBy");$scope.header_color=function(item){return $scope.header_selected==item.POPULAR_HEADER_ID?"success":void 0},$scope.header_click=function(item){$scope.header_selected!=item.POPULAR_HEADER_ID&&($scope.header_selected=item.POPULAR_HEADER_ID,$scope.itemSearch.close(),$scope.showHeaderItem())},$scope.showHeaderItem=function(){$scope.selectList=[],$scope.item_panel.data.more_items=[],$scope.isShowHeaderItem=!0,$scope.item_options.search={POPULAR_HEADER_ID:$scope.header_selected},$scope.item_panel.reload()},$scope.itemHeaderClass=function(item){return item.just_add?"info":void 0},$scope.itemSearch={is_show:!1,open:function(){return 0==$scope.header_selected?void toastr.warning("Please select Header first","Warning"):void(this.is_show=!0)},close:function(){this.is_show=!1},save:function(){ItemService.saveHeaderItems($scope.header_selected,$scope.selectList).then(function(response){"success"===response.status&&(toastr.success("Save Successfully!!!","Success"),$scope.item_panel.reload())})}},$scope.headerAddForm={is_show:!1,open:function(){this.is_show=!0,$scope.itemSearch.close()},close:function(){this.is_show=!1},success:function(response){$scope.header_panel.data.items.unshift(response.data),$scope.headerAddForm.close(),$scope.header_click(response.data)}},$scope.success_add_header=function(response){console.log(response)},$scope.itemSearchClass=function(item){var t_item=arrGetBy($scope.item_panel.data.items,"ITEM_ID",item.ITEM_ID);if(t_item)return"success";var t_item=arrGetBy($scope.selectList,"ITEM_ID",item.ITEM_ID);return t_item?"info":void 0},$scope.itemSearchClick=function(item){var t_item=arrGetBy($scope.item_panel.data.items,"ITEM_ID",item.ITEM_ID);if(!t_item){var t_item=arrGetBy($scope.selectList,"ITEM_ID",item.ITEM_ID);t_item||($scope.selectList.push(item),item.just_add=!0,$scope.item_panel.data.more_items.push(item))}};var init=function(){$scope.item_panel={},$scope.header_panel={},$scope.header_options={api:"api/erm/v2/items/header_search",method:"post",columns:[{field:"POPULAR_HEADER_ID",is_hide:!0},{field:"POPULAR_CODE",label:"Code",width:"10%"},{field:"POPULAR_NAME",label:"Name"},{field:"ISENABLE",label:"Is enable"}],scope:$scope.header_panel},$scope.item_options={api:"api/erm/v2/items/header_item",method:"post",columns:[{field:"ITEM_ID",is_hide:!0},{field:"ITEM_CODE",label:"Item Code",width:"20%"},{field:"ITEM_NAME",label:"Item Name"}],use_filters:!0,search:{POPULAR_HEADER_ID:0},not_load:!0,scope:$scope.item_panel,"static":!0},$scope.search_item_options={api:"api/erm/v2/items/search",method:"post",columns:[{field:"ITEM_ID",is_hide:!0},{field:"ITEM_CODE",label:"Code",width:"10%"},{field:"ITEM_NAME",label:"Item Name"},{field:"ITEM_TYPE",label:"Type",width:"15%"}],use_filters:!0,filters:{ITEM_CODE:{type:"text"},ITEM_NAME:{type:"text"},ITEM_TYPE:{type:"text"}}},$scope.header_selected=0,$scope.isShowSearchItem=!1,$scope.isShowHeaderItem=!1};init()}),angular.module("app.loggedIn.item.fee.controller",[]).controller("ItemFeeController",function($scope,$state,$timeout,toastr,FileUploader,ItemService,$modal){$scope.fee_types_panel={},$scope.private_funds_panel={},$scope.fee_groups_panel={},$scope.feeGroup={},$scope.feeType={},$scope.pf={};var uploader=$scope.uploader=new FileUploader({url:"api/erm/v2/fees/upload",autoUpload:!0,removeAfterUpload:!0});uploader.isUploadOnGroup=function(){return"api/erm/v2/fees/upload_group_price_source"==uploader.url},uploader.filters.push({name:"checkTail",fn:function(item){var name=item.name;return name.toLowerCase().indexOf(".txt")>0||name.indexOf(".xml")>0}}),uploader.filters.push({name:"checkGroup",fn:function(item){var name=item.name;return uploader.isUploadOnGroup()&&"item_fee_type"==$scope.fee_groups.select_item.FEE_GROUP_TYPE?name.toLowerCase().indexOf(".xml")>0:name.toLowerCase().indexOf(".txt")>0}}),uploader.onWhenAddingFileFailed=function(item,filter,options){console.log(filter),"checkTail"==filter.name?toastr.error("File invalid","Error"):"checkGroup"==filter.name&&toastr.error("Group file invalid","Error")},uploader.onCompleteItem=function(item,response,status,headers){if("success"!=response.status)return void toastr.error("Upload fail !","error");toastr.success("Upload successfully !","Success");var pricesource=response.filename;if(uploader.isUploadOnGroup())var group_id=$scope.fee_groups.select_item.FEE_GROUP_ID;else{if(!$scope.fee_types.select_item.FEE_GROUP_ID)return void($scope.fee_types.select_item.PRICE_SOURCE=pricesource);var group_id=$scope.fee_types.select_item.FEE_GROUP_ID}angular.forEach($scope.fee_groups_panel.data.items,function(value,key){value.FEE_GROUP_ID==group_id&&(value.PRICE_SOURCE=pricesource)}),angular.forEach($scope.fee_types_panel.data.items,function(value,key){value.FEE_GROUP_ID==group_id&&(value.PRICE_SOURCE=pricesource)})},$scope.fee_groups={select_item:{},options:{api:"api/erm/v2/fees/search_group_fees",scope:$scope.fee_groups_panel,not_paging:!0,method:"post",columns:[{field:"FEE_GROUP_ID",is_hide:!0},{field:"FEE_GROUP_NAME",label:"Group name"},{field:"FEE_GROUP_TYPE",label:"Type"},{field:"PRICE_SOURCE",label:"Price Source"}],use_actions:!0,actions:[{"class":"fa fa-pencil",title:"Edit",callback:function(item){console.log(item),$scope.feeGroup.id=item.FEE_GROUP_ID,$scope.editGroupForm.open()}},{"class":"fa fa-upload",title:"Upload Price Source",callback:function(item){console.log(item),$scope.fee_groups.select_item=item,uploader.url="api/erm/v2/fees/upload_group_price_source",uploader.formData[0]={},uploader.formData[0].FEE_GROUP_ID=item.FEE_GROUP_ID,$timeout(function(){$("#fee_type_upload").click()},100)}},{"class":"fa fa-check-circle",title:"Update Price Source",callback:function(item){return item.PRICE_SOURCE?"item_fee_type"==item.FEE_GROUP_TYPE?void ItemService.importItemFromXML().then(function(response){console.log(response),"success"==response.status&&toastr.success("Upload successfully !","Success")}):($scope.fee_groups.select_item=item,void ItemService.updateGroupPriceSource(item.FEE_GROUP_ID).then(function(response){console.log(response),"success"==response.status&&toastr.success("Upload successfully !","Success")})):void toastr.warning("Needed a price source","Warning")}}]}},$scope.fee_types={select_item:{},options:{api:"api/erm/v2/fees/search_type_fees",method:"post",scope:$scope.fee_types_panel,not_paging:!0,columns:[{field:"FEE_TYPE_ID",is_hide:!0},{field:"FEE_TYPE_NAME",label:"Fund name"},{field:"PRICE_SOURCE",label:"Price Source"},{field:"FEE_GROUP_ID",label:"Group",type:"custom",fn:function(item){return null==item.feeGroup?"No Group":item.feeGroup.FEE_GROUP_NAME}},{field:"FEE_GROUP_ORDER",label:"Order"},{field:"ISENABLE",is_hide:!0}],use_actions:!0,action_show:function(item){return null==item.feeGroup?!0:"item_fee_type"!=item.feeGroup.FEE_GROUP_TYPE?!0:!1},actions:[{"class":"fa fa-pencil",title:"Edit",callback:function(item){console.log(item),$scope.feeType.id=item.FEE_TYPE_ID,$scope.editTypeForm.open()}},{"class":"fa fa-upload",title:"Upload Price Source",callback:function(item){$scope.fee_types.select_item=item,uploader.url="api/erm/v2/fees/upload_type_price_source",uploader.formData[0]={},uploader.formData[0].FEE_TYPE_ID=item.FEE_TYPE_ID,$timeout(function(){$("#fee_type_upload").click()},100)}},{"class":"fa fa-check-circle",title:"Update Price Source",callback:function(item){return item.PRICE_SOURCE?($scope.fee_types.select_item=item,void ItemService.updateTypePriceSource(item.FEE_TYPE_ID).then(function(response){"success"==response.status&&toastr.success("Upload successfully !","Success")})):void toastr.warning("Needed a price source","Warning")}}]}},$scope.private_funds={options:{api:"api/erm/v2/fees/search_fund_fees",scope:$scope.private_funds_panel,not_paging:!0,method:"post",columns:[{field:"PF_id",is_hide:!0},{field:"Isenable",is_hide:!0},{field:"Fund_name",label:"Fund name"},{field:"isAHSA",label:"AHSA",type:"checkbox",disabled:!0},{field:"isBUPA",label:"BUPA",type:"checkbox",disabled:!0}],use_actions:!0,actions:[{"class":"fa fa-pencil",title:"Edit",callback:function(item){console.log(item),$scope.pf.id=item.PF_id,$scope.editPrivateFundsForm.open()}}]}},$scope.addGroupForm={is_show:!1,open:function(){this.is_show=!0},close:function(){this.is_show=!1},success:function(response){"success"==response.status&&$scope.fee_groups_panel.reload()}},$scope.editGroupForm={is_show:!1,open:function(){this.is_show=!0},close:function(){this.is_show=!1},success:function(response){"success"==response.status&&$scope.fee_groups_panel.reload(),$scope.fee_types_panel.reload()}},$scope.addTypeForm={options:{groupSelect:$scope.fee_groups_panel},is_show:!1,open:function(){this.is_show=!0},close:function(){this.is_show=!1},success:function(response){"success"==response.status&&$scope.fee_types_panel.reload()}},$scope.editTypeForm={options:{groupSelect:$scope.fee_groups_panel},is_show:!1,open:function(){this.is_show=!0},close:function(){this.is_show=!1},success:function(response){"success"==response.status&&$scope.fee_types_panel.reload()}},$scope.addPrivateFundsForm={is_show:!1,open:function(){this.is_show=!0},close:function(){this.is_show=!1},success:function(response){"success"==response.status&&$scope.private_funds_panel.reload()}},$scope.editPrivateFundsForm={is_show:!1,open:function(){this.is_show=!0},close:function(){this.is_show=!1},success:function(response){"success"==response.status&&$scope.private_funds_panel.reload()}},$scope.addGroupFee=function(){var modalInstance=$modal.open({templateUrl:"addGroupFeeTemplate",controller:function($scope,$modalInstance,options,addGroupForm){$scope.options=options,$scope.addGroupForm=addGroupForm,$scope.cancel=function(){$modalInstance.dismiss("cancel")}},resolve:{options:$scope.options,addGroupForm:$scope.addGroupForm}});modalInstance.result.then(function(data){},function(reason){exlog.log(reason)})}}),angular.module("app.loggedIn.item.fee.search.controller",[]).controller("ItemFeeSearchController",function($scope,$state,toastr,ItemService){$scope.item_panel={},$scope.items={options:{api:"api/erm/v2/items/search_item_fees",method:"post",scope:$scope.item_panel,columns:[{field:"ITEM_ID",is_hide:!0},{field:"INV_GROUP",label:"Group"},{field:"ITEM_CODE",label:"Code"},{field:"ITEM_NAME",label:"Description"},{field:"ISENABLE",is_hide:!0}],use_filters:!0,filters:{INV_GROUP:{type:"text"},ITEM_CODE:{type:"text"},ITEM_NAME:{type:"text"}}}};var combine_item_fee=function(){var options=$scope.items.options;angular.forEach($scope.fee_list,function(fee,key){options.columns.push({field:"t"+fee.FEE_TYPE_ID,not_submit:!0,label:fee.FEE_TYPE_NAME,type:"custom",fn:function(item){if(!item.feeTypes||0==item.feeTypes.length)return"";for(var i=item.feeTypes.length-1;i>=0;i--){var fee_type=item.feeTypes[i];if(fee_type.FEE_TYPE_ID==fee.FEE_TYPE_ID)return fee_type.clnItemFee.SCHEDULE_FEE}return""}})})},init=function(){ItemService.all_fee_types().then(function(res){$scope.fee_list=res.list,combine_item_fee()})};init()});