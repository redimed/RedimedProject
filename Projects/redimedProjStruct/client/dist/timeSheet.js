angular.module("app.loggedIn.timesheet.create.controller",[]).controller("TimesheetCreateController",function($rootScope,ConfigService,$scope,$stateParams,$cookieStore,$filter,$modal,calendarHelper,moment,StaffService,$state,toastr,FileUploader,$timeout){$scope.dateOptions={formatYear:"yy",startingDay:1},$scope.info={},$scope.info.time_temp=0,$scope.info.time_charge=0,$scope.tasks||($scope.tasks=[]),$scope.info||($scope.info={}),$scope.itemList=[],$scope.calendarDay=new Date,$scope.info.userID=$cookieStore.get("userInfo").id;var startWeek,endWeek;$scope.task={order:null,task:null,date:null,department_code_id:null,location_id:null,activity_id:null,time_charge:null,time_temp:0,isInputItem:!1,isBillable:!1,item:[]},$scope.checkTimeInLieu=function(){var info={date:new Date,userId:void 0!==$cookieStore.get("userInfo")?$cookieStore.get("userInfo").id:null};StaffService.checkTimeInLieu(info).then(function(response){if("error"===response.status)toastr.error("Check Time in Lieu fail!","Fail");else if("success"===response.status){var timeInLieu=response.time_in_lieu,hours=parseInt(timeInLieu/60),minutes=timeInLieu%60;10>hours&&(hours="0"+hours),10>minutes&&(minutes="0"+minutes);var notification="You have "+hours+" hours "+minutes+" minutes for Time in Lieu!";swal(notification)}else $state.go("loggedIn.home",null,{reload:!0}),toastr.error("Server not response!","Error")})},$scope.changeTimeCharge=function(){var sum=0,sumInLieu=0;angular.forEach($scope.tasks,function(data,index){$scope.tasks[index].time_temp=StaffService.convertShowToFull(data.time_charge),null!==data.time_charge&&void 0!==data.time_charge&&"delete"!==data.isAction&&null!==data.activity_id&&""!==data.time_charge&&0!==data.time_charge.length&&(sum+=parseInt(StaffService.convertShowToFull(data.time_charge))),void 0!==data.item&&null!==data.item&&0!==data.length&&angular.forEach(data.item,function(value,index){void 0!==value&&null!==value&&22==value.ITEM_ID&&"delete"!==value.isAction&&""!==value.time_charge&&0!==value.time_charge.length&&(sumInLieu+=StaffService.convertShowToFull(value.time_charge))})}),$scope.info.time_in_lieuFull=sumInLieu,$scope.info.time_temp=sum,$scope.info.time_charge=StaffService.convertFromFullToShow(sum),0===sum&&($scope.info.time_charge=null)},$scope.ChangeActivity=function(activity_id,index){if($scope.tasks[index].time_charge=null,$scope.tasks[index].time_temp=null,$scope.tasks[index].item=[],$scope.tasks[index].task=null,5===activity_id)if(6===$scope.tasks[index].date.getDay()||0===$scope.tasks[index].date.getDay()){var item={};item.isAction="insert",item.time_temp=0,item.totalUnits=0,item.ratio=0,item.time_charge="0000",item.ITEM_ID=18,item.ITEM_NAME="Weekend Leave",$scope.tasks[index].item.push(item),$scope.tasks[index].time_charge="0000",$scope.tasks[index].time_temp=0,$scope.tasks[index].notPopup=!0}else $scope.tasks[index].notPopup=!1;else $scope.tasks[index].notPopup=!1;$scope.changeTimeCharge()},$scope.getWeekNumber=function(date){var d=new Date(+date);d.setHours(0,0,0),d.setDate(d.getDate()+4-(d.getDay()||7));var yearStart=new Date(d.getFullYear(),0,1),weekNo=Math.ceil(((d-yearStart)/864e5+1)/7);return weekNo};var info={date:new Date,userId:void 0!==$cookieStore.get("userInfo")?$cookieStore.get("userInfo").id:null};StaffService.checkTimeInLieu(info).then(function(response){"error"===response.status?toastr.error("Check Time in Lieu fail!","Fail"):"success"===response.status?$scope.info.time_in_lieuHas=response.time_in_lieu:($state.go("loggedIn.home",null,{reload:!0}),toastr.error("Server not response!","Error"))}),$scope.checkTaskWeek=function(date){startWeek=$filter("date")(date,"yyyy-MM-dd"),$scope.info.startWeek=startWeek,StaffService.checkTaskWeek($scope.info).then(function(response){"fail"===response.status||"error"===response.status?toastr.error("Error","Error"):"no"!==response.data?($scope.tasks=[],angular.forEach(response.data,function(data){data.isEdit=!0,$scope.tasks.push(data)})):($scope.orgiTask=angular.copy($scope.tasks),$scope.tasks=[],$scope.viewWeek=calendarHelper.getWeekView(date,!0),angular.forEach($scope.viewWeek.columns,function(data,index){$scope.task={order:$scope.orgiTask[index].order,task:$scope.orgiTask[index].task,date:data.dateChosen,department_code_id:$scope.orgiTask[index].department_code_id,location_id:$scope.orgiTask[index].location_id,activity_id:$scope.orgiTask[index].activity_id,time_charge:$scope.orgiTask[index].time_charge,isInputItem:$scope.orgiTask[index].isInputItem,isBillable:$scope.orgiTask[index].isBillable,isParent:$scope.orgiTask[index].isParent,item:$scope.orgiTask[index].item},$scope.tasks.push($scope.task)}))})},$scope.checkFirstTaskWeek=function(){$scope.tasks=[],StaffService.checkFirstTaskWeek($scope.info).then(function(response){if("error"===response.status?toastr.error("Error","Error"):($scope.isEdit=!1,"success"===response.status?$scope.nextDay=moment(response.maxDate).add(7,"day").toDate():"no maxDate"===response.status&&($scope.nextDay=moment($scope.calendarDay).add(7,"day").toDate()),$scope.viewWeek=calendarHelper.getWeekView($scope.nextDay,!0),angular.forEach($scope.viewWeek.columns,function(data,index){$scope.task={order:index+1,task:null,date:data.dateChosen,department_code_id:null,location_id:null,activity_id:null,time_charge:null,isInputItem:!1,isBillable:!1,isParent:1,item:[]},$scope.tasks.push($scope.task)})),void 0!==$scope.tasks&&null!==$scope.tasks&&0!==$scope.tasks.length&&void 0!==$scope.tasks[0]&&($scope.dateWeekFrom=$filter("date")($scope.tasks[0].date,"dd/MM/yyyy")),void 0!==$scope.tasks&&null!==$scope.tasks&&0!==$scope.tasks.length&&void 0!==$scope.tasks[$scope.tasks.length-1]&&void 0!==$scope.tasks[$scope.tasks.length-2]){if($scope.tasks[$scope.tasks.length-1].activity_id=5,$scope.tasks[$scope.tasks.length-2].activity_id=5,void 0!==$scope.tasks[$scope.tasks.length-1].item&&null!==$scope.tasks[$scope.tasks.length-1].item){var item={};item.isAction="insert",item.time_temp=0,item.totalUnits=0,item.ratio=0,item.time_charge="0000",item.ITEM_ID=18,item.ITEM_NAME="Weekend Leave",$scope.tasks[$scope.tasks.length-1].item.push(item),$scope.tasks[$scope.tasks.length-1].time_charge="0000",$scope.tasks[$scope.tasks.length-1].time_temp=0,$scope.tasks[$scope.tasks.length-1].notPopup=!0}if(void 0!==$scope.tasks[$scope.tasks.length-2].item&&null!==$scope.tasks[$scope.tasks.length-2].item){var item={};item.isAction="insert",item.time_temp=0,item.totalUnits=0,item.ratio=0,item.time_charge="0000",item.ITEM_ID=18,item.ITEM_NAME="Weekend Leave",$scope.tasks[$scope.tasks.length-2].item.push(item),$scope.tasks[$scope.tasks.length-2].time_charge="0000",$scope.tasks[$scope.tasks.length-2].time_temp=0,$scope.tasks[$scope.tasks.length-2].notPopup=!0}}})},$scope.loadInfo=function(){$scope.tasks.loading=!0,StaffService.getDepartmentLocation().then(function(response){if("fail"==response.status||"error"==response.status)toastr.error("Error","Error");else if($scope.departments=response.department,$scope.locations=response.location,$scope.activities=response.activity,$stateParams.id){$scope.isEdit=!0;var info={idWeek:$stateParams.id,userId:$cookieStore.get("userInfo").id};StaffService.showEdit(info).then(function(response){void 0!==response.data&&void 0!==response.data[0]&&void 0!==response.data[0].date&&($scope.dateStart=response.data[0].date),"fail"==response.status?angular.forEach(response.data,function(data){data.item=[],data.isEdit=!0,data.time_temp=data.time_charge,data.isAction="update",null!==data.time_charge&&(data.time_charge=StaffService.convertFromFullToShow(data.time_charge)),$scope.tasks.push(data),$scope.changeTimeCharge()}):"success"===response.status?($scope.uploader=new FileUploader({url:"/api/TimeSheet/post-upload-file",method:"POST",autoUpload:!0,formData:[{userId:$cookieStore.get("userInfo").id}],isHTML5:!0,isUploading:!0}),angular.forEach(response.data,function(data,indexData){data.item=[],data.isEdit=!0,data.time_temp=data.time_charge,data.isAction="update",null!==data.time_charge&&(data.time_charge=StaffService.convertFromFullToShow(data.time_charge)),angular.forEach(response.item,function(item){void 0!==response.item&&response.item[0]&&void 0!==response.item[0].task_status_id&&($scope.checkStatus=response.item[0].task_status_id,$scope.afterStatusID=response.item[0].after_status_id),data.tasks_id===item.tasks_id&&null!==item.ITEM_ID&&0===item.deleted&&(item.isAction="update",item.time_temp=item.time_charge,item.deleted=item.deleted,item.totalUnits=item.units,item.ratio=item.ratio,item.task_id=item.task_id,item.time_charge=StaffService.convertFromFullToShow(item.time_charge),item.fileUpload=[],angular.forEach(response.file,function(valueFile,indexFile){valueFile.tasks_id===item.tasks_id&&valueFile.ITEM_ID===item.ITEM_ID&&item.fileUpload.push({file_name:valueFile.file_name,file_id:valueFile.file_id,isAction:"update"})}),data.item.push(item))}),$scope.tasks.push(data),$scope.changeTimeCharge()})):"error"===response.status&&($state.go("loggedIn.home",null,{reload:!0}),toastr.error("Load fail!","Error"))})}else $scope.isEdit=!1,$scope.checkFirstTaskWeek();var USER_ID=void 0!==$cookieStore.get("userInfo")?$cookieStore.get("userInfo").id:null;StaffService.LoadContract(USER_ID).then(function(conTract){"success"===conTract.status&&void 0!==conTract.result[0]&&void 0!==conTract.result[0].TypeOfContruct?$scope.TypeOfContruct=conTract.result[0].TypeOfContruct:toastr.error("User not type of contruct!, Please notification Admin","Error")})}),$scope.tasks.loading=!1},$scope.loadInfo(),$scope.addRow=function(index,date){for(var j=0,i=index;i<$scope.tasks.length;i++)$scope.tasks[i].date==date&&j++;task={order:1+j,task:null,date:date,department_code_id:null,location_id:null,activity_id:null,time_charge:null,isEdit:!1,isInputItem:!1,isBillable:!1,isAction:"insert",item:[]},$scope.tasks.splice(index+j,0,task),angular.forEach($scope.tasks,function(data,index){$scope.tasks[index].order=index+1})};var dateFrom;$scope.changeDate=function(){dateFrom=new Date($scope.dateWeekFrom.substr(6,4),$scope.dateWeekFrom.substr(3,2)-1,$scope.dateWeekFrom.substr(0,2)),$scope.checkTaskWeek(dateFrom)},$scope.delTask=function(index,order){1!=order&&swal({title:"Are you sure delete this row?",type:"warning",showCancelButton:!0,confirmButtonColor:"#DD6B55",confirmButtonText:"Yes",closeOnConfirm:!0},function(){if("insert"==$scope.tasks[index].isAction)$scope.tasks.splice(index,1),angular.forEach($scope.tasks,function(data,index){$scope.tasks[index].order=index+1});else if("update"==$scope.tasks[index].isAction){$scope.tasks[index].isAction="delete";for(var i=index+1;i<$scope.tasks.length;i++)$scope.tasks[i].order-=1}$scope.changeTimeCharge()})},$scope.addAllTask=function(status,formValid){$scope.info.time_temp<2280&&"Full-time"===$scope.TypeOfContruct&&1!==status?toastr.warning("Please check time charge(>=38)","Error"):$scope.info.time_in_lieuFull>$scope.info.time_in_lieuHas&&1!==status?toastr.warning("Please check time in lieu use larger time in lieu you have!","Fail"):formValid.$invalid?toastr.error("Please Input All Required Information!","Error"):$scope.isEdit===!1?(startWeek=$filter("date")($scope.viewWeek.startWeek,"yyyy-MM-dd"),endWeek=$filter("date")($scope.viewWeek.endWeek,"yyyy-MM-dd"),$scope.info.startWeek=startWeek,$scope.info.endWeek=endWeek,$scope.info.statusID=status,$scope.info.weekNo=$scope.getWeekNumber($scope.viewWeek.startWeek),StaffService.addAllTask($scope.tasks,$scope.info).then(function(response){"success"==response.status?(toastr.success("success","Success"),$state.go("loggedIn.timesheetHome.timesheetHistory",null,{reload:!0})):toastr.error("Error","Error")})):$scope.isEdit===!0&&($scope.info.idWeek=$stateParams.id,$scope.info.statusID=status,StaffService.editTask($scope.tasks,$scope.info).then(function(response){"success"==response.status?(toastr.success("Update Timesheet success!","Success"),$state.go("loggedIn.timesheetHome.timesheetHistory",null,{reload:!0})):toastr.error("Update Timesheet fail!","Error")}))},$scope.chooseItem=function(task,uploader,statusEdit,taskIndex){if(void 0!==task&&1===task.activity_id){void 0!==$scope.locations&&null!==$scope.locations&&0!==$scope.locations.length&&angular.forEach($scope.locations,function(location,index){location.location_id===task.location_id&&(task.locationName=location.NAME)}),void 0!==$scope.departments&&null!==$scope.departments&&0!==$scope.departments.length&&angular.forEach($scope.departments,function(department,index){$scope.departments[index].departmentid===task.department_code_id&&(task.departmentName=$scope.departments[index].departmentName)});var modalInstance=$modal.open({templateUrl:"ItemCode",controller:function($scope){$scope.items=angular.copy(task),$scope.clickCancel=function(){modalInstance.close({type:"cancel"})},$scope.clickSave=function(info,formValid){if(formValid.$invalid===!0)toastr.warning("Please Input All Required Information!","Error");else{if(void 0!==info&&null!==info)for(var i=0;i<info.length;i++)info[i].time_temp=StaffService.convertShowToFull(info[i].time_charge);modalInstance.close({type:"ok",value:info})}}},size:"lg"});modalInstance.result.then(function(obj){if("ok"==obj.type){var list=[];if(list=obj.value,task.item=list,list.length>0){for(var t=[],c=0,i=0;i<list.length;i++)"delete"!==list[i].isAction&&list[i].show===!0&&(t.push(list[i].ITEM_ID),c+=StaffService.convertShowToFull(list[i].time_charge));task.task=t.join(" , "),task.time_charge=StaffService.convertFromFullToShow(c),task.time_temp=c,$scope.changeTimeCharge()}else task.task=null,task.time_charge=null,$scope.changeTimeCharge()}})}else if(void 0!==task){void 0!==$scope.locations&&null!==$scope.locations&&0!==$scope.locations.length&&angular.forEach($scope.locations,function(location,index){location.location_id===task.location_id&&(task.locationName=location.NAME)}),void 0!==$scope.departments&&null!==$scope.departments&&0!==$scope.departments.length&&angular.forEach($scope.departments,function(department,index){$scope.departments[index].departmentid===task.department_code_id&&(task.departmentName=$scope.departments[index].departmentName)});var modalInstanceAC=$modal.open({templateUrl:"ActivityDetail",controller:function($scope){$scope.activities=angular.copy(task),$scope.activities.uploader=uploader,$scope.activities.taskIndex=taskIndex,statusEdit===!0&&($scope.activities.id_task_week=$stateParams.id),$scope.clickCancel=function(){modalInstanceAC.close({type:"cancel"})},$scope.clickSave=function(info,formValid,upload){if(formValid.$invalid===!0)toastr.warning("Please Input All Required Information!","Error");else{if(void 0!==info&&null!==info)for(var i=0;i<info.length;i++)info[i].time_temp=StaffService.convertShowToFull(info[i].time_charge);modalInstanceAC.close({type:"ok",value:info,valueUpload:upload})}}},size:"lg"});modalInstanceAC.result.then(function(obj){if("ok"==obj.type){var list=[];if(list=obj.value,task.item=list,list.length>0){for(var t=[],c=0,i=0;i<list.length;i++)"delete"!==list[i].isAction&&list[i].show===!0&&(t.push(list[i].ITEM_NAME),c+=StaffService.convertShowToFull(list[i].time_charge));task.task=t.join(" , "),task.time_charge=StaffService.convertFromFullToShow(c),task.time_temp=c,$scope.changeTimeCharge()}else task.task=null,task.time_charge=null,$scope.changeTimeCharge()}})}},$scope.setCalendarToToday=function(){$scope.calendarDay=new Date},$scope.toggle=function($event,field,event){$event.preventDefault(),$event.stopPropagation(),event[field]=!event[field]},StaffService.showWeek($scope.info.userID)}),angular.module("app.loggedIn.timesheet.view.controller",[]).controller("TimesheetViewController",function($rootScope,$scope,MODE_ROW,$filter,$cookieStore,ConfigService,$modal,calendarHelper,moment,StaffService,$state,toastr){$scope.listStatus=[{code:1,name:"Awaiting for Submit"},{code:2,name:"Submitted"},{code:3,name:"Approved"},{code:4,name:"Rejected"},{code:5,name:"Re-submitted"}],$scope.setPage=function(){$scope.searchObjectMap.offset=($scope.searchObjectMap.currentPage-1)*$scope.searchObjectMap.limit,$scope.loadList()},$scope.reset=function(){$scope.searchObjectMap=angular.copy($scope.searchObject),$scope.loadList(),$scope.dateWeekFrom=null},$scope.loadList=function(){StaffService.getAllTaskAMonth($scope.searchObjectMap).then(function(response){"error"==response.status?toastr.error("Error","Error"):$scope.list="no task"==response.status?response:response})},$scope.getFortMatTimeCharge=function(val){return StaffService.getFortMatTimeCharge(val)},$scope.getWeekNumber=function(d){d=new Date(+d),d.setHours(0,0,0),d.setDate(d.getDate()+4-(d.getDay()||7));var yearStart=new Date(d.getFullYear(),0,1),weekNo=Math.ceil(((d-yearStart)/864e5+1)/7);return weekNo};var init=function(){$scope.rows=MODE_ROW,$scope.searchObject={limit:10,offset:0,maxSize:5,currentPage:1,userID:void 0!==$cookieStore.get("userInfo")?$cookieStore.get("userInfo").id:null,week_no:null,order:{0:"DESC"},select:{"time_tasks_week.task_status_id":null}},$scope.searchObjectMap=angular.copy($scope.searchObject),$scope.list={},$scope.loadList(),$scope.dateOptions={formatYear:"yy",startingDay:1}};init(),$scope.changeDate=function(dateValue){var dateFrom=new Date(dateValue.substr(6,4),dateValue.substr(3,2)-1,dateValue.substr(0,2));$scope.searchObjectMap.week_no=$scope.getWeekNumber(dateFrom),$scope.searchObjectMap.dateFrom=dateFrom,$scope.loadList()},$scope.tasks||($scope.tasks=[]),$scope.isEdit=!1;$scope.task={order:null,task:null,date:null,department_code_id:null,location_id:null,activity_id:null,time_charge:null},$scope.calendarDay=new Date,$scope.orderWeek=function(type){"desc"==type?($scope.list.result=$filter("orderBy")($scope.list.result,"week_no",!0),$scope.isAsc=!1):($scope.list.result=$filter("orderBy")($scope.list.result,"week_no",!1),$scope.isAsc=!0)},$scope.chooseItem=function(task){$modal.open({templateUrl:"modules/TimeSheet/views/itemModal.html",controller:"ItemController",size:"md"})},$scope.view=function(item){$modal.open({templateUrl:"modules/TimeSheet/views/viewTimesheetByHour.html",controller:"ViewTimesheetByHourController",size:"lg",resolve:{infoWeek:function(){return item}}})},$scope.clickAsc=function(){$scope.searchObjectMap.order[0]="ASC",$scope.loadList()},$scope.clickDesc=function(){$scope.searchObjectMap.order[0]="DESC",$scope.loadList()},StaffService.showWeek()}).controller("ViewDetailController",function($rootScope,$modalInstance,$modal,$scope,$cookieStore,$filter,ConfigService,calendarHelper,moment,StaffService,$state,toastr,infoWeek){$scope.tasks||($scope.tasks=[]),$scope.getWeekNumber=function(d){d=new Date(+d),d.setHours(0,0,0),d.setDate(d.getDate()+4-(d.getDay()||7));var yearStart=new Date(d.getFullYear(),0,1),weekNo=Math.ceil(((d-yearStart)/864e5+1)/7);return weekNo};var info={date:new Date,userId:void 0!==$cookieStore.get("userInfo")?$cookieStore.get("userInfo").id:null};StaffService.checkTimeInLieu(info).then(function(response){if("error"===response.status)toastr.error("Check Time in Lieu fail!","Fail");else if("success"===response.status){var timeInLieu=0;angular.forEach(response.result,function(data,index){timeInLieu+=data.time_in_lieu}),$scope.time_in_lieuHas=timeInLieu}else $state.go("loggedIn.home",null,{reload:!0}),toastr.error("Server not response!","Error")}),$scope.getDay=function(day){var date=new Date(day);return 0===date.getDay()?7:date.getDay()},$scope.week=infoWeek,$scope.getFortMatTimeCharge=function(val){return StaffService.getFortMatTimeCharge(val)},$scope.cancelClick=function(){$modalInstance.close()},$scope.okClick=function(){$modalInstance.close(),$state.go("loggedIn.timesheetHome.timesheetCreate",{id:infoWeek.task_week_id})},$scope.submitClick=function(value){$scope.week.time_charge<2280?toastr.warning("Please check time charge(>=38)","Error"):$scope.time_in_lieuChoose>$scope.time_in_lieuHas?toastr.warning("Please check time in lieu use larger time in lieu you have!","Fail"):(value.status=0,"Awaiting for Submit"==value.STATUS?value.status=2:"Rejected"==value.STATUS&&(value.status=5),StaffService.SubmitOnView(value).then(function(response){"error"===response.status?(toastr.error("Submit fail!","Error"),$modalInstance.close()):"success"===response.status&&($modalInstance.close(),$state.go("loggedIn.timesheetHome.timesheetHistory",null,{reload:!0}),toastr.success("Submit success","Success"))}))},$scope.loadInfo=function(){$scope.tasks.loading=!0,StaffService.getTask(infoWeek.task_week_id).then(function(response){if("fail"==response.status||"error"==response.status)toastr.error("Error","Error");else if("success"==response.status){var result=response.data;void 0!==result&&void 0!==result[0]&&($scope.ID_WEEK=result[0].tasks_week_id,$scope.STATUS=result[0].STATUS,$scope.USER_ID=void 0!==$cookieStore.get("userInfo")?$cookieStore.get("userInfo").id:null,$scope.after_status_id=result[0].after_status_id,$scope.time_in_lieuChoose=result[0].time_in_lieuChoose,$scope.submitOnView={},$scope.submitOnView.STATUS=$scope.STATUS,$scope.submitOnView.ID_WEEK=$scope.ID_WEEK,$scope.submitOnView.USER_ID=$scope.USER_ID,$scope.employee_name=null===result[0].FirstName||""===result[0].FirstName?null===result[0].LastName||""===result[0].LastName?" ":result[0].LastName:result[0].FirstName+" "+(null===result[0].LastName||""===result[0].LastName?" ":result[0].LastName)),"full"!=infoWeek.date?($scope.one=!0,$scope.Title="Timesheet Detail",$scope.tasks=_.filter(response.data,function(data){return data.date==infoWeek.date}),angular.forEach($scope.tasks,function(valueTask,indexTask){$scope.tasks[indexTask].files=[],angular.forEach(response.file,function(valueFile,indexFile){valueTask.tasks_id===valueFile.tasks_id&&valueTask.ITEM_ID===valueFile.ITEM_ID&&$scope.tasks[indexTask].files.push({file_id:valueFile.file_id,file_name:valueFile.file_name})})})):($scope.Title="Full Timesheet",$scope.one=!1,$scope.tasks=response.data)}}),$scope.tasks.loading=!1},$scope.loadInfo(),$scope.chooseItem=function(item){$modal.open({templateUrl:"modules/TimeSheet/views/itemModal.html",controller:"ItemController",size:"lg",resolve:{itemArr:function(){var arr=[];return arr=item,arr.length>0?arr:null},isView:function(){return!0}}})}}).controller("ViewTimesheetByHourController",function($rootScope,$modalInstance,$modal,$scope,$cookieStore,$filter,ConfigService,calendarHelper,moment,StaffService,$state,toastr,infoWeek){$scope.tasks||($scope.tasks=[]),$scope.info||($scope.info={}),$scope.getWeekNumber=function(d){d=new Date(+d),d.setHours(0,0,0),d.setDate(d.getDate()+4-(d.getDay()||7));var yearStart=new Date(d.getFullYear(),0,1),weekNo=Math.ceil(((d-yearStart)/864e5+1)/7);return weekNo};var info={date:new Date,userId:void 0!==$cookieStore.get("userInfo")?$cookieStore.get("userInfo").id:null};StaffService.checkTimeInLieu(info).then(function(response){if("error"===response.status)toastr.error("Check Time in Lieu fail!","Fail");else if("success"===response.status){var timeInLieu=0;angular.forEach(response.result,function(data,index){timeInLieu+=data.time_in_lieu}),$scope.time_in_lieuHas=timeInLieu}else $state.go("loggedIn.home",null,{reload:!0}),toastr.error("Server not response!","Error")}),$scope.getFortMatTimeCharge=function(val){return StaffService.getFortMatTimeCharge(val)},$scope.cancelClick=function(){$modalInstance.close()},$scope.submitClick=function(value){$scope.week.time_charge<2280?toastr.warning("Please check time charge(>=38)","Error"):$scope.time_in_lieuChoose>$scope.time_in_lieuHas?toastr.warning("Please check time in lieu use larger time in lieu you have!","Fail"):(value.status=0,"Awaiting for Submit"==value.STATUS?value.status=2:"Rejected"==value.STATUS&&(value.status=5),StaffService.SubmitOnView(value).then(function(response){"error"===response.status?(toastr.error("Submit fail!","Error"),$modalInstance.close()):"success"===response.status&&($modalInstance.close(),$state.go("loggedIn.timesheetHome.timesheetHistory",null,{reload:!0}),toastr.success("Submit success","Success"))}))},$scope.okClick=function(){$modalInstance.close(),$state.go("loggedIn.timesheetHome.timesheetCreate",{id:infoWeek.task_week_id})},$scope.week=infoWeek,$scope.loadInfo=function(){$scope.tasks.loading=!0,StaffService.showDetailDate(infoWeek.task_week_id).then(function(response){if("fail"==response.status||"error"==response.status)toastr.error("Error","Error");else if("success"==response.status){var result=response.data;void 0!==result&&void 0!==result[0]&&($scope.STATUS=result[0].status,$scope.ID_WEEK=result[0].tasks_week_id,$scope.time_in_lieuChoose=result[0].time_in_lieuChoose,$scope.USER_ID=void 0!==$cookieStore.get("userInfo")?$cookieStore.get("userInfo").id:null,$scope.submitOnView={},$scope.submitOnView.STATUS=$scope.STATUS,$scope.submitOnView.ID_WEEK=$scope.ID_WEEK,$scope.submitOnView.USER_ID=$scope.USER_ID,$scope.afterStatusID=result[0].after_status_id,$scope.employee_name=null===result[0].FirstName||""===result[0].FirstName?null===result[0].LastName||""===result[0].LastName?" ":result[0].LastName:result[0].FirstName+" "+(null===result[0].LastName||""===result[0].LastName?" ":result[0].LastName));var arrayDate=[];angular.forEach(response.data,function(valueData,indexData){var isFoundDate=!1;angular.forEach(arrayDate,function(valueDate,indexDate){valueData.date===valueDate.date&&(isFoundDate=!0)}),isFoundDate===!1&&arrayDate.push({date:valueData.date})}),angular.forEach(arrayDate,function(valueDate,indexDate){var timeChargeDate=0;arrayDate[indexDate].timeActivity=[{time_charge:0},{time_charge:0},{time_charge:0},{time_charge:0},{time_charge:0}],angular.forEach(response.data,function(valueData,indexData){var time_charge=void 0!==valueData.time_charge&&null!==valueData.time_charge?valueData.time_charge:0;valueData.date===valueDate.date&&(timeChargeDate+=time_charge,arrayDate[indexDate].timeActivity[valueData.activity_id-1].time_charge+=time_charge)}),arrayDate[indexDate].time_charge_date=timeChargeDate}),$scope.tasks=angular.copy(arrayDate)}}),$scope.tasks.loading=!1},$scope.loadInfo(),$scope.viewDetailDate=function(infoWeek,date){$modal.open({templateUrl:"modules/TimeSheet/views/viewDetail.html",controller:"ViewDetailController",size:"lg",resolve:{infoWeek:function(){return infoWeek.date=date,infoWeek}}})}}),angular.module("app.loggedIn.staff.service",[]).factory("StaffService",function(Restangular,MIN_TO_DEC){var service={},api=Restangular.all("api");return service.addAllTask=function(allTaskPost,infoPost){var addAllTask=api.all("staff/addAllTask");return addAllTask.post({allTask:allTaskPost,info:infoPost})},service.getAllTaskAMonth=function(searchPost){var getAllTaskAMonth=api.all("staff/getAllTaskAMonth");return getAllTaskAMonth.post({search:searchPost})},service.SubmitOnView=function(infoPost){var SubmitOnView=api.all("staff/SubmitOnView");return SubmitOnView.post({info:infoPost})},service.editTask=function(task,infoPost){var editTask=api.all("staff/editTask");return editTask.post({allTask:task,info:infoPost})},service.checkTimeInLieu=function(infoPost){var checkTimeInLieu=api.all("staff/checktime");return checkTimeInLieu.post({info:infoPost})},service.getTask=function(idWeekPost){var getTask=api.all("staff/getTask");return getTask.post({idWeek:idWeekPost})},service.getDepartmentLocation=function(){var getDepartmentLocation=api.one("staff/getDepartmentLocation");return getDepartmentLocation.get()},service.checkFirstTaskWeek=function(infoPost){var checkFirstTaskWeek=api.all("staff/checkFirstTaskWeek");return checkFirstTaskWeek.post({info:infoPost})},service.checkTaskWeek=function(infoPost){var checkTaskWeek=api.all("staff/checkTaskWeek");return checkTaskWeek.post({info:infoPost})},service.showEdit=function(infoPost){var showEdit=api.all("staff/showEdit");return showEdit.post({info:infoPost})},service.showDetailDate=function(infoPost){var showDetailDate=api.all("staff/showDetailDate");return showDetailDate.post({info:infoPost})},service.getTaskList=function(){return api.one("staff/task/getList").get()},service.LoadContract=function(USER_ID){var LoadContract=api.all("staff/get-contract");return LoadContract.post({ID:USER_ID})},service.convertShowToFull=function(time_charge){if(void 0===time_charge||null===time_charge||isNaN(time_charge)||0===time_charge||0===time_charge.length)return 0;var hours=0,minutes=0;return hours=parseInt(time_charge.toString().substring(0,time_charge.toString().length-2)),minutes=parseInt(time_charge.toString().substring(time_charge.toString().length-2,time_charge.toString().length)),parseInt(60*hours)+parseInt(minutes)},service.convertFromFullToShow=function(time_charge){if(void 0!==time_charge&&null!==time_charge){var hours=parseInt(time_charge/60),minutes=parseInt(time_charge%60);return 10>hours&&(hours="0"+hours),10>minutes&&(minutes="0"+minutes),hours.toString()+minutes.toString()}},service.getFortMatTimeCharge=function(time_charge){if(void 0!==time_charge&&null!==time_charge&&0!==time_charge){var hours=parseInt(time_charge/60),minutes=parseInt(time_charge%60);return 10>hours&&(hours="0"+hours),10>minutes&&(minutes="0"+minutes),hours+":"+minutes}return"-"},service.showWeek=function(userID){{var startDate,endDate,checkMonth=api.all("staff/checkMonth"),array=[],info={};new Date}info.userID=userID;var date=new Date;info.month=date.getMonth(),info.year=date.getFullYear(),checkMonth.post({info:info}).then(function(response){angular.forEach(response.tasks,function(data){var temp=new Date(data.date),monthTemp=1*temp.getMonth()+1,tempDate=temp.getDate();10>tempDate&&(tempDate="0"+tempDate),10>monthTemp&&(monthTemp="0"+monthTemp),array.push(temp.getFullYear()+"-"+monthTemp+"-"+tempDate)});var selectCurrentWeek=function(){window.setTimeout(function(){$(".ui-weekpicker").find(".ui-datepicker-current-day a").addClass("ui-state-active").removeClass("ui-state-default")},1)},setDates=function(input){var $input=$(input),date=$input.datepicker("getDate"),firstDay=$input.datepicker("option","firstDay");if($input.datepicker("option","dateFormat","dd/mm/yy"),$input.datepicker("option","firstDay",1),null!==date){var dayAdjustment=date.getDay()-firstDay;0>dayAdjustment&&(dayAdjustment+=7),startDate=new Date(date.getFullYear(),date.getMonth(),date.getDate()-dayAdjustment),endDate=new Date(date.getFullYear(),date.getMonth(),date.getDate()-dayAdjustment+6),$input.datepicker("setDate",startDate)}},dateRunTimeSheet=new Date("2015-03-30");$(".week-picker").datepicker({beforeShow:function(){$("#ui-datepicker-div").addClass("ui-weekpicker"),selectCurrentWeek()},onClose:function(){$("#ui-datepicker-div").removeClass("ui-weekpicker")},minDate:dateRunTimeSheet,showOtherMonths:!0,selectOtherMonths:!0,onSelect:function(dateText,inst){setDates(this),selectCurrentWeek(),$(this).change()},beforeShowDay:function(date){var string=jQuery.datepicker.formatDate("yy-mm-dd",date),cssClass="";return date>=startDate&&endDate>=date&&(cssClass="ui-datepicker-current-day"),[-1==array.indexOf(string),cssClass]},onChangeMonthYear:function(year,month,inst){selectCurrentWeek()}}),setDates(".week-picker");var $calendarTR=$(".ui-weekpicker .ui-datepicker-calendar tr");$calendarTR.live("mousemove",function(){$(this).find("td a").addClass("ui-state-hover")}),$calendarTR.live("mouseleave",function(){$(this).find("td a").removeClass("ui-state-hover")})})},service}),angular.module("app.loggedIn.staff.calendar.directive",[]).directive("mwlCalendar",function(moment,calendarHelper){return{templateUrl:"modules/staff/directives/templates/main.html",restrict:"EA",scope:{events:"=calendarEvents",view:"=calendarView",viewWeek:"=calendarViewWeek",currentDay:"=calendarCurrentDay",preDay:"=calendarPreDay",nextDay:"=calendarNextDay",control:"=calendarControl",eventClick:"&calendarEventClick",autoOpen:"=calendarAutoOpen",useIsoWeek:"=calendarUseIsoWeek"},controller:function($scope){var self=this;$scope.useIsoWeek=!0,this.titleFunctions={};this.changeView=function(view,newDay){$scope.view=view,$scope.currentDay=newDay},$scope.control=$scope.control||{},$scope.control.prev=function(){$scope.currentDay=moment($scope.currentDay).subtract(3,"month").toDate(),$scope.preDay=moment($scope.preDay).subtract(3,"month").toDate(),
$scope.nextDay=moment($scope.nextDay).subtract(3,"month").toDate()},$scope.control.next=function(){$scope.currentDay=moment($scope.currentDay).add(3,"month").toDate(),$scope.preDay=moment($scope.preDay).add(3,"month").toDate(),$scope.nextDay=moment($scope.nextDay).add(3,"month").toDate()},$scope.control.getTitle=function(day){return self.titleFunctions[$scope.view]?self.titleFunctions[$scope.view](day):""}}}}),angular.module("app.loggedIn.TimeSheet.Home.Controller",["app.loggedIn.TimeSheet.Home.Controller","app.loggedIn.TimeSheet.ApproveTask.Controller","app.loggedIn.TimeSheet.Report1.Controller","app.loggedIn.TimeSheet.Report2.Controller","app.loggedIn.TimeSheet.Report3.Controller","app.loggedIn.TimeSheet.Report4.Controller","app.loggedIn.TimeSheet.Report5.Controller","app.loggedIn.TimeSheet.Report6.Controller","app.loggedIn.TimeSheet.ReportOweLeave.Controller","app.loggedIn.TimeSheet.CreateLeave.Controller","app.loggedIn.TimeSheet.HistoryLeave.Controller","app.loggedIn.TimeSheet.ApproveLeave.Controller","angularFileUpload","app.loggedIn.timesheet.create.controller","app.loggedIn.timesheet.view.controller"]),angular.module("app.loggedIn.TimeSheet.Directives",["app.loggedIn.TimeSheet.ViewTask.Directive","app.loggedIn.TimeSheet.Time.Directive","app.loggedIn.TimeSheet.Detail.Directive","app.loggedIn.TimeSheet.Filter","app.loggedIn.TimeSheet.ItemCode.Directive","app.loggedIn.TimeSheet.Digits.Directive","app.loggedIn.TimeSheet.ActivityDetail.Directive","angularjs-dropdown-multiselect","app.loggedIn.TimeSheet.ViewLeave.Directive","app.loggedIn.TimeSheet.ApproveLeave.Directive","app.loggedIn.staff.calendar.directive","app.loggedIn.TimeSheet.formValidate.Directive"]),angular.module("app.loggedIn.TimeSheet.ItemCode.Directive",[]).directive("itemCode",function(TimeSheetService,$state,toastr,MODE_ROW,StaffService){return{restrict:"EA",required:"ngModel",scope:{onSave:"&",onCancel:"&",ngModel:"="},link:function(scope,elem,attrs){scope.$watch("ngModel",function(newModel,oldModel){scope.items=[],void 0!==newModel&&(scope.locationName=newModel.locationName,scope.departmentName=newModel.departmentName,void 0!==newModel.item&&0!==newModel.item.length&&angular.forEach(newModel.item,function(item,index){void 0!==item&&1!==item.deleted&&item.show!==!1&&scope.items.push(item)}),angular.forEach(scope.items,function(item,index){scope.items[index].show=!0}))}),scope.setPage=function(){scope.searchObjectMap.offset=(scope.searchObjectMap.currentPage-1)*scope.searchObjectMap.limit,scope.loadList()},scope.reset=function(){scope.searchObjectMap=angular.copy(scope.searchObject),scope.loadList()},scope.loadList=function(){TimeSheetService.LoadItemCode(scope.searchObjectMap).then(function(response){"success"===response.status?(scope.list=response,angular.forEach(scope.list.result,function(value,index){scope.list.result[index].status=!1})):"error"===response.status?($state.go("loggedIn.timesheetHome.timesheetCreate",null,{reload:!0}),toastr.error("Loading fail!","Error")):($state.go("loggedIn.timesheetHome.timesheetCreate",null,{reload:!0}),toastr.error("Server not response!","Error"))})};var init=function(){scope.searchObject={limit:10,offset:0,currentPage:1,maxSize:5,isBillable:!0,order:{"time_item_code.ITEM_ID":null},data:{"time_item_code.ITEM_ID":null,"time_item_code.ITEM_NAME":null}},scope.rows=MODE_ROW,scope.searchObjectMap=angular.copy(scope.searchObject),scope.list={},scope.loadList()};init(),scope.itemCodeASC=function(){scope.searchObjectMap.order["time_item_code.ITEM_ID"]="ASC",scope.loadList()},scope.itemCodeDESC=function(){scope.searchObjectMap.order["time_item_code.ITEM_ID"]="DESC",scope.loadList()},scope.changeTimeCharge=function(index,ratio){scope.items[index].totalUnits=void 0===ratio||null===ratio||""===ratio||isNaN(ratio)?null:ratio*scope.items[index].UNITS},scope.clickShow=function(index){void 0!==scope.list&&void 0!==scope.list.result&&void 0!==scope.list.result[index]&&void 0!==scope.list.result[index].status&&(scope.list.result[index].status=!scope.list.result[index].status)},scope.isShow=!0,scope.clickAdd=function(){scope.isShow=!0,angular.element("#itemCodeID").focus()},scope.addItem=function(ITEM_ID,ITEM_NAME,UNITS){if(scope.isShow===!0){var check=!1;angular.forEach(scope.items,function(item,index){item.ITEM_ID===ITEM_ID&&item.show===!0&&(toastr.warning("Item exist in list selected!","Fail"),check=!0)}),check===!1&&(scope.items.push({ITEM_ID:ITEM_ID,ITEM_NAME:ITEM_NAME,UNITS:UNITS,isAction:"insert",status:!1,show:!0}),scope.isDisabled=!1,scope.isShow=!1)}else toastr.warning("Not found row empty to insert!","Fail")},scope.clickShowSelected=function(index){void 0!==scope.items&&void 0!==scope.items[index]&&void 0!==scope.items[index].status&&(scope.items[index].status=!scope.items[index].status)},scope.deleteItem=function(index){swal({title:"Do you want to delete this Task / Item?",type:"warning",showCancelButton:!0,confirmButtonColor:"#DD6B55",confirmButtonText:"Yes",closeOnConfirm:!0},function(){"update"===scope.items[index].isAction?(scope.items[index].isAction="delete",scope.items[index].show=!1):"insert"===scope.items[index].isAction&&scope.items.splice(index,1);var count=0;angular.forEach(scope.items,function(item,index){item.show===!0&&++count}),0===count&&(scope.isShow=!0)})}},templateUrl:"modules/TimeSheet/directives/templates/ItemCode.html"}}),angular.module("app.loggedIn.TimeSheet.Digits.Directive",[]).directive("onlyDigits",function(){return{require:"ngModel",restrict:"A",link:function(scope,element,attrs,modelCtrl){modelCtrl.$parsers.push(function(inputValue){if(void 0==inputValue)return"";var transformedInput=inputValue.replace(/[^0-9]/g,"");return transformedInput!=inputValue&&(modelCtrl.$setViewValue(transformedInput),modelCtrl.$render()),transformedInput})}}}),angular.module("app.loggedIn.TimeSheet.ViewTask.Directive",[]).directive("viewTask",function(toastr,$state,TimeSheetService,$modal,MIN_TO_DEC,StaffService,$cookieStore){return{restrict:"EA",require:"ngModel",scope:{onCancel:"&",onReject:"&",onApprove:"&",ngModel:"="},link:function(scope,element,attrs){scope.info={},scope.$watch("ngModel",function(newModel,oldModel){isNaN(newModel)?"reject"===newModel?(scope.info.isReject=!0,scope.info.isApprove=!1,$("commentsID").focus()):"chooseApprove"===newModel?(scope.info.isApprove=!0,scope.info.isReject=!1):"cancelOn"===newModel&&(scope.info.isReject=null,scope.info.isApprove=!1):(scope.info.idTaskWeek=newModel,scope.info.USER_ID=void 0!==$cookieStore.get("userInfo")?$cookieStore.get("userInfo").id:null,TimeSheetService.ViewApproved(newModel).then(function(response){"error"===response.status?($state.go("loggedIn.timesheetHome.timesheetApprove",null,{reload:!0}),toastr.error("Loading fail!","Error")):"success"===response.status?(scope.list=response,scope.info.forPermission=scope.list.forPermission,angular.forEach(scope.list.result,function(timeDate,indexD){scope.list.result[indexD].AC=[],angular.forEach(scope.list.resultActivity,function(timeAC,indexAC){scope.list.resultActivity[indexAC].date===scope.list.result[indexD].date&&(scope.list.result[indexD].AC[scope.list.resultActivity[indexAC].activity_id]=scope.list.resultActivity[indexAC].sumAC)})}),scope.employee_name=null===scope.list.result[0].FirstName||""===scope.list.result[0].FirstName?null===scope.list.result[0].LastName||""===scope.list.result[0].LastName?" ":scope.list.result[0].LastName:scope.list.result[0].FirstName+" "+(null===scope.list.result[0].LastName||""===scope.list.result[0].LastName?" ":scope.list.result[0].LastName),scope.statusID=scope.list.result[0].task_status_id,4===scope.list.result[0].task_status_id&&(scope.info.hasReject=!0,scope.info.comments=scope.list.result[0].comments),scope.info.time_rest=scope.list.result[0].chargeWeek-2280,scope.info.time_restFull<0&&(scope.info.time_restFull=0),scope.info.time_in_lieu=null,scope.info.over_time=null,scope.info.TypeOfContruct=scope.list.result[0].TypeOfContruct):($state.go("loggedIn.home",null,{reload:!0}),toastr.error("Server not response!","Error"))}))}),scope.cancelClick=function(){scope.info.isReject=1,scope.info.isApprove=1},scope.$watch("info.time_in_lieu",function(newTimeInLieu,oldTimeInLieu){void 0!==newTimeInLieu&&null!==newTimeInLieu&&(0===newTimeInLieu.length?(scope.info.time_in_lieu=null,scope.info.over_time=null):StaffService.convertShowToFull(newTimeInLieu)>scope.info.time_rest?(scope.info.time_in_lieu=null,scope.info.over_time=null):(scope.info.time_in_lieuFull=StaffService.convertShowToFull(newTimeInLieu),scope.info.over_timeFull=scope.info.time_rest-scope.info.time_in_lieuFull,scope.info.over_time=StaffService.convertFromFullToShow(scope.info.over_timeFull)))}),scope.$watch("info.over_time",function(newOverTime,oldOverTime){void 0!==newOverTime&&null!==newOverTime&&(0===newOverTime.length?(scope.info.over_time=null,scope.info.time_in_lieu=null):StaffService.convertShowToFull(newOverTime)>scope.info.time_rest?(scope.info.time_in_lieu=null,scope.info.over_time=null):(scope.info.over_timeFull=StaffService.convertShowToFull(newOverTime),scope.info.time_in_lieuFull=scope.info.time_rest-scope.info.over_timeFull,scope.info.time_in_lieu=StaffService.convertFromFullToShow(scope.info.time_in_lieuFull)))});var dialogViewDetail=function(ID,DATE,detailType){var modalInstance=$modal.open({templateUrl:"ViewDetail",controller:function($scope){"all-date"===detailType?$scope.idView={ID:ID,STATUS:"all-date"}:"on-date"===detailType&&($scope.idView={ID:ID,DATE:DATE,STATUS:"on-date"}),$scope.clickCancel=function(value){modalInstance.close()}},size:"lg"})};scope.ViewDetail=function(ID,DATE,detailType){dialogViewDetail(ID,DATE,detailType)}},templateUrl:"modules/TimeSheet/directives/templates/ViewTask.html"}}),angular.module("app.loggedIn.TimeSheet.Detail.Directive",[]).directive("viewTimesheet",function(TimeSheetService,toastr,$state){return{restrict:"EA",required:"ngModel",scope:{onCancel:"&",ngModel:"="},link:function(scope,elem,attrs){scope.$watch("ngModel",function(newModel,oldModel){void 0!==newModel&&("on-date"===newModel.STATUS?(scope.Title="Timesheet Detail",TimeSheetService.ViewOnDate(newModel).then(function(response){"success"===response.status?(scope.list=response,angular.forEach(scope.list.result,function(valueResult,indexResult){scope.list.result[indexResult].files=[],angular.forEach(response.file,function(valueFile,indexFile){valueFile.tasks_id===valueResult.tasks_id&&valueFile.ITEM_ID===valueResult.ITEM_ID&&scope.list.result[indexResult].files.push({file_id:valueFile.file_id,file_name:valueFile.file_name})})}),void 0!==scope.list.result[0]&&(scope.employee_name=null===scope.list.result[0].FirstName||""===scope.list.result[0].FirstName?null===scope.list.result[0].LastName||""===scope.list.result[0].LastName?" ":scope.list.result[0].LastName:scope.list.result[0].FirstName+" "+(null===scope.list.result[0].LastName||""===scope.list.result[0].LastName?" ":scope.list.result[0].LastName))):"error"===response.status?toastr.error("Loadding fail!","Error"):($state("loggedIn.TimeSheetHome.ApproveTask",null,{reload:!0}),toastr.error("Server not response!","Error"))})):"all-date"===newModel.STATUS&&(scope.Title="Full Timesheet",TimeSheetService.ViewAllDate(newModel).then(function(response){"success"===response.status?(scope.list=response,scope.employee_name=null===scope.list.result[0].FirstName||""===scope.list.result[0].FirstName?null===scope.list.result[0].LastName||""===scope.list.result[0].LastName?" ":scope.list.result[0].LastName:scope.list.result[0].FirstName+" "+(null===scope.list.result[0].LastName||""===scope.list.result[0].LastName?" ":scope.list.result[0].LastName)):"error"===response.status?toastr.error("Loadding fail!","Error"):($state("loggedIn.ApproveTask",null,{reload:!0}),toastr.error("Server not response!","Error"))})))})},templateUrl:"modules/TimeSheet/directives/templates/Detail.html"}}),angular.module("app.loggedIn.TimeSheet.ActivityDetail.Directive",[]).directive("activityDetail",function(TimeSheetService,$state,toastr,MODE_ROW,StaffService,FileUploader,$cookieStore,$timeout,$window,$modal,$location){return{restrict:"EA",required:"ngModel",scope:{onSave:"&",onCancel:"&",ngModel:"="},link:function(scope,elem,attrs){scope.$watch("ngModel",function(newModel,oldModel){scope.items=[],void 0!==newModel&&(scope.locationName=newModel.locationName,scope.departmentName=newModel.departmentName,void 0!==newModel.item&&0!==newModel.item.length&&angular.forEach(newModel.item,function(item,index){void 0!==item&&1!==item.deleted&&item.show!==!1&&scope.items.push(item)}),angular.forEach(scope.items,function(item,index){scope.items[index].show=!0}),scope.ACTIVITY_ID=newModel.activity_id,void 0!==newModel.taskIndex&&(scope.taskIndex=newModel.taskIndex)),scope.setPage=function(){scope.searchObjectMap.offset=(scope.searchObjectMap.currentPage-1)*scope.searchObjectMap.limit,scope.loadList()},scope.reset=function(){scope.searchObjectMap=angular.copy(scope.searchObject),scope.loadList()},scope.loadList=function(){TimeSheetService.LoadItemCode(scope.searchObjectMap).then(function(response){"success"===response.status?(scope.list=response,angular.forEach(scope.list.result,function(value,index){scope.list.result[index].status=!1})):"error"===response.status?($state.go("loggedIn.timesheetHome.timesheetCreate",null,{reload:!0}),toastr.error("Loading fail!","Error")):($state.go("loggedIn.timesheetHome.timesheetCreate",null,{reload:!0}),toastr.error("Server not response!","Error"))})};var init=function(){scope.searchObject={limit:10,offset:0,currentPage:1,maxSize:5,isBillable:!1,activity_id:scope.ACTIVITY_ID,order:{"time_item_code.ITEM_ID":null},data:{"time_item_code.ITEM_ID":null,"time_item_code.ITEM_NAME":null}},scope.rows=MODE_ROW,scope.searchObjectMap=angular.copy(scope.searchObject),scope.list={},scope.loadList()};init(),scope.itemCodeASC=function(){scope.searchObjectMap.order["time_item_code.ITEM_ID"]="ASC",scope.loadList()},scope.itemCodeDESC=function(){scope.searchObjectMap.order["time_item_code.ITEM_ID"]="DESC",scope.loadList()},scope.changeTimeCharge=function(index,ratio){scope.items[index].totalUnits=void 0===ratio||null===ratio||""===ratio||isNaN(ratio)?null:ratio*scope.items[index].UNITS},scope.clickShow=function(index){void 0!==scope.list&&void 0!==scope.list.result&&void 0!==scope.list.result[index]&&void 0!==scope.list.result[index].status&&(scope.list.result[index].status=!scope.list.result[index].status)},scope.isShow=!0,scope.clickAdd=function(){scope.isShow=!0,angular.element("#itemCodeID").focus()},scope.addItem=function(ITEM_ID,ITEM_NAME,UNITS){if(scope.isShow===!0){var check=!1;angular.forEach(scope.items,function(item,index){item.ITEM_ID===ITEM_ID&&item.show===!0&&(toastr.warning("Item exist in list selected!","Fail"),check=!0)}),check===!1&&(scope.items.push({ITEM_ID:ITEM_ID,ITEM_NAME:ITEM_NAME,UNITS:UNITS,isAction:"insert",status:!1,totalUnits:1,ratio:1,show:!0}),scope.isDisabled=!1,scope.isShow=!1)}else toastr.warning("Not found row empty to insert!","Fail")},scope.clickShowSelected=function(index){void 0!==scope.items&&void 0!==scope.items[index]&&void 0!==scope.items[index].status&&(scope.items[index].status=!scope.items[index].status)},scope.deleteItem=function(index){swal({title:"Do you want to delete this Task / Item?",type:"warning",showCancelButton:!0,confirmButtonColor:"#DD6B55",confirmButtonText:"Yes",closeOnConfirm:!0},function(){"update"===scope.items[index].isAction?(scope.items[index].isAction="delete",scope.items[index].show=!1):"insert"===scope.items[index].isAction&&scope.items.splice(index,1);var count=0;angular.forEach(scope.items,function(item,index){item.show===!0&&++count}),0===count&&(scope.isShow=!0)})}}),scope.uploader=new FileUploader({url:"/api/TimeSheet/post-upload-file",method:"POST",autoUpload:!0,formData:[{userId:$cookieStore.get("userInfo").id}],isHTML5:!0,isUploading:!0}),scope.uploader.filters.push({name:"limitFile",fn:function(item,options){return this.queue.length<5}}),scope.uploader.filters.push({name:"limitSize",fn:function(item){return item.size/1048576<10}}),scope.removeItem=function(indexItem,indexFile,fileId){swal({title:"Are you sure detele this file!",type:"warning",showCancelButton:!0,confirmButtonColor:"#DD6B55",confirmButtonText:"Yes",closeOnConfirm:!0},function(isConfirm){isConfirm&&(angular.forEach(scope.uploader.queue,function(value,index){value.file_id===fileId&&scope.uploader.removeFromQueue(index)}),scope.items[indexItem].fileUpload.splice(indexFile,1),TimeSheetService.DeleteFile(fileId).then(function(response){}))})},scope.uploader.onWhenAddingFileFailed=function(item,filter,options){"folder"===filter.name?swal({title:"Limit 5 file to upload.",type:"warning",confirmButtonColor:"#DD6B55",confirmButtonText:"Yes",closeOnConfirm:!0}):"queueLimit"===filter.name?swal({title:"The file you are trying to send exceeds the 10MB attachment limit.",type:"warning",confirmButtonColor:"#DD6B55",confirmButtonText:"Yes",closeOnConfirm:!0}):toastr.error("Upload file "+item.name+" fail!","Error")},scope.uploader.onAfterAddingAll=function(addedFileItems){if(angular.forEach(scope.items,function(value,index){void 0===value.taskIndex&&(scope.items[index].taskIndex=scope.taskIndex)}),scope.uploader.queue.length>0){angular.forEach(scope.uploader.queue,function(value,index){(void 0===value.taskIndex||void 0===value.itemId)&&(scope.uploader.queue[index].taskIndex=scope.taskIndex,scope.uploader.queue[index].itemId=scope.currentItemId)});var isFound=!1;angular.forEach(scope.uploader.queue,function(value,index){value.isUploading!==!0&&value.isUploaded!==!1||isFound!==!1||(isFound=!0,scope.progressTaskIndex=value.taskIndex,scope.progressItemId=value.itemId,scope.isUploading=!0)}),isFound===!1&&(scope.isUploading=!1)}},scope.uploader.onAfterAddingFile=function(fileItem){},scope.uploader.onBeforeUploadItem=function(item){},scope.uploader.onProgressItem=function(fileItem,progress){scope.fileNameProgress=fileItem.file.name,scope.progress=progress},scope.uploader.onProgressAll=function(progressAll){},scope.uploader.onSuccessItem=function(fileItem,response,status,headers){var isFound=!1;angular.forEach(scope.uploader.queue,function(value,index){value.isUploading!==!0&&value.isUploaded!==!1||isFound!==!1||(isFound=!0,scope.progressTaskIndex=value.taskIndex,scope.progressItemId=value.itemId,scope.isUploading=!0)}),scope.uploader.queue[scope.uploader.getIndexOfItem(fileItem)].file_id=response.file_id,isFound===!1&&(scope.isUploading=!1),angular.forEach(scope.items,function(valueItem,indexItem){void 0===scope.items[indexItem].fileUpload&&(scope.items[indexItem].fileUpload=[]),angular.forEach(scope.uploader.queue,function(valueFile,indexFile){if(valueItem.taskIndex===valueFile.taskIndex&&valueItem.ITEM_ID===valueFile.itemId&&void 0!==valueFile.file_id){var isFound2=!1;angular.forEach(scope.items[indexItem].fileUpload,function(valueCheck,indexCheck){valueCheck.file_id===valueFile.file_id&&(isFound2=!0)}),isFound2===!1&&"delete"!==valueItem.isAction&&scope.items[indexItem].fileUpload.push({file_name:valueFile.file.name,file_id:valueFile.file_id,isAction:"insert"})}})})},scope.getStyleUpload=function(){if(0!==scope.uploader.queue.length){var check=!1;return angular.forEach(scope.uploader.queue,function(value,index){value.isUploading===!0&&(check=!0)}),check===!0?{width:"5%"}:{width:"2%"}}return{width:"2%"}},scope.clickShowFile=function(itemIndex,itemId){$timeout(function(){document.getElementById("uploadTimesheet").click(),scope.clicked=!0,scope.currentItemId=itemId},0)}},templateUrl:"modules/TimeSheet/directives/templates/ActivityDetail.html"}}),angular.module("app.loggedIn.TimeSheet.Filter",[]).filter("customHours",function(){return function(time_charge){if(void 0!==time_charge&&null!==time_charge&&0!==time_charge){var hours=parseInt(time_charge/60),minutes=parseInt(time_charge%60);return 10>hours&&(hours="0"+hours),10>minutes&&(minutes="0"+minutes),hours+":"+minutes}return"-"}}).filter("getDate",function(){return function(input){var DateInput=new Date(input.toString());return DateInput.getDay()}}).filter("readMore",function(){return function(input){return void 0!==input&&null!==input&&""!==input?{check:input.length>150,value:input.substring(0,150)}:""}}).filter("readMoreSelected",function(){return function(input){return void 0!==input&&null!==input&&""!==input?{check:input.length>35,value:input.substring(0,35)}:""}}).filter("readMoreUpload",function(){return function(input){return void 0!==input&&null!==input&&""!==input?{check:input.length>20,value:input.substring(0,10)+"..."+input.substr(input.length-5,input.length-1)}:""}}).filter("customTotalHours",function(){return function(input){return void 0!==input&&null!==input&&""!==input&&0!==input&&0!==input.length?input.toString().substring(0,input.toString().length-2).concat(":",input.toString().substring(input.toString().length-2,input.toString())):"__:__"}}).filter("customTotalHoursAll",function(){return function(input){return void 0!==input&&null!==input&&""!==input&&0!==input&&0!==input.length?input.toString().substring(0,input.toString().length-2).concat(":",input.toString().substring(input.toString().length-2,input.toString())):"00:00"}}),angular.module("app.loggedIn.TimeSheet.Time.Directive",[]).directive("timeCharge",function(StaffService){return{restrict:"EA",require:"ngModel",scope:{ngModel:"=",formValidate:"=",requireValidate:"="},link:function(scope,elem,attrs,ctrls,ngModel){scope.$watch("ngModel",function(newModel,oldModel){if(void 0!==newModel&&null!==newModel&&""!==newModel&&parseInt(newModel.toString().substr(newModel.toString().length-2,2))>59&&(scope.ngModel=StaffService.convertFromFullToShow(StaffService.convertShowToFull(newModel)).toString()),void 0!==scope.ngModel&&null!==scope.ngModel&&""!==scope.ngModel&&0!==scope.ngModel&&0!==scope.ngModel.length){for(var result="",i=0;i<scope.ngModel.toString().length-2;i++)result+="9";result+=":99",attrs.$set("uiMask",result)}else"99:99"!==attrs.uiMask&&attrs.$set("uiMask","99:99");var ObjectError={required:"Field is required!",mask:"Field is invalid!"},isError=!1,keyErrorOut="";angular.forEach(scope.formValidate,function(valueError,keyErrorIn){valueError===!0&&(isError=!0,keyErrorOut=keyErrorIn)}),isError===!0?(elem.css("border-color","#F3565D"),elem.hasClass("tooltipstered")&&angular.element(elem).tooltipster("destroy"),angular.element(elem).tooltipster({theme:"tooltip-error-theme",contentAsHtml:!0,content:ObjectError[keyErrorOut]})):void 0!==newModel&&null!==newModel&&0===newModel.length?(elem.css("border-color","#F3565D"),elem.hasClass("tooltipstered")&&angular.element(elem).tooltipster("destroy"),angular.element(elem).tooltipster({theme:"tooltip-error-theme",contentAsHtml:!0,content:ObjectError.required})):(elem.hasClass("tooltipstered")&&(angular.element(elem).tooltipster("destroy"),angular.element(elem).removeAttr("title")),elem.css("border-color","#ECECEC"))})}}}).directive("timeChargeleave",function(StaffService){return{restrict:"EA",require:"ngModel",scope:{ngModel:"=",formValidate:"=",requireValidate:"="},link:function(scope,elem,attrs,ctrls,ngModel){scope.$watch("ngModel",function(newModel,oldModel){if(void 0!==newModel&&null!==newModel&&""!==newModel&&0!==newModel.length&&parseInt(newModel.toString().substr(newModel.toString().length-2,2))>59&&(scope.ngModel=StaffService.convertFromFullToShow(StaffService.convertShowToFull(newModel)).toString()),void 0!==newModel&&null!==newModel&&""!==newModel&&0!==newModel.length&&0!==newModel){for(var result="",i=0;i<newModel.toString().length-2;i++)result+="9";result+=":99",attrs.$set("uiMask",result)}else"99:99"!==attrs.uiMask&&attrs.$set("uiMask","99:99");void 0!==scope.requireValidate&&null!==scope.requireValidate&&""!==scope.requireValidate&&0!==scope.requireValidate.length&&attrs.$set("required",!0);var ObjectError={required:"Field is required!",mask:"Field is invalid!"},isError=!1,keyErrorOut="";angular.forEach(scope.formValidate,function(valueError,keyErrorIn){valueError===!0&&(isError=!0,keyErrorOut=keyErrorIn)}),isError===!0?(elem.css("border-color","#F3565D"),elem.hasClass("tooltipstered")&&angular.element(elem).tooltipster("destroy"),angular.element(elem).tooltipster({theme:"tooltip-error-theme",contentAsHtml:!0,content:ObjectError[keyErrorOut]})):(elem.hasClass("tooltipstered")&&(angular.element(elem).tooltipster("destroy"),angular.element(elem).removeAttr("title")),elem.css("border-color","#ECECEC"))}),scope.$watch("requireValidate",function(newModelRequired,oldModelRequired){void 0!==newModelRequired&&null!==newModelRequired&&0!==newModelRequired.length?attrs.required!==!0&&attrs.$set("required",!0):attrs.$set("required",!1);var ObjectError={required:"Field is required!",mask:"Field is invalid!"},isError=!1,keyErrorOut="";angular.forEach(scope.formValidate,function(valueError,keyErrorIn){valueError===!0&&(isError=!0,keyErrorOut=keyErrorIn)}),isError===!0?(elem.css("border-color","#F3565D"),elem.hasClass("tooltipstered")&&angular.element(elem).tooltipster("destroy"),angular.element(elem).tooltipster({theme:"tooltip-error-theme",contentAsHtml:!0,content:ObjectError[keyErrorOut]})):(elem.hasClass("tooltipstered")&&(angular.element(elem).tooltipster("destroy"),angular.element(elem).removeAttr("title")),elem.css("border-color","#ECECEC"))})}}}).directive("timeChargenon",function(StaffService){return{restrict:"EA",require:"ngModel",scope:{ngModel:"=",formValidate:"=",requireValidate:"="},link:function(scope,elem,attrs,ctrls,ngModel){scope.$watch("ngModel",function(newModel,oldModel){if(void 0!==newModel&&null!==newModel&&""!==newModel&&" "!==newModel&&parseInt(newModel.toString().substr(newModel.toString().length-2,2))>59&&(scope.ngModel=StaffService.convertFromFullToShow(StaffService.convertShowToFull(newModel)).toString()),void 0!==scope.ngModel&&null!==scope.ngModel&&""!==scope.ngModel&&0!==scope.ngModel&&0!==scope.ngModel.length&&" "!==scope.ngModel){for(var result="",i=0;i<scope.ngModel.toString().length-2;i++)result+="9";result+=":99",attrs.$set("uiMask",result)}else"999:99"!==attrs.uiMask&&attrs.$set("uiMask","999:99");void 0!==scope.requireValidate&&null!==scope.requireValidate&&""!==scope.requireValidate&&0!==scope.requireValidate.length&&attrs.$set("required",!0);var ObjectError={required:"Field is required!",mask:"Field is invalid!"},isError=!1,keyErrorOut="";angular.forEach(scope.formValidate,function(valueError,keyErrorIn){valueError===!0&&(isError=!0,keyErrorOut=keyErrorIn)}),isError===!0?(elem.css("border-color","#F3565D"),elem.hasClass("tooltipstered")&&angular.element(elem).tooltipster("destroy"),angular.element(elem).tooltipster({theme:"tooltip-error-theme",contentAsHtml:!0,content:ObjectError[keyErrorOut]})):(elem.hasClass("tooltipstered")&&(angular.element(elem).tooltipster("destroy"),angular.element(elem).removeAttr("title")),elem.css("border-color","#ECECEC"))}),scope.$watch("requireValidate",function(newModelRequired,oldModelRequired){void 0!==newModelRequired&&null!==newModelRequired&&0!==newModelRequired.length?attrs.required!==!0&&attrs.$set("required",!0):attrs.$set("required",!1);var ObjectError={required:"Field is required!",mask:"Field is invalid!"},isError=!1,keyErrorOut="";angular.forEach(scope.formValidate,function(valueError,keyErrorIn){valueError===!0&&(isError=!0,keyErrorOut=keyErrorIn)}),isError===!0?(elem.css("border-color","#F3565D"),elem.hasClass("tooltipstered")&&angular.element(elem).tooltipster("destroy"),angular.element(elem).tooltipster({theme:"tooltip-error-theme",contentAsHtml:!0,content:ObjectError[keyErrorOut]})):(elem.hasClass("tooltipstered")&&(angular.element(elem).tooltipster("destroy"),angular.element(elem).removeAttr("title")),elem.css("border-color","#ECECEC"))})}}}),angular.module("app.loggedIn.TimeSheet.Service",[]).factory("TimeSheetService",function(Restangular){var TimeSheetService={},api=Restangular.all("api");return TimeSheetService.LoadTaskApproved=function(searchObjPost){var LoadTaskApproved=api.all("TimeSheet/post-list-approved");return LoadTaskApproved.post({searchObj:searchObjPost})},TimeSheetService.ViewApproved=function(idPost){var ViewApproved=api.all("TimeSheet/post-one-approved");return ViewApproved.post({info:idPost})},TimeSheetService.LoadTimeSheetApprove=function(searchObjPost){var LoadTimeSheetApprove=api.all("TimeSheet/post-list-approve");return LoadTimeSheetApprove.post({searchObj:searchObjPost})},TimeSheetService.RejectTaskWeek=function(infoPost){var RejectTaskWeek=api.all("TimeSheet/post-reject-taskweek");return RejectTaskWeek.post({info:infoPost})},TimeSheetService.ApproveTaskWeek=function(infoPost){var ApproveTaskWeek=api.all("TimeSheet/post-approve-taskweek");return ApproveTaskWeek.post({info:infoPost})},TimeSheetService.LoadRole=function(idPost){var LoadRole=api.all("TimeSheet/post-role-one");return LoadRole.post({USER_ID:idPost})},TimeSheetService.ViewItem=function(taskIdPost){var ViewItem=api.all("TimeSheet/post-item-list");return ViewItem.post({taskID:taskIdPost})},TimeSheetService.ViewOnDate=function(infoPost){var ViewOnDate=api.all("TimeSheet/post-detail-one");return ViewOnDate.post({info:infoPost})},TimeSheetService.ViewAllDate=function(infoPost){var ViewAllDate=api.all("TimeSheet/post-detail-all");return ViewAllDate.post({info:infoPost})},TimeSheetService.LoadItemCode=function(searchObjPost){var LoadItemCode=api.all("TimeSheet/post-itemcode-list");return LoadItemCode.post({searchObj:searchObjPost})},TimeSheetService.LoadDeptReport=function(idPost){var LoadDeptReport=api.all("TimeSheet/post-list-deptRP");return LoadDeptReport.post({USER_ID:idPost})},TimeSheetService.LoadEmpReport=function(listDeptPost){var LoadEmpReport=api.all("TimeSheet/post-list-empRP");return LoadEmpReport.post({listDept:listDeptPost})},TimeSheetService.LoadReportOnActualWorking=function(infoPost){var LoadReportOnActualWorking=api.all("TimeSheet/post-actual-working");return LoadReportOnActualWorking.post({info:infoPost})},TimeSheetService.sendMailTimeSheet=function(infoPost){var sendMailTimeSheet=api.all("TimeSheet/post-send-mail");return sendMailTimeSheet.post({info:infoPost})},TimeSheetService.LoadInfoEmployee=function(idPost){var LoadInfoEmployee=api.all("TimeSheet/post-info-employee");return LoadInfoEmployee.post({USER_ID:idPost})},TimeSheetService.LoadTypeLeave=function(){var LoadTypeLeave=api.one("TimeSheet/get-type-leave");return LoadTypeLeave.get({})},TimeSheetService.UpLeaveServer=function(infoPost){var UpLeaveServer=api.all("TimeSheet/post-leave-form");return UpLeaveServer.post({info:infoPost})},TimeSheetService.LoadHistoryLeave=function(searchObjPost){var LoadHistoryLeave=api.all("TimeSheet/post-history-leave");return LoadHistoryLeave.post({searchObj:searchObjPost})},TimeSheetService.ViewLeave=function(infoPost){var ViewLeave=api.all("TimeSheet/post-view-leave");return ViewLeave.post({info:infoPost})},TimeSheetService.SubmitOnViewLeave=function(infoPost){var SubmitOnViewLeave=api.all("TimeSheet/post-submit-view");return SubmitOnViewLeave.post({info:infoPost})},TimeSheetService.LoadLeaveEdit=function(infoPost){var LoadLeaveEdit=api.all("TimeSheet/post-load-edit");return LoadLeaveEdit.post({info:infoPost})},TimeSheetService.UpdateLeave=function(infoPost){var UpdateLeave=api.all("TimeSheet/post-update-leave");return UpdateLeave.post({info:infoPost})},TimeSheetService.LoadLeaveApprove=function(infoPost){var LoadLeaveApprove=api.all("TimeSheet/post-list-leave");return LoadLeaveApprove.post({info:infoPost})},TimeSheetService.ApproveLeave=function(infoPost){var ApproveLeave=api.all("TimeSheet/post-approve-leave");return ApproveLeave.post({info:infoPost})},TimeSheetService.RejectLeave=function(infoPost){var RejectLeave=api.all("TimeSheet/post-reject-leave");return RejectLeave.post({info:infoPost})},TimeSheetService.CheckLeave=function(idPost){var CheckLeave=api.all("TimeSheet/post-check-leave");return CheckLeave.post({USER_ID:idPost})},TimeSheetService.LoadReportOweLeave=function(infoPost){var LoadReportOweLeave=api.all("TimeSheet/post-owe-leave");return LoadReportOweLeave.post({info:infoPost})},TimeSheetService.LoadReportTimeInLieu=function(infoPost){
var LoadReportTimeInLieu=api.all("TimeSheet/post-time-inlieu");return LoadReportTimeInLieu.post({info:infoPost})},TimeSheetService.LoadReportItemNumber=function(infoPost){var LoadReportItemNumber=api.all("TimeSheet/post-item-number");return LoadReportItemNumber.post({info:infoPost})},TimeSheetService.LoadReportUtilizationRatioSumary=function(infoPost){var LoadReportUtilizationRatioSumary=api.all("TimeSheet/post-utilization-sumary");return LoadReportUtilizationRatioSumary.post({info:infoPost})},TimeSheetService.LoadReportUtilizationRatioDetail=function(infoPost){var LoadReportUtilizationRatioDetail=api.all("TimeSheet/post-utilization-detail");return LoadReportUtilizationRatioDetail.post({info:infoPost})},TimeSheetService.DeleteFile=function(fileIdPost){var DeleteFile=api.all("TimeSheet/post-del-file");return DeleteFile.post({fileId:fileIdPost})},TimeSheetService}),angular.module("app.loggedIn.TimeSheet.Report1.Controller",[]).controller("Report1Controller",function($scope,localStorageService,StaffService,TimeSheetService,$cookieStore,toastr,$state,$filter){$scope.dateOptions={formatYear:"yy",startingDay:1},$scope.position=localStorageService.get("position"),$scope.listDepartmentChoose=[],$scope.listEmployeeChoose=[],$scope.listDept=[],$scope.listEmp=[],$scope.isHavedata=0,$scope.ListNew=function(listNew){void 0!==listNew&&null!==listNew&&0!==listNew.length&&TimeSheetService.LoadEmpReport(listNew).then(function(response){if("success"===response.status){var arrayEmp=[];angular.forEach(response.result,function(emp,index){arrayEmp.push({id:emp.Employee_ID,label:emp.FirstName+" "+emp.LastName})}),$scope.listEmp=angular.copy(arrayEmp),$scope.listEmployeeChoose=[]}else"error"===response.status?($state.go("loggedIn.home",null,{reload:!0}),toastr.error("Loading employee fail!","Error")):($state.go("loggedIn.home",null,{reload:!0}),toastr.error("Server not response!","Error"))})},$scope.getWeekNumber=function(d){d=new Date(+d),d.setHours(0,0,0),d.setDate(d.getDate()+4-(d.getDay()||7));var yearStart=new Date(d.getFullYear(),0,1),weekNo=Math.ceil(((d-yearStart)/864e5+1)/7);return weekNo},$scope.changeEmp=function(list){if(0!==$scope.listEmployeeChoose.length){$scope.isHavedata=1;var info={};info.listEMP=angular.copy($scope.listEmployeeChoose),info.USER_ID=void 0!==$cookieStore.get("userInfo")?$cookieStore.get("userInfo").id:null,info.listDept=angular.copy($scope.listDepartmentChoose),TimeSheetService.LoadReportTimeInLieu(info).then(function(response){"success"===response.status?$scope.USER_ID=void 0!==$cookieStore.get("userInfo")?$cookieStore.get("userInfo").id:null:"error"===response.status?($state.go("loggedIn.home",null,{reload:!0}),toastr.error("Loading reports fail!","Error")):"null"===response.status?($scope.isHavedata=0,toastr.error("No Data!!!!","Error")):($state.go("loggedIn.home",null,{reload:!0}),toastr.error("Server not response!","Error"))})}},TimeSheetService.LoadDeptReport($cookieStore.get("userInfo").id).then(function(response){"error"===response.status?($state.go("loggedIn.home",null,{reload:!0}),toastr.error("Load Department fail!","Error")):"success"===response.status?$scope.listDept=response.result:($state.go("loggedIn.home",null,{reload:!0}),toastr.error("Server not response!","Error"))}),$scope.translationTextDept={},$scope.translationTextDept={checkAll:"Check All",uncheckAll:"Uncheck All",selectionCount:"Department Selected",selectionOf:"/",nameAddon:"Director"===$scope.position?"Departments":"Department",searchPlaceholder:"Search...",buttonDefaultText:"--Choose Department--",dynamicButtonTextSuffix:"Department Selected"},$scope.searchDept={enableSearch:!0},$scope.searchEmp={enableSearch:!0},$scope.translationTextEmp={},$scope.translationTextEmp={checkAll:"Check All",uncheckAll:"Uncheck All",selectionCount:"Employee Selected",selectionOf:"/",nameAddon:"Director"===$scope.position||"Head of Dept."===$scope.position?"Employees":"Employee",searchPlaceholder:"Search...",buttonDefaultText:"--Choose Employee--",dynamicButtonTextSuffix:"Employee Selected"}}),angular.module("app.loggedIn.TimeSheet.Report2.Controller",[]).controller("Report2Controller",function($scope,localStorageService,StaffService,TimeSheetService,$cookieStore,toastr,$state,$filter){$scope.dateOptions={formatYear:"yy",startingDay:1},$scope.position=localStorageService.get("position"),$scope.listDepartmentChoose=[],$scope.listEmployeeChoose=[],$scope.listDept=[],$scope.listEmp=[],$scope.isHavedata=0,$scope.ListNew=function(listNew){void 0!==listNew&&null!==listNew&&0!==listNew.length&&(listNew[0].isStaff=$scope.isStaff,listNew[0].USER_ID=$cookieStore.get("userInfo").id,TimeSheetService.LoadEmpReport(listNew).then(function(response){if("success"===response.status){var arrayEmp=[];angular.forEach(response.result,function(emp,index){arrayEmp.push({id:emp.Employee_ID,label:emp.FirstName+" "+emp.LastName})}),$scope.listEmp=angular.copy(arrayEmp),$scope.listEmployeeChoose=[]}else"error"===response.status?($state.go("loggedIn.home",null,{reload:!0}),toastr.error("Loading employee fail!","Error")):($state.go("loggedIn.home",null,{reload:!0}),toastr.error("Server not response!","Error"))}))},$scope.changeDate=function(){$scope.changeEmp($scope.listEmployeeChoose)},$scope.getWeekNumber=function(d){d=new Date(+d),d.setHours(0,0,0),d.setDate(d.getDate()+4-(d.getDay()||7));var yearStart=new Date(d.getFullYear(),0,1),weekNo=Math.ceil(((d-yearStart)/864e5+1)/7);return weekNo},$scope.changeEmp=function(list){if(void 0!==$scope.dateWeekFrom&&null!==$scope.dateWeekFrom&&""!==$scope.dateWeekFrom&&void 0!==$scope.dateWeekTo&&null!==$scope.dateWeekTo&&""!==$scope.dateWeekTo&&0!==$scope.listEmployeeChoose.length){$scope.isHavedata=1;var info={},weekNoFrom=$scope.dateWeekFrom,weekNoTo=$scope.dateWeekTo;info.weekNoFrom=$scope.getWeekNumber(weekNoFrom),info.weekNoTo=$scope.getWeekNumber(weekNoTo),info.listEMP=angular.copy($scope.listEmployeeChoose),info.USER_ID=void 0!==$cookieStore.get("userInfo")?$cookieStore.get("userInfo").id:null,info.weekFrom=$scope.dateWeekFrom,info.weekTo=$scope.dateWeekTo,info.listDept=$scope.listDepartmentChoose,info.weekNoFrom=$scope.getWeekNumber(weekNoFrom),TimeSheetService.LoadReportUtilizationRatioDetail(info).then(function(response){"success"===response.status?$scope.USER_ID=void 0!==$cookieStore.get("userInfo")?$cookieStore.get("userInfo").id:null:"error"===response.status?($state.go("loggedIn.home",null,{reload:!0}),toastr.error("Loading reports fail!","Error")):"null"===response.status?($scope.isHavedata=0,toastr.error("No Data!!!!","Error")):($state.go("loggedIn.home",null,{reload:!0}),toastr.error("Server not response!","Error"))})}},TimeSheetService.LoadDeptReport($cookieStore.get("userInfo").id).then(function(response){"error"===response.status?($state.go("loggedIn.home",null,{reload:!0}),toastr.error("Load Department fail!","Error")):"success"===response.status?($scope.listDept=response.result,$scope.isStaff=response.isStaff):($state.go("loggedIn.home",null,{reload:!0}),toastr.error("Server not response!","Error"))}),$scope.translationTextDept={},$scope.translationTextDept={checkAll:"Check All",uncheckAll:"Uncheck All",selectionCount:"Department Selected",selectionOf:"/",nameAddon:"Director"===$scope.position?"Departments":"Department",searchPlaceholder:"Search...",buttonDefaultText:"--Choose Department--",dynamicButtonTextSuffix:"Department Selected"},$scope.searchDept={enableSearch:!0},$scope.searchEmp={enableSearch:!0},$scope.translationTextEmp={},$scope.translationTextEmp={checkAll:"Check All",uncheckAll:"Uncheck All",selectionCount:"Employee Selected",selectionOf:"/",nameAddon:"Director"===$scope.position||"Head of Dept."===$scope.position?"Employees":"Employee",searchPlaceholder:"Search...",buttonDefaultText:"--Choose Employee--",dynamicButtonTextSuffix:"Employee Selected"}}),angular.module("app.loggedIn.TimeSheet.Report3.Controller",[]).controller("Report3Controller",function($scope,localStorageService,StaffService,TimeSheetService,$cookieStore,toastr,$state,$filter){$scope.dateOptions={formatYear:"yy",startingDay:1},$scope.position=localStorageService.get("position"),$scope.listDepartmentChoose=[],$scope.listEmployeeChoose=[],$scope.listDept=[],$scope.listEmp=[],$scope.isHavedata=0,$scope.ListNew=function(listNew){void 0!==listNew&&null!==listNew&&0!==listNew.length&&(listNew[0].isStaff=$scope.isStaff,listNew[0].USER_ID=$cookieStore.get("userInfo").id,TimeSheetService.LoadEmpReport(listNew).then(function(response){if("success"===response.status){var arrayEmp=[];angular.forEach(response.result,function(emp,index){arrayEmp.push({id:emp.Employee_ID,label:emp.FirstName+" "+emp.LastName})}),$scope.listEmp=angular.copy(arrayEmp),$scope.listEmployeeChoose=[]}else"error"===response.status?($state.go("loggedIn.home",null,{reload:!0}),toastr.error("Loading employee fail!","Error")):($state.go("loggedIn.home",null,{reload:!0}),toastr.error("Server not response!","Error"))}))},$scope.getWeekNumber=function(d){d=new Date(+d),d.setHours(0,0,0),d.setDate(d.getDate()+4-(d.getDay()||7));var yearStart=new Date(d.getFullYear(),0,1),weekNo=Math.ceil(((d-yearStart)/864e5+1)/7);return weekNo},$scope.changeDate=function(){$scope.changeEmp($scope.listEmployeeChoose)},$scope.changeEmp=function(list){if(void 0!==$scope.dateWeekFrom&&null!==$scope.dateWeekFrom&&""!==$scope.dateWeekFrom&&void 0!==$scope.dateWeekTo&&null!==$scope.dateWeekTo&&""!==$scope.dateWeekTo&&0!==$scope.listEmployeeChoose.length){$scope.isHavedata=1;var info={},weekNoFrom=$scope.dateWeekFrom,weekNoTo=$scope.dateWeekTo;info.weekNoFrom=$scope.getWeekNumber(weekNoFrom),info.weekNoTo=$scope.getWeekNumber(weekNoTo),info.listEMP=angular.copy($scope.listEmployeeChoose),info.USER_ID=void 0!==$cookieStore.get("userInfo")?$cookieStore.get("userInfo").id:null,info.weekFrom=$scope.dateWeekFrom,info.weekTo=$scope.dateWeekTo,info.listDept=$scope.listDepartmentChoose,info.weekNoFrom=$scope.getWeekNumber(weekNoFrom),TimeSheetService.LoadReportUtilizationRatioSumary(info).then(function(response){"success"===response.status?$scope.USER_ID=void 0!==$cookieStore.get("userInfo")?$cookieStore.get("userInfo").id:null:"error"===response.status?($state.go("loggedIn.home",null,{reload:!0}),toastr.error("Loading reports fail!","Error")):"null"===response.status?($scope.isHavedata=0,toastr.error("No Data!!!!","Error")):($state.go("loggedIn.home",null,{reload:!0}),toastr.error("Server not response!","Error"))})}},TimeSheetService.LoadDeptReport($cookieStore.get("userInfo").id).then(function(response){"error"===response.status?($state.go("loggedIn.home",null,{reload:!0}),toastr.error("Load Department fail!","Error")):"success"===response.status?($scope.listDept=response.result,$scope.isStaff=response.isStaff):($state.go("loggedIn.home",null,{reload:!0}),toastr.error("Server not response!","Error"))}),$scope.translationTextDept={},$scope.translationTextDept={checkAll:"Check All",uncheckAll:"Uncheck All",selectionCount:"Department Selected",selectionOf:"/",nameAddon:"Director"===$scope.position?"Departments":"Department",searchPlaceholder:"Search...",buttonDefaultText:"--Choose Department--",dynamicButtonTextSuffix:"Department Selected"},$scope.searchDept={enableSearch:!0},$scope.searchEmp={enableSearch:!0},$scope.translationTextEmp={},$scope.translationTextEmp={checkAll:"Check All",uncheckAll:"Uncheck All",selectionCount:"Employee Selected",selectionOf:"/",nameAddon:"Director"===$scope.position||"Head of Dept."===$scope.position?"Employees":"Employee",searchPlaceholder:"Search...",buttonDefaultText:"--Choose Employee--",dynamicButtonTextSuffix:"Employee Selected"}}),angular.module("app.loggedIn.TimeSheet.Report4.Controller",[]).controller("Report4Controller",function($scope,localStorageService,StaffService,TimeSheetService,$cookieStore,toastr,$state,$filter){$scope.dateOptions={formatYear:"yy",startingDay:1},$scope.position=localStorageService.get("position"),$scope.listDepartmentChoose=[],$scope.listEmployeeChoose=[],$scope.listDept=[],$scope.listEmp=[],$scope.ListNew=function(listNew){void 0!==listNew&&null!==listNew&&0!==listNew.length?TimeSheetService.LoadEmpReport(listNew).then(function(response){if("success"===response.status){var arrayEmp=[];angular.forEach(response.result,function(emp,index){arrayEmp.push({id:emp.Employee_ID,label:emp.FirstName+" "+emp.LastName})}),$scope.listEmp=angular.copy(arrayEmp),$scope.listEmployeeChoose=[]}else"error"===response.status?($state.go("loggedIn.home",null,{reload:!0}),toastr.error("Loading employee fail!","Error")):($state.go("loggedIn.home",null,{reload:!0}),toastr.error("Server not response!","Error"))}):$scope.listEmployeeChoose=[]},$scope.getWeekNumber=function(d){d=new Date(+d),d.setHours(0,0,0),d.setDate(d.getDate()+4-(d.getDay()||7));var yearStart=new Date(d.getFullYear(),0,1),weekNo=Math.ceil(((d-yearStart)/864e5+1)/7);return weekNo},$scope.changeDate=function(){$scope.changeEmp($scope.listEmployeeChoose)},$scope.changeEmp=function(list){if(void 0!==$scope.dateWeekFrom&&null!==$scope.dateWeekFrom&&""!==$scope.dateWeekFrom&&void 0!==$scope.dateWeekTo&&null!==$scope.dateWeekTo&&""!==$scope.dateWeekTo&&0!==$scope.listEmployeeChoose.length){{var info={};$scope.dateWeekFrom,$scope.dateWeekTo}info.listEMP=angular.copy($scope.listEmployeeChoose),info.USER_ID=void 0!==$cookieStore.get("userInfo")?$cookieStore.get("userInfo").id:null,info.dateWeekFrom=$scope.dateWeekFrom,info.dateWeekTo=$scope.dateWeekTo,info.listDept=$scope.listDepartmentChoose,TimeSheetService.LoadReportOnActualWorking(info).then(function(response){"success"===response.status?($scope.USER_ID=void 0!==$cookieStore.get("userInfo")?$cookieStore.get("userInfo").id:null,$scope.disabledPrint=!1):"error"===response.status?($state.go("loggedIn.home",null,{reload:!0}),toastr.error("Loading reports fail!","Error")):"dataNull"===response.status?(toastr.error("Not data!","Error"),$scope.disabledPrint=!0):($state.go("loggedIn.home",null,{reload:!0}),toastr.error("Server not response!","Error"))})}},TimeSheetService.LoadDeptReport($cookieStore.get("userInfo").id).then(function(response){"error"===response.status?($state.go("loggedIn.home",null,{reload:!0}),toastr.error("Load Department fail!","Error")):"success"===response.status?$scope.listDept=response.result:($state.go("loggedIn.home",null,{reload:!0}),toastr.error("Server not response!","Error"))}),$scope.translationTextDept={},$scope.translationTextDept={checkAll:"Check All",uncheckAll:"Uncheck All",selectionCount:"Department Selected",selectionOf:"/",nameAddon:"Director"===$scope.position?"Departments":"Department",searchPlaceholder:"Search...",buttonDefaultText:"--Choose Department--",dynamicButtonTextSuffix:"Department Selected"},$scope.searchDept={enableSearch:!0},$scope.searchEmp={enableSearch:!0},$scope.translationTextEmp={},$scope.translationTextEmp={checkAll:"Check All",uncheckAll:"Uncheck All",selectionCount:"Employee Selected",selectionOf:"/",nameAddon:"Director"===$scope.position||"Head of Dept."===$scope.position?"Employees":"Employee",searchPlaceholder:"Search...",buttonDefaultText:"--Choose Employee--",dynamicButtonTextSuffix:"Employee Selected"}}),angular.module("app.loggedIn.TimeSheet.Report5.Controller",[]).controller("Report5Controller",function($scope,localStorageService,StaffService,TimeSheetService,$cookieStore,toastr,$state,$filter){$scope.dateOptions={formatYear:"yy",startingDay:1},$scope.position=localStorageService.get("position"),$scope.listDepartmentChoose=[],$scope.listEmployeeChoose=[],$scope.listDept=[],$scope.listEmp=[],$scope.ListNew=function(listNew){void 0!==listNew&&null!==listNew&&0!==listNew.length?TimeSheetService.LoadEmpReport(listNew).then(function(response){if("success"===response.status){var arrayEmp=[];angular.forEach(response.result,function(emp,index){arrayEmp.push({id:emp.Employee_ID,label:emp.FirstName+" "+emp.LastName})}),$scope.listEmp=angular.copy(arrayEmp),$scope.listEmployeeChoose=[]}else"error"===response.status?($state.go("loggedIn.home",null,{reload:!0}),toastr.error("Loading employee fail!","Error")):($state.go("loggedIn.home",null,{reload:!0}),toastr.error("Server not response!","Error"))}):$scope.listEmployeeChoose=[]},$scope.getWeekNumber=function(d){d=new Date(+d),d.setHours(0,0,0),d.setDate(d.getDate()+4-(d.getDay()||7));var yearStart=new Date(d.getFullYear(),0,1),weekNo=Math.ceil(((d-yearStart)/864e5+1)/7);return weekNo},$scope.changeDate=function(){$scope.changeEmp($scope.listEmployeeChoose)},$scope.changeEmp=function(list){if(void 0!==$scope.dateWeekFrom&&null!==$scope.dateWeekFrom&&""!==$scope.dateWeekFrom&&void 0!==$scope.dateWeekTo&&null!==$scope.dateWeekTo&&""!==$scope.dateWeekTo&&0!==$scope.listEmployeeChoose.length){{var info={};$scope.dateWeekFrom,$scope.dateWeekTo}info.listEMP=angular.copy($scope.listEmployeeChoose),info.USER_ID=void 0!==$cookieStore.get("userInfo")?$cookieStore.get("userInfo").id:null,info.dateWeekFrom=$scope.dateWeekFrom,info.dateWeekTo=$scope.dateWeekTo,info.listDept=$scope.listDepartmentChoose,TimeSheetService.LoadReportOnActualWorking(info).then(function(response){"success"===response.status?$scope.USER_ID=void 0!==$cookieStore.get("userInfo")?$cookieStore.get("userInfo").id:null:"error"===response.status?($state.go("loggedIn.home",null,{reload:!0}),toastr.error("Loading reports fail!","Error")):"dataNull"===response.status?(toastr.error("Not data!","Error"),$scope.disabledPrint=!0):($state.go("loggedIn.home",null,{reload:!0}),toastr.error("Server not response!","Error"))})}},TimeSheetService.LoadDeptReport($cookieStore.get("userInfo").id).then(function(response){"error"===response.status?($state.go("loggedIn.home",null,{reload:!0}),toastr.error("Load Department fail!","Error")):"success"===response.status?$scope.listDept=response.result:($state.go("loggedIn.home",null,{reload:!0}),toastr.error("Server not response!","Error"))}),$scope.translationTextDept={},$scope.translationTextDept={checkAll:"Check All",uncheckAll:"Uncheck All",selectionCount:"Department Selected",selectionOf:"/",nameAddon:"Director"===$scope.position?"Departments":"Department",searchPlaceholder:"Search...",buttonDefaultText:"--Choose Department--",dynamicButtonTextSuffix:"Department Selected"},$scope.searchDept={enableSearch:!0},$scope.searchEmp={enableSearch:!0},$scope.translationTextEmp={},$scope.translationTextEmp={checkAll:"Check All",uncheckAll:"Uncheck All",selectionCount:"Employee Selected",selectionOf:"/",nameAddon:"Director"===$scope.position||"Head of Dept."===$scope.position?"Employees":"Employee",searchPlaceholder:"Search...",buttonDefaultText:"--Choose Employee--",dynamicButtonTextSuffix:"Employee Selected"}}),angular.module("app.loggedIn.TimeSheet.Report6.Controller",[]).controller("Report6Controller",function($scope,localStorageService,StaffService,TimeSheetService,$cookieStore,toastr,$state,$filter){$scope.dateOptions={formatYear:"yy",startingDay:1},$scope.position=localStorageService.get("position"),$scope.listDepartmentChoose=[],$scope.listEmployeeChoose=[],$scope.listDept=[],$scope.listEmp=[],$scope.ListNew=function(listNew){void 0!==listNew&&null!==listNew&&0!==listNew.length&&(listNew[0].isStaff=$scope.isStaff,listNew[0].USER_ID=$cookieStore.get("userInfo").id,TimeSheetService.LoadEmpReport(listNew).then(function(response){if("success"===response.status){var arrayEmp=[];angular.forEach(response.result,function(emp,index){arrayEmp.push({id:emp.Employee_ID,label:emp.FirstName+" "+emp.LastName})}),$scope.listEmp=angular.copy(arrayEmp),$scope.listEmployeeChoose=[]}else"error"===response.status?($state.go("loggedIn.home",null,{reload:!0}),toastr.error("Loading employee fail!","Error")):($state.go("loggedIn.home",null,{reload:!0}),toastr.error("Server not response!","Error"))}))},$scope.getWeekNumber=function(d){d=new Date(+d),d.setHours(0,0,0),d.setDate(d.getDate()+4-(d.getDay()||7));var yearStart=new Date(d.getFullYear(),0,1),weekNo=Math.ceil(((d-yearStart)/864e5+1)/7);return weekNo},$scope.changeDate=function(){$scope.changeEmp($scope.listEmployeeChoose)},$scope.changeEmp=function(list){if(void 0!==$scope.dateWeekFrom&&null!==$scope.dateWeekFrom&&""!==$scope.dateWeekFrom&&void 0!==$scope.dateWeekTo&&null!==$scope.dateWeekTo&&""!==$scope.dateWeekTo&&0!==$scope.listEmployeeChoose.length){var info={};info.listEMP=angular.copy($scope.listEmployeeChoose),info.USER_ID=void 0!==$cookieStore.get("userInfo")?$cookieStore.get("userInfo").id:null,info.dateWeekFrom=$scope.dateWeekFrom,info.dateWeekTo=$scope.dateWeekTo,info.listDept=angular.copy($scope.listDepartmentChoose),TimeSheetService.LoadReportItemNumber(info).then(function(response){"success"===response.status?($scope.USER_ID=void 0!==$cookieStore.get("userInfo")?$cookieStore.get("userInfo").id:null,$scope.disabledPrint=!1):"dataNull"===response.status?(toastr.error("Not data!","Error"),$scope.disabledPrint=!0):"error"===response.status?($state.go("loggedIn.home",null,{reload:!0}),toastr.error("Loading reports fail!","Error")):($state.go("loggedIn.home",null,{reload:!0}),toastr.error("Server not response!","Error"))})}},TimeSheetService.LoadDeptReport($cookieStore.get("userInfo").id).then(function(response){"error"===response.status?($state.go("loggedIn.home",null,{reload:!0}),toastr.error("Load Department fail!","Error")):"success"===response.status?($scope.listDept=response.result,$scope.isStaff=response.isStaff):($state.go("loggedIn.home",null,{reload:!0}),toastr.error("Server not response!","Error"))}),$scope.translationTextDept={},$scope.translationTextDept={checkAll:"Check All",uncheckAll:"Uncheck All",selectionCount:"Department Selected",selectionOf:"/",nameAddon:"Director"===$scope.position?"Departments":"Department",searchPlaceholder:"Search...",buttonDefaultText:"--Choose Department--",dynamicButtonTextSuffix:"Department Selected"},$scope.searchDept={enableSearch:!0},$scope.searchEmp={enableSearch:!0},$scope.translationTextEmp={},$scope.translationTextEmp={checkAll:"Check All",uncheckAll:"Uncheck All",selectionCount:"Employee Selected",selectionOf:"/",nameAddon:"Director"===$scope.position||"Head of Dept."===$scope.position?"Employees":"Employee",searchPlaceholder:"Search...",buttonDefaultText:"--Choose Employee--",dynamicButtonTextSuffix:"Employee Selected"}}),angular.module("app.loggedIn.TimeSheet",["app.loggedIn.TimeSheet.Home.Controller","app.loggedIn.TimeSheet.Directives","app.loggedIn.TimeSheet.Service","app.loggedIn.staff.service"]).config(function($stateProvider){$stateProvider.state("loggedIn.timesheetHome",{"abstract":!0,url:"/timesheet",templateUrl:"modules/TimeSheet/views/structure.html"}).state("loggedIn.timesheetHome.timesheetApprove",{position:["Head of Dept.","Director"],url:"/approve-timesheet",views:{"main-content":{templateUrl:"modules/TimeSheet/views/ApproveTask.html",controller:"ApproveTask"}}}).state("loggedIn.timesheetHome.timesheetReport1",{url:"/report/time-in-lieu",views:{"main-content":{templateUrl:"modules/TimeSheet/views/Report1.html",controller:"Report1Controller"}}}).state("loggedIn.timesheetHome.timesheetReport2",{url:"/report/utilization-ratio-detail",views:{"main-content":{templateUrl:"modules/TimeSheet/views/Report2.html",controller:"Report2Controller"}}}).state("loggedIn.timesheetHome.timesheetReport3",{url:"/report/utilization-ratio-summary",views:{"main-content":{templateUrl:"modules/TimeSheet/views/Report3.html",controller:"Report3Controller"}}}).state("loggedIn.timesheetHome.timesheetReport4",{url:"/report/actual-working-hours",views:{"main-content":{templateUrl:"modules/TimeSheet/views/Report4.html",controller:"Report4Controller"}}}).state("loggedIn.timesheetHome.timesheetReport5",{url:"/report/actual-working-ratio",views:{"main-content":{templateUrl:"modules/TimeSheet/views/Report5.html",controller:"Report5Controller"}}}).state("loggedIn.timesheetHome.timesheetReport6",{url:"/report/item-number",views:{"main-content":{templateUrl:"modules/TimeSheet/views/Report6.html",controller:"Report6Controller"}}}).state("loggedIn.timesheetHome.leaveCreate",{position:["Staff","Head of Dept."],url:"/create-leave/:id",views:{"main-content":{templateUrl:"modules/TimeSheet/views/CreateLeave.html",controller:"CreateLeaveController"}}}).state("loggedIn.timesheetHome.leaveHistory",{position:["Staff","Head of Dept."],url:"/historry-leave",views:{"main-content":{templateUrl:"modules/TimeSheet/views/HistoryLeave.html",controller:"HistoryLeaveController"}}}).state("loggedIn.timesheetHome.leaveApprove",{position:["Head of Dept.","Director"],url:"/approve-leave",views:{"main-content":{templateUrl:"modules/TimeSheet/views/ApproveLeave.html",controller:"ApproveLeaveController"}}}).state("loggedIn.timesheetHome.leaveReportOwe",{position:["Head of Dept.","Director"],url:"/report/unsubmitted-leave-form",views:{"main-content":{templateUrl:"modules/TimeSheet/views/ReportOweLeave.html",controller:"ReportOweLeave"}}}).state("loggedIn.timesheetHome.timesheetHistory",{position:["Staff","Head of Dept."],url:"/view-timesheet",views:{"main-content":{templateUrl:"modules/TimeSheet/views/viewTimesheet.html",controller:"TimesheetViewController"}}}).state("loggedIn.timesheetHome.timesheetCreate",{position:["Staff","Head of Dept."],url:"/create-timesheet/:id",views:{"main-content":{templateUrl:"modules/TimeSheet/views/createTimesheet.html",controller:"TimesheetCreateController"}}})}),angular.module("app.loggedIn.TimeSheet.ApproveTask.Controller",[]).controller("ApproveTask",function($scope,$modal,TimeSheetService,toastr,$state,MODE_ROW,$cookieStore){$scope.listStatus=[{code:2,name:"Awaiting for Approve"},{code:3,name:"Approved"},{code:4,name:"Rejected"},{code:5,name:"Re-submitted"}],$scope.setPage=function(){$scope.searchObjectMap.offset=($scope.searchObjectMap.currentPage-1)*$scope.searchObjectMap.limit,$scope.loadList()},$scope.reset=function(){$scope.searchObjectMap=angular.copy($scope.searchObject),$scope.loadList()},$scope.loadList=function(){TimeSheetService.LoadTimeSheetApprove($scope.searchObjectMap).then(function(response){"success"==response.status?$scope.list=response:"error"===response.status?($state.go("loggedIn.home",null,{reload:!0}),toastr.error("Loading fail!","Error")):($state.go("loggedIn.home",null,{reload:!0}),toastr.error("Server not response!","Error"))})};var init=function(){$scope.searchObject={offset:0,limit:10,currentPage:1,maxSize:5,USER_ID:$cookieStore.get("userInfo").id,order:{"time_tasks_week.date_submited":null,"time_tasks_week.week_no":"DESC"},select:{"time_tasks_week.week_no":null,"hr_employee.Employee_ID":null},data:{"hr_employee.Employee_Code":null},name:{nameEmployee:null}},$scope.searchObjectMap=angular.copy($scope.searchObject),$scope.list={},$scope.rows=MODE_ROW,$scope.loadList()};init(),$scope.weekNoASC=function(){$scope.searchObjectMap.order["time_tasks_week.date_submited"]=null,$scope.searchObjectMap.order["time_tasks_week.week_no"]="ASC",$scope.loadList()},$scope.weekNoDESC=function(){$scope.searchObjectMap.order["time_tasks_week.date_submited"]=null,$scope.searchObjectMap.order["time_tasks_week.week_no"]="DESC",$scope.loadList()},$scope.dateSubmitedASC=function(){$scope.searchObjectMap.order["time_tasks_week.date_submited"]="ASC",$scope.searchObjectMap.order["time_tasks_week.week_no"]=null,$scope.loadList()},$scope.dateSubmitedDESC=function(){$scope.searchObjectMap.order["time_tasks_week.date_submited"]="DESC",$scope.searchObjectMap.order["time_tasks_week.week_no"]=null,$scope.loadList()};var dialogViewTask=function(idTaskWeek){var modalInstance=$modal.open({templateUrl:"ViewTask",controller:function($scope){$scope.infoTaskWeek=idTaskWeek,$scope.clickCancel=function(info){void 0!==info.clickCancel&&null!==info.clickCancel||void 0!==info.isReject&&null!==info.isReject||info.isApprove===!0?$scope.infoTaskWeek="cancelOn":modalInstance.close({status:"cancel"})},$scope.clickReject=function(info){void 0===info.isReject||null===info.isReject?$scope.infoTaskWeek="reject":info.isReject===!0&&TimeSheetService.RejectTaskWeek(info).then(function(response){"success"===response.status?(modalInstance.close(),$state.go("loggedIn.timesheetHome.timesheetApprove",null,{reload:!0}),toastr.success("Reject success!","Success")):"error"===response.status?(modalInstance.close(),$state.go("loggedIn.timesheetHome.timesheetApprove",null,{reload:!0}),toastr.error("Reject fail!","Error")):(modalInstance.close(),$state.go("loggedIn.home",null,{reload:!0}),toastr.error("Server not response!","Error"))})},$scope.clickApprove=function(info){null!==info.time_rest&&0!=info.time_rest&&""!==info.time_rest&&info.isApprove!==!0?$scope.infoTaskWeek="chooseApprove":info.forPermission===!1?swal({title:"Warning!",text:"Please noted that the Leave Form has not yet been submitted/approved. Do you want to approve this Timesheet?",type:"warning",showCancelButton:!0,confirmButtonColor:"#DD6B55",confirmButtonText:"Yes",closeOnConfirm:!0},function(isConfirm){isConfirm&&TimeSheetService.ApproveTaskWeek(info).then(function(response){"success"===response.status?(modalInstance.close(),$state.go("loggedIn.timesheetHome.timesheetApprove",null,{reload:!0}),toastr.success("Approve success!","Success")):"error"===response.status?(modalInstance.close(),$state.go("loggedIn.timesheetHome.timesheetApprove",null,{reload:!0}),toastr.error("Approve fail!","Error")):"error-erp"===response.status?(modalInstance.close(),swal("Enterprise Resource Planning system not response, Please try again!")):(modalInstance.close(),$state.go("loggedIn.home",null,{reload:!0}),toastr.error("Server not response!","Error"))})}):TimeSheetService.ApproveTaskWeek(info).then(function(response){"success"===response.status?(modalInstance.close(),$state.go("loggedIn.timesheetHome.timesheetApprove",null,{reload:!0}),toastr.success("Approve success!","Success")):"error"===response.status?(modalInstance.close(),$state.go("loggedIn.timesheetHome.timesheetApprove",null,{reload:!0}),toastr.error("Approve fail!","Error")):"error-erp"===response.status?(modalInstance.close(),swal("Enterprise Resource Planning system not response, Please try again!")):(modalInstance.close(),$state.go("loggedIn.home",null,{reload:!0}),toastr.error("Server not response!","Error"))})}},size:"lg"})};$scope.viewTask=function(idTaskWeek){dialogViewTask(idTaskWeek)}}),angular.module("app.loggedIn.TimeSheet.CreateLeave.Controller",[]).controller("CreateLeaveController",function($scope,TimeSheetService,$cookieStore,$state,toastr,$modal,StaffService,$stateParams){if($scope.info={},$scope.dateOptions={formatYear:"yy",startingDate:1},$stateParams.id){$scope.isEdit=!0;var info={idLeave:$stateParams.id,userId:$cookieStore.get("userInfo").id};TimeSheetService.LoadLeaveEdit(info).then(function(response){"success"===response.status?(void 0!==response&&null!==response&&void 0!==response.resultLeave&&null!==response.resultLeave&&0!==response.resultLeave.length&&void 0!==response.resultLeave[0]&&null!==response.resultLeave[0]&&($scope.info=response.resultLeave[0],$scope.is_reject=response.resultLeave[0].is_reject,$scope.status_id=response.resultLeave[0].status_id,$scope.info.time_leave=StaffService.convertFromFullToShow($scope.info.time_leave)),$scope.info.infoTypeLeave=response.resultLeaveDetail,angular.forEach($scope.info.infoTypeLeave,function(leave,index){void 0===$scope.info.infoTypeLeave[index]||null===$scope.info.infoTypeLeave[index]||void 0===$scope.info.infoTypeLeave[index].time_leave||null===$scope.info.infoTypeLeave[index].time_leave||0===$scope.info.infoTypeLeave[index].time_leave||isNaN($scope.info.infoTypeLeave[index].time_leave)||($scope.info.infoTypeLeave[index].time_leave=StaffService.convertFromFullToShow($scope.info.infoTypeLeave[index].time_leave),0===index&&4===$scope.info.infoTypeLeave[index].time_leave.length&&0===$scope.info.standard&&($scope.info.infoTypeLeave[index].time_leave="0"+$scope.info.infoTypeLeave[index].time_leave))}),$scope.changeTime()):($state.go("loggedIn.home",null,{reload:!0}),toastr.error("Load fail!","Error"))})}else $scope.isEdit=!1,void 0!==$cookieStore.get("userInfo")&&null!==$cookieStore.get("userInfo")&&void 0!==$cookieStore.get("userInfo").id&&null!==$cookieStore.get("userInfo").id?TimeSheetService.LoadInfoEmployee($cookieStore.get("userInfo").id).then(function(response){
"success"===response.status?void 0!==response&&null!==response&&void 0!==response.resultEmployee&&null!==response.resultEmployee&&void 0!==response.resultEmployee[0]&&null!==response.resultEmployee[0]&&($scope.info=response.resultEmployee[0],$scope.info.standard=1,$scope.info.application_date=new Date,$scope.info.infoTypeLeave=angular.copy(response.resultTypeLeave)):"error"===response.status||0===response.result.length?($state.go("loggedIn.home",null,{reload:!0}),toastr("Load infomation employee fail!","Error")):($state.go("loggedIn.home",null,{reload:!0}),toastr("Server not response!","Error"))}):($state.go("loggedIn.login",null,{reload:!0}),toastr.error("You not section!","Error"));$scope.clickSendServer=function(statusID,formLeave){$scope.isRequired=1,formLeave.$invalid?toastr.error("Please Input All Required Information!","Error"):0===$scope.info.time_leave_real||void 0===$scope.info.time_leave||null===$scope.info.time_leave||0===$scope.info.time_leave.length?toastr.error("You must sign time leave!","Error"):void 0!==$scope.info.time_leave_real&&void 0!==$scope.info.standard&&($scope.info.time_leave_real>4560&&1===$scope.info.standard||$scope.info.time_leave_real<=4560&&0===$scope.info.standard)?toastr.warning("Please make sure you have chosen the right type of Leave Form (Standard/Non-Standard).","Warning"):($scope.info.statusID=statusID,$scope.info.USER_ID=void 0!==$cookieStore.get("userInfo")?$cookieStore.get("userInfo").id:null,$scope.isEdit===!1?TimeSheetService.UpLeaveServer($scope.info).then(function(response){"success"===response.status?(toastr.success("Apply leave success!","Success"),$state.go("loggedIn.timesheetHome.leaveHistory",null,{reload:!0})):"error"===response.status?($state.go("loggedIn.home",null,{reload:!0}),toastr.error("Apply leave fail!","Error")):($state.go("loggedIn.home",null,{reload:!0}),toastr.error("Server not response!","Error"))}):$scope.isEdit===!0&&TimeSheetService.UpdateLeave($scope.info).then(function(response){"success"===response.status?($state.go("loggedIn.timesheetHome.leaveHistory",null,{reload:!0}),toastr.success("Update leave success!","Success")):"error"===response.status?toastr.error("Update leave fail!","Error"):($state.go("loggedIn.home",null,{reload:!0}),toastr.error("Server not response!","Error"))}))},$scope.changeTime=function(){var total_time=0;angular.forEach($scope.info.infoTypeLeave,function(time,index){total_time+=StaffService.convertShowToFull($scope.info.infoTypeLeave[index].time_leave),$scope.info.infoTypeLeave[index].time_leave_real=StaffService.convertShowToFull($scope.info.infoTypeLeave[index].time_leave)}),$scope.info.time_leave=StaffService.convertFromFullToShow(total_time),$scope.info.time_leave_real=StaffService.convertShowToFull($scope.info.time_leave),0===total_time&&($scope.info.time_leave=null)},$scope.clickStandardChange=function(standardID){1===standardID?void 0!==$scope.info.infoTypeLeave&&null!==$scope.info.infoTypeLeave&&void 0!==$scope.info.infoTypeLeave[0]&&null!==$scope.info.infoTypeLeave[0]&&void 0!==$scope.info.infoTypeLeave[0].time_leave&&null!==$scope.info.infoTypeLeave[0].time_leave&&5===$scope.info.infoTypeLeave[0].time_leave.length&&($scope.info.infoTypeLeave[0].time_leave=$scope.info.infoTypeLeave[0].time_leave.substr(1,$scope.info.infoTypeLeave[0].time_leave.length-1),$scope.changeTime()):0===standardID&&void 0!==$scope.info.infoTypeLeave&&null!==$scope.info.infoTypeLeave&&void 0!==$scope.info.infoTypeLeave[0]&&null!==$scope.info.infoTypeLeave[0]&&void 0!==$scope.info.infoTypeLeave[0].time_leave&&null!==$scope.info.infoTypeLeave[0].time_leave&&4===$scope.info.infoTypeLeave[0].time_leave.length&&($scope.info.infoTypeLeave[0].time_leave="0"+$scope.info.infoTypeLeave[0].time_leave,$scope.changeTime())},$scope.checkLeaveExist=function(){void 0!==$scope.info.start_date&&null!==$scope.info.start_date&&0!==$scope.info.start_date.length&&void 0!==$scope.info.finish_date&&null!==$scope.info.finish_date&&0!==$scope.info.finish_date.length&&TimeSheetService.CheckLeave($cookieStore.get("userInfo").id).then(function(response){if("success"===response.status){var currentStartDate=moment(moment($scope.info.start_date).format("YYYY-MM-DD")).format("X"),currentFinishDate=moment(moment($scope.info.finish_date).format("YYYY-MM-DD")).format("X"),arrayTime=angular.copy(response.result);angular.forEach(arrayTime,function(timeRange,index){var startDate=moment(moment(timeRange.start_date).format("YYYY-MM-DD")).format("X"),finishDate=moment(moment(timeRange.finish_date).format("YYYY-MM-DD")).format("X");currentStartDate>=startDate&&finishDate>=currentStartDate&&finishDate>=currentFinishDate&&currentFinishDate>=startDate&&swal({title:"Time leave is exist!",text:"Do you want view history!",type:"warning",showCancelButton:!0,confirmButtonColor:"#DD6B55",confirmButtonText:"Yes",closeOnConfirm:!0},function(isConfirm){isConfirm?$state.go("loggedIn.timesheetHome.leaveHistory",null,{reload:!0}):($scope.info.start_date=null,$scope.info.finish_date=null)})})}})}}),angular.module("app.loggedIn.TimeSheet.HistoryLeave.Controller",[]).controller("HistoryLeaveController",function($scope,TimeSheetService,$cookieStore,toastr,$state,MODE_ROW,$modal,$stateParams){$scope.reset=function(){$scope.searchObjectMap=angular.copy($scope.searchObject),$scope.loadList()},$scope.setPage=function(){$scope.searchObjectMap.offset=($scope.searchObjectMap.currentPage-1)*$scope.searchObjectMap.limit,$scope.loadList()},$scope.loadList=function(){TimeSheetService.LoadHistoryLeave($scope.searchObjectMap).then(function(response){$scope.list=response,$scope.count=void 0!==response.count&&null!==response.count?response.count:0,$scope.listStatus=response.resultStatus})};var init=function(){$scope.searchObject={limit:5,offset:0,currentPage:1,maxSize:5,USER_ID:void 0!==$cookieStore.get("userInfo")?$cookieStore.get("userInfo").id:null,select:{"hr_leave.status_id":""},order:{0:"DESC"}},$scope.rows=MODE_ROW,$scope.searchObjectMap=angular.copy($scope.searchObject),$scope.list={},$scope.loadList()};init(),$scope.view=function(id){var modalInstance=$modal.open({templateUrl:"ViewLeave",controller:function($scope){$scope.idView=id,$scope.clickCancel=function(value){modalInstance.close()},$scope.clickSubmitAgain=function(statusID,leaveID){var info={statusID:statusID,leaveID:leaveID,userID:$cookieStore.get("userInfo").id};TimeSheetService.SubmitOnViewLeave(info).then(function(response){"success"===response.status?(modalInstance.close(),$state.go("loggedIn.timesheetHome.leaveHistory",null,{reload:!0}),toastr.success("Submit success!","Success")):"error"===response.status?($state.go("loggedIn.home",null,{reload:!0}),toastr.error("Submit fail!","Error")):($state.go("loggedIn.home",null,{reload:!0}),toastr.error("Server not response!","Error"))})},$scope.clickEdit=function(leaveID){modalInstance.close(),$state.go("loggedIn.timesheetHome.leaveCreate",{id:leaveID})}},size:"lg"})},$scope.clickAsc=function(){$scope.searchObjectMap.order[0]="ASC",$scope.loadList()},$scope.clickDesc=function(){$scope.searchObjectMap.order[0]="DESC",$scope.loadList()},$scope.getStyle=function(timeLeave){return timeLeave>=6e3?{"margin-right":"5px"}:void 0}}),angular.module("app.loggedIn.TimeSheet.ApproveLeave.Controller",[]).controller("ApproveLeaveController",function($scope,MODE_ROW,$modal,toastr,$state,TimeSheetService,$cookieStore){$scope.listStatus=[{code:2,name:"Awaiting for Approve"},{code:3,name:"Approved"},{code:4,name:"Rejected"},{code:5,name:"Re-submitted"}],$scope.setPage=function(){$scope.searchObjectMap.offset=($scope.searchObjectMap.currentPage-1)*$scope.searchObjectMap.limit,$scope.loadList()},$scope.reset=function(){$scope.searchObjectMap=angular.copy($scope.searchObject),$scope.loadList()},$scope.loadList=function(){TimeSheetService.LoadLeaveApprove($scope.searchObjectMap).then(function(response){"success"===response.status?($scope.list=response,$scope.count=response.count):"error"===response.status?($state.go("loggedIn.home",null,{reload:!0}),toastr.error("Loading leave fail!","Error")):($state.go("loggedIn.home",null,{reload:!0}),toastr.error("Server not response!","Error"))})},$scope.clickAsc=function(){$scope.searchObjectMap.order[0]="ASC",$scope.loadList()},$scope.clickDesc=function(){$scope.searchObjectMap.order[0]="DESC",$scope.loadList()},$scope.view=function(idView){var modalInstance=$modal.open({templateUrl:"ViewLeaveApprove",controller:function($scope){$scope.idView=idView,$scope.clickCancel=function(value){void 0!==value&&null!==value&&value.isReject===!0?$scope.idView=value.leaveID:modalInstance.close()},$scope.clickReject=function(value){void 0!==value&&null!==value&&value.isReject===!1?$scope.idView="clickReject":void 0!==value&&null!==value&&value.isReject===!0&&TimeSheetService.RejectLeave(value).then(function(response){"success"===response.status?(modalInstance.close(),$state.go("loggedIn.timesheetHome.leaveApprove",null,{reload:!0}),toastr.success("Reject leave success!","Success")):"error"===response.status?(modalInstance.close(),$state.go("loggedIn.timesheetHome.leaveApprove",null,{reload:!0}),toastr.error("Reject leave fail!","Error")):(modalInstance.close(),$state.go("loggedIn.timesheetHome.leaveApprove",null,{reload:!0}),toastr.error("Server not response!","Error"))})},$scope.clickApprove=function(value){TimeSheetService.ApproveLeave(value).then(function(response){"success"===response.status?(modalInstance.close(),$state.go("loggedIn.timesheetHome.leaveApprove",null,{reload:!0}),toastr.success("Approve leave success!","Success")):"error"===response.status?(modalInstance.close(),$state.go("loggedIn.timesheetHome.leaveApprove",null,{reload:!0}),toastr.error("Approve leave fail!","Error")):(modalInstance.close(),$state.go("loggedIn.timesheetHome.leaveApprove",null,{reload:!0}),toastr.error("Server not response!","Error"))})}},size:"lg"})};var init=function(){$scope.searchObject={limit:5,offset:0,currentPage:1,maxSize:5,USER_ID:void 0!==$cookieStore.get("userInfo")?$cookieStore.get("userInfo").id:null,search:{0:null},order:{0:"DESC"},select:{0:null}},$scope.searchObjectMap=angular.copy($scope.searchObject),$scope.list={},$scope.rows=MODE_ROW,$scope.loadList()};init(),$scope.getStyle=function(timeLeave){return timeLeave>=6e3?{"margin-right":"5px"}:void 0}}),angular.module("app.loggedIn.TimeSheet.ViewLeave.Directive",[]).directive("viewLeave",function(TimeSheetService,$cookieStore){return{restrict:"EA",required:"ngModel",scope:{onCancel:"&",onEdit:"&",onSubmitagain:"&",ngModel:"="},link:function(scope,attrs,elem){scope.$watch("ngModel",function(newModel,oldModel){if(void 0!==newModel&&null!==newModel&&!isNaN(newModel)){var info={leave_id:newModel,user_id:$cookieStore.get("userInfo").id};TimeSheetService.ViewLeave(info).then(function(response){scope.list=response,void 0!==scope.list&&null!==scope.list&&void 0!==scope.list.result&&null!==scope.list.result&&void 0!==scope.list.result[0]&&null!==scope.list.result[0]&&(scope.employee_name=null===scope.list.result[0].FirstName||""===scope.list.result[0].FirstName?null===scope.list.result[0].LastName||""===scope.list.result[0].LastName?" ":scope.list.result[0].LastName:scope.list.result[0].FirstName+" "+(null===scope.list.result[0].LastName||""===scope.list.result[0].LastName?" ":scope.list.result[0].LastName),scope.statusID=scope.list.result[0].task_status_id,scope.is_reject=scope.list.result[0].is_reject)})}}),scope.getStyle=function(timeLeave){return timeLeave>=6e3?{"margin-right":"5px"}:void 0}},templateUrl:"modules/TimeSheet/directives/templates/ViewLeave.html"}}),angular.module("app.loggedIn.TimeSheet.ApproveLeave.Directive",[]).directive("viewLeaveapprove",function(TimeSheetService,$cookieStore){return{restrict:"EA",required:"ngModel",scope:{ngModel:"=",onCancel:"&",onReject:"&",onApprove:"&"},link:function(scope,elem,attrs){scope.info={},scope.$watch("ngModel",function(newModel,oldModel){if(void 0===newModel||null===newModel||isNaN(newModel))"clickReject"===newModel&&(scope.info.isReject=!0,scope.info.comments=null);else{scope.info.isReject=!1,scope.info.leaveID=newModel,scope.info.userID=$cookieStore.get("userInfo").id;var info={};info.leave_id=newModel,info.user_id=$cookieStore.get("userInfo").id,TimeSheetService.ViewLeave(info).then(function(response){scope.list=response,void 0!==scope.list&&null!==scope.list&&void 0!==scope.list.result&&null!==scope.list.result&&void 0!==scope.list.result[0]&&null!==scope.list.result[0]&&(scope.employee_name=null===scope.list.result[0].FirstName||""===scope.list.result[0].FirstName?null===scope.list.result[0].LastName||""===scope.list.result[0].LastName?" ":scope.list.result[0].LastName:scope.list.result[0].FirstName+" "+(null===scope.list.result[0].LastName||""===scope.list.result[0].LastName?" ":scope.list.result[0].LastName),scope.statusID=scope.list.result[0].task_status_id,scope.isPermiss=response.isPermiss)})}}),scope.getStyle=function(timeLeave){return timeLeave>=6e3?{"margin-right":"5px"}:void 0}},templateUrl:"modules/TimeSheet/directives/templates/ViewLeaveApprove.html"}}),angular.module("app.loggedIn.TimeSheet.ReportOweLeave.Controller",[]).controller("ReportOweLeave",function($scope,localStorageService,StaffService,TimeSheetService,$cookieStore,toastr,$state,$filter){$scope.dateOptions={formatYear:"yy",startingDay:1},$scope.position=localStorageService.get("position"),$scope.listDepartmentChoose=[],$scope.listEmployeeChoose=[],$scope.listDept=[],$scope.listEmp=[],$scope.isHavedata=0,$scope.ListNew=function(listNew){TimeSheetService.LoadEmpReport(listNew).then(function(response){if("success"===response.status){var arrayEmp=[];angular.forEach(response.result,function(emp,index){arrayEmp.push({id:emp.Employee_ID,label:emp.FirstName+" "+emp.LastName})}),$scope.listEmp=angular.copy(arrayEmp),$scope.listEmployeeChoose=[]}else"error"===response.status?($state.go("loggedIn.home",null,{reload:!0}),toastr.error("Loading employee fail!","Error")):($state.go("loggedIn.home",null,{reload:!0}),toastr.error("Server not response!","Error"))})},$scope.getWeekNumber=function(d){d=new Date(+d),d.setHours(0,0,0),d.setDate(d.getDate()+4-(d.getDay()||7));var yearStart=new Date(d.getFullYear(),0,1),weekNo=Math.ceil(((d-yearStart)/864e5+1)/7);return weekNo},$scope.changeEmp=function(list){if(void 0!==$scope.dateWeekFrom&&null!==$scope.dateWeekFrom&&""!==$scope.dateWeekFrom&&void 0!==$scope.dateWeekTo&&null!==$scope.dateWeekTo&&""!==$scope.dateWeekTo&&0!==$scope.listEmployeeChoose.length){$scope.isHavedata=1;var info={},weekNoFrom=$scope.dateWeekFrom,weekNoTo=$scope.dateWeekTo;info.weekNoFrom=$scope.getWeekNumber(weekNoFrom),info.weekNoTo=$scope.getWeekNumber(weekNoTo),info.listEMP=angular.copy($scope.listEmployeeChoose),info.USER_ID=void 0!==$cookieStore.get("userInfo")?$cookieStore.get("userInfo").id:null,info.weekFrom=$scope.dateWeekFrom,info.weekTo=$scope.dateWeekTo,info.listDept=$scope.listDepartmentChoose,info.weekNoFrom=$scope.getWeekNumber(weekNoFrom),TimeSheetService.LoadReportOweLeave(info).then(function(response){"success"===response.status?$scope.USER_ID=void 0!==$cookieStore.get("userInfo")?$cookieStore.get("userInfo").id:null:"error"===response.status?($state.go("loggedIn.home",null,{reload:!0}),toastr.error("Loading reports fail!","Error")):"null"===response.status?($scope.isHavedata=0,toastr.error("No Data!!!!","Error")):($state.go("loggedIn.home",null,{reload:!0}),toastr.error("Server not response!","Error"))})}},TimeSheetService.LoadDeptReport($cookieStore.get("userInfo").id).then(function(response){"error"===response.status?($state.go("loggedIn.home",null,{reload:!0}),toastr.error("Load Department fail!","Error")):"success"===response.status?$scope.listDept=response.result:($state.go("loggedIn.home",null,{reload:!0}),toastr.error("Server not response!","Error"))}),$scope.translationTextDept={},$scope.translationTextDept={checkAll:"Check All",uncheckAll:"Uncheck All",selectionCount:"Department Selected",selectionOf:"/",nameAddon:"Director"===$scope.position?"Departments":"Department",searchPlaceholder:"Search...",buttonDefaultText:"--Choose Department--",dynamicButtonTextSuffix:"Department Selected"},$scope.searchDept={enableSearch:!0},$scope.searchEmp={enableSearch:!0},$scope.translationTextEmp={},$scope.translationTextEmp={checkAll:"Check All",uncheckAll:"Uncheck All",selectionCount:"Employee Selected",selectionOf:"/",nameAddon:"Director"===$scope.position||"Head of Dept."===$scope.position?"Employees":"Employee",searchPlaceholder:"Search...",buttonDefaultText:"--Choose Employee--",dynamicButtonTextSuffix:"Employee Selected"}}),angular.module("app.loggedIn.TimeSheet.formValidate.Directive",[]).directive("modelValidate",function(){return{restrict:"EA",require:"ngModel",scope:{ngModel:"=",modelValidate:"=",formValidate:"="},link:function(scope,elem,attrs){var notiError={maxlength:"Too long!",required:"Field is required!"};scope.$watch("modelValidate",function(newModel,oldModel){void 0!==newModel&&null!==newModel&&0!==newModel.length?attrs.$set("required",!0):attrs.$set("required",!1);var isErr=!1,indexErr=-1;angular.forEach(scope.formValidate,function(valueError,indexError){valueError===!0&&(isErr=!0,indexErr=indexError)}),isErr?(elem.css("border-color","#F3565D"),elem.hasClass("tooltipstered")&&angular.element(elem).tooltipster("destroy"),angular.element(elem).tooltipster({theme:"tooltip-error-theme",contentAsHTML:!0,content:notiError[indexErr]})):(elem.hasClass("tooltipstered")&&(angular.element(elem).tooltipster("destroy"),angular.element(elem).removeAttr("title")),elem.css("border-color","#ECECEC"))}),scope.$watch("ngModel",function(newModel,oldModel){var isErr=!1,indexErr=-1;angular.forEach(scope.formValidate,function(valueError,indexError){valueError===!0&&(isErr=!0,indexErr=indexError)}),isErr?(elem.css("border-color","#F3565D"),elem.hasClass("tooltipstered")&&angular.element(elem).tooltipster("destroy"),angular.element(elem).tooltipster({theme:"tooltip-error-theme",contentAsHTML:!0,content:notiError[indexErr]})):(elem.hasClass("tooltipstered")&&(angular.element(elem).tooltipster("destroy"),angular.element(elem).removeAttr("title")),elem.css("border-color","#ECECEC"))})}}});