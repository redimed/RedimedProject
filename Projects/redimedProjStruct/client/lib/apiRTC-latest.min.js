var webrtcDetectedBrowser=null;var webrtcDetectedVersion=null;if(navigator.mozGetUserMedia){console.log("This appears to be Firefox");webrtcDetectedBrowser="firefox";webrtcDetectedVersion=parseInt(navigator.userAgent.match(/Firefox\/([0-9]+)\./)[1],10);RTCPeerConnection=mozRTCPeerConnection;RTCSessionDescription=mozRTCSessionDescription;RTCIceCandidate=mozRTCIceCandidate;getUserMedia=navigator.mozGetUserMedia.bind(navigator);attachMediaStream=function(a,b){console.log("Attaching media stream");a.mozSrcObject=b;a.play()};if(!MediaStream.prototype.getVideoTracks){MediaStream.prototype.getVideoTracks=function(){console.log("MediaStream.prototype.getVideoTracks");return[]}}if(!MediaStream.prototype.getAudioTracks){MediaStream.prototype.getAudioTracks=function(){console.log("MediaStream.prototype.getAudioTracks");return[]}}}else{if(navigator.webkitGetUserMedia){console.log("This appears to be Chrome");webrtcDetectedBrowser="chrome";webrtcDetectedVersion=parseInt(navigator.userAgent.match(/Chrom(e|ium)\/([0-9]+)\./)[2],10);RTCPeerConnection=webkitRTCPeerConnection;RTCSessionDescription=RTCSessionDescription;RTCIceCandidate=RTCIceCandidate;getUserMedia=navigator.webkitGetUserMedia.bind(navigator);attachMediaStream=function(a,b){console.log("Attaching media stream for Chrome");if(typeof a.srcObject!=="undefined"){a.srcObject=b}else{if(typeof a.mozSrcObject!=="undefined"){a.mozSrcObject=b}else{if(typeof a.src!=="undefined"){a.src=URL.createObjectURL(b)}else{console.log("Error attaching stream to element.")}}}};if(!webkitMediaStream.prototype.getVideoTracks){webkitMediaStream.prototype.getVideoTracks=function(){return videoTracks};webkitMediaStream.prototype.getAudioTracks=function(){return audioTracks}}if(!webkitRTCPeerConnection.prototype.getLocalStreams){webkitRTCPeerConnection.prototype.getLocalStreams=function(){return localStreams};webkitRTCPeerConnection.prototype.getRemoteStreams=function(){return remoteStreams}}}else{console.log("Browser does not appear to be WebRTC-capable")}};
var videoCall=false;var rtcReady=false;var rtcStarted=false;var phonertc=null;function isPhoneGap(){return(window.cordova||window.PhoneGap||window.phonegap)&&/^file:\/{3}[^\/]/i.test(window.location.href)&&/ios|iphone|ipod|ipad|android/i.test(navigator.userAgent)}if(isPhoneGap()){var localvideo=document.createElement("div");var remotevideo=document.createElement("div");RTCPeerConnection=function(d,c){if(typeof d==="undefined"){d=[]}if(typeof c==="undefined"){c=[]}this.configuration=d;this.constraints=c;this.createOfferSuccessCallback=function(){};this.createAnswerSuccessCallback=function(){};this.isInitator=false;var b=[],a=[];this.createOffer=function(e,f,g){console.log("adapt.js create offer");this.isInitator=true;this.createOfferSuccessCallback=e;this.init_call();return};this.createAnswer=function(e,f,g){console.log("adapt.js create answer");this.createAnswerSuccessCallback=e;return};this.setLocalDescription=function(g,e,f){console.log("adapt.js setLocalDescription");if(typeof e=="function"){e()}return};this.setRemoteDescription=function(g,e,f){console.log("adapt.js setRemoteDescription");if(g.sdp.sdp.indexOf("VP8")==-1){videoCall=false}a.push({type:g.sdp.type,sdp:g.sdp.sdp});if(typeof e=="function"){e()}if(!this.isInitator){this.init_call()}this.flushMessages();this.drainCandidates();return};this.updateIce=function(f,e){console.log("adapt.js updateIce");return};this.addIceCandidate=function(f,e,g){console.log("adapt.js addIceCandidate");if(typeof f.sdpMid==="undefined"){f.sdpMid=""}if(f.sdpMid==null){f.sdpMid=""}a.push({type:"candidate",label:f.sdpMLineIndex,id:f.sdpMid,candidate:f.candidate});this.flushMessages();return};this.rtcready=function(){console.log("adapt.js rtcready");rtcReady=true;this.flushMessages()};this.flushMessages=function(){var e=0;console.log("adapt.js flushMessages");if(rtcReady){for(e in a){if(!a.hasOwnProperty(e)){continue}console.log("phonertc push"+JSON.stringify(a[e]));phonertc.receiveMessage(a[e]);a.shift()}}};this.getLocalStreams=function(){console.log("adapt.js getLocalStreams");return};this.getRemoteStreams=function(){console.log("adapt.js getRemoteStreams");return};this.getStreamById=function(e){console.log("adapt.js getStreamById");return};this.addStream=function(e,f){console.log("adapt.js addStream");return};this.close=function(){console.log("adapt.js close");phonertc.disconnect();return};this.createDataChannel=function(e,f){};this.drainCandidates=function(){console.log("adapt.js drainCandidates "+JSON.stringify(b));if(typeof this.onicecandidate=="function"){var e=0;for(e in b){if(!b.hasOwnProperty(e)){continue}console.log("context.onicecandidate "+JSON.stringify(b[e]));this.onicecandidate(b[e]);b.shift()}}};this.init_call=function(){var f=false;if(videoCall){f={localVideo:localvideo,remoteVideo:remotevideo}}var e=this;if(!rtcStarted){phonertc.call({isInitator:e.isInitator,turn:{host:"turn:46.105.45.162:443?transport=udp",username:"anonymous",password:"password"},sendMessageCallback:function(g){console.log("data from native:"+JSON.stringify(g));switch(g.type){case"offer":e.createOfferSuccessCallback(g);break;case"answer":e.createAnswerSuccessCallback(g);break;case"candidate":b.push({candidate:{sdpMLineIndex:g.label,sdpMid:g.id,candidate:g.candidate}});if(!e.isInitator){e.drainCandidates()}break;default:}},readyCallback:function(){e.rtcready()},answerCallback:function(){if(typeof e.onaddstream=="function"){e.onaddstream({stream:new fakeStream(false)})}},disconnectCallback:function(){console.log("adapt.js disconnectCallback");rtcReady=false;rtcStarted=false;videoCall=false;e.close()},video:f});rtcStarted=true}}};RTCSessionDescription=function(a,b){this.sdp=a;this.type=b;return this};RTCIceCandidate=function(a){this.candidate=a.candidate;this.sdpMLineIndex=a.sdpMLineIndex;this.sdpMid=a.sdpMid};fakeStream=function(a){this.getAudioTracks=function(){return[{label:"ARDAMSa0",stream:null}]};this.getVideoTracks=function(){return[{label:"ARDAMSv0",stream:null}]};if(a){this.isLocalStream=true}else{this.isRemoteStream=true}this.stop=function(){}};getUserMedia=function(d,a,b){console.log("adapt.js getUserMedia");if(d.video){videoCall=true}var c=new fakeStream(true);a(c);return};attachMediaStream=function(a,b){if(typeof b.isLocalStream!=="undefined"){localvideo=a;console.log("adapt.js localvideo id= "+a.id)}else{remotevideo=a;console.log("adapt.js remotevideo id= "+a.id)}if(rtcStarted){phonertc.setVideoElements(localvideo,remotevideo)}return};reattachMediaStream=function(b,a){return}};

/*! LAB.js (LABjs :: Loading And Blocking JavaScript)
    v2.0.3 (c) Kyle Simpson
    MIT License
*/
(function(o){var K=o.$LAB,y="UseLocalXHR",z="AlwaysPreserveOrder",u="AllowDuplicates",A="CacheBust",B="BasePath",C=/^[^?#]*\//.exec(location.href)[0],D=/^\w+\:\/\/\/?[^\/]+/.exec(C)[0],i=document.head||document.getElementsByTagName("head"),L=(o.opera&&Object.prototype.toString.call(o.opera)=="[object Opera]")||("MozAppearance"in document.documentElement.style),q=document.createElement("script"),E=typeof q.preload=="boolean",r=E||(q.readyState&&q.readyState=="uninitialized"),F=!r&&q.async===true,M=!r&&!F&&!L;function G(a){return Object.prototype.toString.call(a)=="[object Function]"}function H(a){return Object.prototype.toString.call(a)=="[object Array]"}function N(a,c){var b=/^\w+\:\/\//;if(/^\/\/\/?/.test(a)){a=location.protocol+a}else if(!b.test(a)&&a.charAt(0)!="/"){a=(c||"")+a}return b.test(a)?a:((a.charAt(0)=="/"?D:C)+a)}function s(a,c){for(var b in a){if(a.hasOwnProperty(b)){c[b]=a[b]}}return c}function O(a){var c=false;for(var b=0;b<a.scripts.length;b++){if(a.scripts[b].ready&&a.scripts[b].exec_trigger){c=true;a.scripts[b].exec_trigger();a.scripts[b].exec_trigger=null}}return c}function t(a,c,b,d){a.onload=a.onreadystatechange=function(){if((a.readyState&&a.readyState!="complete"&&a.readyState!="loaded")||c[b])return;a.onload=a.onreadystatechange=null;d()}}function I(a){a.ready=a.finished=true;for(var c=0;c<a.finished_listeners.length;c++){a.finished_listeners[c]()}a.ready_listeners=[];a.finished_listeners=[]}function P(d,f,e,g,h){setTimeout(function(){var a,c=f.real_src,b;if("item"in i){if(!i[0]){setTimeout(arguments.callee,25);return}i=i[0]}a=document.createElement("script");if(f.type)a.type=f.type;if(f.charset)a.charset=f.charset;if(h){if(r){e.elem=a;if(E){a.preload=true;a.onpreload=g}else{a.onreadystatechange=function(){if(a.readyState=="loaded")g()}}a.src=c}else if(h&&c.indexOf(D)==0&&d[y]){b=new XMLHttpRequest();b.onreadystatechange=function(){if(b.readyState==4){b.onreadystatechange=function(){};e.text=b.responseText+"\n//@ sourceURL="+c;g()}};b.open("GET",c);b.send()}else{a.type="text/cache-script";t(a,e,"ready",function(){i.removeChild(a);g()});a.src=c;i.insertBefore(a,i.firstChild)}}else if(F){a.async=false;t(a,e,"finished",g);a.src=c;i.insertBefore(a,i.firstChild)}else{t(a,e,"finished",g);a.src=c;i.insertBefore(a,i.firstChild)}},0)}function J(){var l={},Q=r||M,n=[],p={},m;l[y]=true;l[z]=false;l[u]=false;l[A]=false;l[B]="";function R(a,c,b){var d;function f(){if(d!=null){d=null;I(b)}}if(p[c.src].finished)return;if(!a[u])p[c.src].finished=true;d=b.elem||document.createElement("script");if(c.type)d.type=c.type;if(c.charset)d.charset=c.charset;t(d,b,"finished",f);if(b.elem){b.elem=null}else if(b.text){d.onload=d.onreadystatechange=null;d.text=b.text}else{d.src=c.real_src}i.insertBefore(d,i.firstChild);if(b.text){f()}}function S(c,b,d,f){var e,g,h=function(){b.ready_cb(b,function(){R(c,b,e)})},j=function(){b.finished_cb(b,d)};b.src=N(b.src,c[B]);b.real_src=b.src+(c[A]?((/\?.*$/.test(b.src)?"&_":"?_")+~~(Math.random()*1E9)+"="):"");if(!p[b.src])p[b.src]={items:[],finished:false};g=p[b.src].items;if(c[u]||g.length==0){e=g[g.length]={ready:false,finished:false,ready_listeners:[h],finished_listeners:[j]};P(c,b,e,((f)?function(){e.ready=true;for(var a=0;a<e.ready_listeners.length;a++){e.ready_listeners[a]()}e.ready_listeners=[]}:function(){I(e)}),f)}else{e=g[0];if(e.finished){j()}else{e.finished_listeners.push(j)}}}function v(){var e,g=s(l,{}),h=[],j=0,w=false,k;function T(a,c){a.ready=true;a.exec_trigger=c;x()}function U(a,c){a.ready=a.finished=true;a.exec_trigger=null;for(var b=0;b<c.scripts.length;b++){if(!c.scripts[b].finished)return}c.finished=true;x()}function x(){while(j<h.length){if(G(h[j])){try{h[j++]()}catch(err){}continue}else if(!h[j].finished){if(O(h[j]))continue;break}j++}if(j==h.length){w=false;k=false}}function V(){if(!k||!k.scripts){h.push(k={scripts:[],finished:true})}}e={script:function(){for(var f=0;f<arguments.length;f++){(function(a,c){var b;if(!H(a)){c=[a]}for(var d=0;d<c.length;d++){V();a=c[d];if(G(a))a=a();if(!a)continue;if(H(a)){b=[].slice.call(a);b.unshift(d,1);[].splice.apply(c,b);d--;continue}if(typeof a=="string")a={src:a};a=s(a,{ready:false,ready_cb:T,finished:false,finished_cb:U});k.finished=false;k.scripts.push(a);S(g,a,k,(Q&&w));w=true;if(g[z])e.wait()}})(arguments[f],arguments[f])}return e},wait:function(){if(arguments.length>0){for(var a=0;a<arguments.length;a++){h.push(arguments[a])}k=h[h.length-1]}else k=false;x();return e}};return{script:e.script,wait:e.wait,setOptions:function(a){s(a,g);return e}}}m={setGlobalDefaults:function(a){s(a,l);return m},setOptions:function(){return v().setOptions.apply(null,arguments)},script:function(){return v().script.apply(null,arguments)},wait:function(){return v().wait.apply(null,arguments)},queueScript:function(){n[n.length]={type:"script",args:[].slice.call(arguments)};return m},queueWait:function(){n[n.length]={type:"wait",args:[].slice.call(arguments)};return m},runQueue:function(){var a=m,c=n.length,b=c,d;for(;--b>=0;){d=n.shift();a=a[d.type].apply(null,d.args)}return a},noConflict:function(){o.$LAB=K;return m},sandbox:function(){return J()}};return m}o.$LAB=J();(function(a,c,b){if(document.readyState==null&&document[a]){document.readyState="loading";document[a](c,b=function(){document.removeEventListener(c,b,false);document.readyState="complete"},false)}})("addEventListener","DOMContentLoaded")})(this);
(function(j,e){if(j.Prototype){delete Array.prototype.toJSON}console.log("Starting APIRTC_MODULE");var d=null,k=null,x=null,m=null,r=null,a=null,b=null,n=null,u=null,o=null,v=null,s=null,h=null,l="notTested",q=null,g=null;function c(y){var z=new RegExp("/^[a-z0-9]+$/i","g");return z.test(y)}function w(y){var z=new RegExp("^[0-9-.]*$","g");return z.test(y)}function p(){return j.location.protocol=="https:"}function t(){return j.location.protocol=="http:"}function f(){var A=navigator.appName,z=navigator.userAgent,y,B=z.match(/(opera|chrome|safari|firefox|msie)\/?\s*(\.?\d+(\.\d+)*)/i);if(B&&(y=z.match(/version\/([\.\d]+)/i))!=null){B[2]=y[1]}B=B?[B[1],B[2]]:[A,navigator.appVersion,"-?"];return B[0]}function i(){var A=navigator.appName,z=navigator.userAgent,y,B=z.match(/(opera|chrome|safari|firefox|msie)\/?\s*(\.?\d+(\.\d+)*)/i);if(B&&(y=z.match(/version\/([\.\d]+)/i))!=null){B[2]=y[1]}B=B?[B[1],B[2]]:[A,navigator.appVersion,"-?"];return B[1]}v=f();s=i();console.log("Browser : "+v);console.log("Browser version : "+s);d=function(){console.log("WebRTC_Event");if(l==="notTested"){try{var z=new CustomEvent("test",{detail:"test",bubbles:true,cancelable:true});l=true}catch(y){l=false;console.log("customEvent error :"+y)}}if(((v==="MSIE")&&(s>8))||(v==="Netscape")){console.log("polyfill the CustomEvent()");(function(){function A(C,D){D=D||{bubbles:false,cancelable:false,detail:e};var B=document.createEvent("CustomEvent");B.initCustomEvent(C,D.bubbles,D.cancelable,D.detail);return B}A.prototype=j.CustomEvent.prototype;j.CustomEvent=A}());l=true}this.eventDispatchMgr=function(B,A){if(l===false){if(typeof $jqApz!="undefined"){console.log("CustomEvent not supported by Browser, using $jqApz ");$jqApz.event.trigger({type:B,detail:A})}else{if(typeof jQuery!="undefined"){console.log("CustomEvent not supported by Browser, using jQuery ");jQuery.event.trigger({type:B,detail:A})}else{console.warn("Custom Events not supported on this browser : eventDispatchMgr()")}}}else{var C=new CustomEvent(B,{detail:A,bubbles:true,cancelable:true});document.dispatchEvent(C)}};this.createIncomingCallEvent=function(A,B,I,G,H,C,D,F){var J="incomingCall",E={eventType:"incomingCall",time:new Date(),clientId:A,callerId:B,callId:G,autoAnswerActivated:H,callNumber:C,callerNickname:I,audioOnly:D,callType:F};this.eventDispatchMgr(J,E)};this.createCallAttemptEvent=function(A,F,E,D){var C="callAttempt",B={eventType:"callAttempt",time:new Date(),clientId:A,callerId:F,callId:D,callerNickname:E};this.eventDispatchMgr(C,B)};this.createCallEstablishedEvent=function(C,D){var B="callEstablished",A={eventType:"callEstablished",time:new Date(),calleeId:C,callType:D};this.eventDispatchMgr(B,A)};this.createHangupEvent=function(C,A,F,B,G){var E="hangup",D={eventType:"hangup",time:new Date(),hangupType:C,clientId:A,remoteId:F,lastEstablishedCall:B,reason:G};this.eventDispatchMgr(E,D)};this.createRemoteHangupEvent=function(A,E,B,F){var D="remoteHangup",C={eventType:"remoteHangup",time:new Date(),clientId:A,remoteId:E,lastEstablishedCall:B,reason:F};this.eventDispatchMgr(D,C)};this.createUserMediaSuccessEvent=function(F,E,G,A,B,H){var D="userMediaSuccess",C={eventType:"userMediaSuccess",time:new Date(),onCallEstablishment:F,audioIsAvailable:E,audioDeviceLabel:G,videoIsAvailable:A,videoDeviceLabel:B,callType:H};this.eventDispatchMgr(D,C)};this.createUserMediaErrorEvent=function(C,D){var B="userMediaError",A={eventType:"userMediaError",time:new Date(),onCallEstablishment:C,callType:D};this.eventDispatchMgr(B,A)};this.createErrorEvent=function(D,C){var B="error",A={eventType:"error :",time:new Date(),errorInfo:D,errorCode:C};this.eventDispatchMgr(B,A)};this.createReceiveIMMessageEvent=function(F,D,E,C){var B="receiveIMMessage",A={eventType:"receiveIMMessage",time:new Date(),senderId:F,senderNickname:D,senderPhotoURL:E,message:C};this.eventDispatchMgr(B,A)};this.createChannelEvent=function(C){var B="channelEvent",A={eventType:"channelEvent :",time:new Date(),channelEvent:C};this.eventDispatchMgr(B,A)};this.createSessionReadyEvent=function(C){console.log("createSessionReadyEvent");var B="sessionReady",A={eventType:"sessionReady",time:new Date(),apiCCId:C};this.eventDispatchMgr(B,A)};this.createWebRTCClientCreatedEvent=function(){var B="webRTCClientCreated",A={eventType:"webRTCClientCreated",time:new Date()};this.eventDispatchMgr(B,A)};this.createUpdatePresenceEvent=function(E,D,A){var C="updatePresence",B={eventType:"updatePresence",time:(new Date()),connectedUsersList:E,connectedUsersListWithStatus:A,state:D};this.eventDispatchMgr(C,B)};this.createUpdateUserStatusEvent=function(C){var B="updateUserStatus",A={eventType:"updateUserStatus",time:(new Date()),message:C};this.eventDispatchMgr(B,A)};this.createGroupChatCreationEvent=function(B,H,D,A,E,C){var G="groupChatCreation",F={eventType:"groupChatCreation",time:(new Date()),status:B,groupChatId:H,initialDestId:D,invitationSendedToInitialDestId:A,newContactId:E,invitationSendedToNewContactId:C};this.eventDispatchMgr(G,F)};this.createGroupChatInvitationEvent=function(E,G,D,F,A){var C="groupChatInvitation",B={eventType:"groupChatInvitation",time:(new Date()),groupChatId:E,contactList:A,senderId:G,senderNickname:D,senderPhotoURL:F};this.eventDispatchMgr(C,B)};this.createGroupChatMemberUpdateEvent=function(E,B,A){var D="groupChatMemberUpdate",C={eventType:"groupChatMemberUpdate",time:(new Date()),groupChatId:E,contactList:B,status:A};this.eventDispatchMgr(D,C)};this.createAddUserInGroupChatEvent=function(E,D,C){var B="addUserInGroupChatAnswer",A={eventType:"addUserInGroupChatAnswer",time:(new Date()),invitationSended:E,groupChatId:D,contactId:C};this.eventDispatchMgr(B,A)};this.createReceiveGroupChatMessageEvent=function(E,F,D,C){var B="receiveGroupChatMessage",A={eventType:"receiveGroupChatMessage",time:(new Date()),groupChatId:E,senderId:F,senderNickname:D,message:C};this.eventDispatchMgr(B,A)};this.createReceiveConversationListAnswerEvent=function(A){var C="receiveConversationList",B={eventType:"receiveConversationList",time:(new Date()),convList:A};this.eventDispatchMgr(C,B)};this.createReceiveContactOccurrencesFromConversationListAnswerEvent=function(A){var C="receiveContactOccurrencesFromConversationList",B={eventType:"receiveContactOccurrencesFromConversationList",time:(new Date()),occurrencesList:A};this.eventDispatchMgr(C,B)};this.createReceiveConversationDetailReportAnswerEvent=function(C){var B="receiveConversationDetailReport",A={eventType:"receiveConversationDetailReport",time:(new Date()),CDR:C};this.eventDispatchMgr(B,A)};this.createReceiveConversationHistoryEvent=function(E,D,A){var C="receiveConversationHistory",B={eventType:"receiveConversationHistory",time:(new Date()),convId:E,convHistory:D,status:A};this.eventDispatchMgr(C,B)};this.createUserDataAnswerEvent=function(F,E,B,A){var D="userDataAnswer",C={eventType:"userDataAnswer",time:(new Date()),userFound:F,contactId:E,nickname:B,photoURL:A};this.eventDispatchMgr(D,C)};this.createReceiveDataEvent=function(E,A,D){var C="receiveData",B={eventType:"receiveData",time:(new Date()),senderId:E,dstRoomId:A,data:D};this.eventDispatchMgr(C,B)};this.createMCUSessionCreationEvent=function(D,A){var C="MCUSessionCreation",B={eventType:"MCUSessionCreation",time:(new Date()),sessionId:D,token:A};this.eventDispatchMgr(C,B)};this.createJoinMCUSessionAnswerEvent=function(F,A,E,D){var C="joinMCUSessionAnswer",B={eventType:"joinMCUSessionAnswer",time:(new Date()),sessionId:F,token:A,groupChatId:E,initiator:D};this.eventDispatchMgr(C,B)};this.createReceiveMCUSessionInvitationEvent=function(F,A,E,D){if(E===e){E=0}var C="receiveMCUSessionInvitation",B={eventType:"receiveMCUSessionInvitation",time:(new Date()),sessionId:F,token:A,groupChatId:E,initiatorId:D};this.eventDispatchMgr(C,B)};this.createMCUSessionConnectionEvent=function(C){var B="MCUSessionConnection",A={eventType:"MCUSessionConnection",time:(new Date()),userIdList:C};this.eventDispatchMgr(B,A)};this.createMCUUserConnectionEvent=function(C){var B="MCUUserConnection",A={eventType:"MCUUserConnection",time:(new Date()),userIdList:C};this.eventDispatchMgr(B,A)};this.createMCUUserDisconnectionEvent=function(C){var B="MCUUserDisconnection",A={eventType:"MCUUserDisconnection",time:(new Date()),userIdList:C};this.eventDispatchMgr(B,A)};this.createMCUEvent=function(A,D){var C="mcu",B={eventType:A,time:(new Date()),event:D};this.eventDispatchMgr(C,B)};this.createCanPlayRemoteVideoEvent=function(C,E,D){var B="canPlayRemoteVideo",A={eventType:"canPlayRemoteVideo",time:(new Date()),videoDivId:C,callType:E,destId:D};this.eventDispatchMgr(B,A)};this.createRecordedFileAvailableEvent=function(C){var B="recordedFileAvailable",A={eventType:"recordedFileAvailable",time:(new Date()),fileName:C};this.eventDispatchMgr(B,A)};this.createStopRecordEvent=function(){var B="stopRecord",A={eventType:"stopRecord",time:(new Date())};this.eventDispatchMgr(B,A)};this.createSnapShotPhotoUploaded=function(A){var C="snapShotPhotoUploaded",B={eventType:"snapShotPhotoUploaded",time:(new Date()),fileName:A};this.eventDispatchMgr(C,B)};this.createRoomCreationEvent=function(A,E,B){var D="roomCreation",C={eventType:"roomCreation",time:(new Date()),status:A,roomId:E,roomType:B};this.eventDispatchMgr(D,C)};this.createRoomInvitationEvent=function(E,H,F,G,A,B){var D="roomInvitation",C={eventType:"roomInvitation",time:(new Date()),roomId:E,contactList:A,senderId:H,senderNickname:F,senderPhotoURL:G,roomType:B};this.eventDispatchMgr(D,C)};this.createRoomMemberUpdateEvent=function(F,B,A,C){var E="roomMemberUpdate",D={eventType:"roomMemberUpdate",time:(new Date()),roomId:F,contactList:B,status:A,roomType:C};this.eventDispatchMgr(E,D)};this.createReceiveRoomMessageEvent=function(E,G,F,D,A){var C="receiveRoomMessage",B={eventType:"receiveRoomMessage",time:(new Date()),roomId:E,senderId:G,senderNickname:F,message:D,roomType:A};this.eventDispatchMgr(C,B)};this.createDesktopCaptureEvent=function(C){var B="desktopCapture",A={eventType:"desktopCapture",time:(new Date()),event:C};this.eventDispatchMgr(B,A)}};k=new d();x={version:"2.7.4",description:"Apizee Cloud Communication Library",session:null,jsLoaded:false,initApiKey:null,initApiCCId:null};x.init=function(y){console.log("apiRTC initialization, version is :"+x.version);var z="";if(j.location.protocol!="https:"){z="http"}else{z="https"}if(y.ccsServer===e){if(j.location.protocol!="https:"){y.ccsServer="ccs2.apizee.com:80"}else{y.ccsServer="ccs2.apizee.com:443"}}if(y.userData!==e){console.log("userData :",y.userData)}if(this.jsLoaded===false){x.initApiKey=y.apiKey;x.initApiCCId=y.apiCCId;$LAB.script(function(){return z+"://"+y.ccsServer+"/socket.io/socket.io.js"}).script(function(){if(y.ApiDBActivated===true){return z+"://cloud.apizee.com/apiRTC-DB/v1.0/apiRTC-DB-1.0.7.min.js"}else{return null}}).script(function(){if(y.recordActivated===true){return z+"://cloud.apizee.com/apiRTC/lib/RecordRTC.js"}else{return null}}).wait(function(){console.log("End of .js loading in head");x.jsLoaded=true;x.session=new x.ApiCCSession(y)})}else{console.log("apiRTC JS Librairies already loaded");if((x.initApiKey!==y.apiKey)||(x.initApiCCId!==y.apiCCId)){console.log("initParameters have changed, need to reload session connection");if(y.apiCCId===e){console.log("keeping apiCCId defined by apiRTC :"+y.apiCCId);y.apiCCId=x.session.apiCCId}x.session.reOpenChannel(y.apiCCId,y.apiKey);x.initApiKey=y.apiKey;x.initApiCCId=y.apiCCId}}};x.disconnect=function(){if(x.session!==null&&x.session!==e){x.setCookie("apiCCId",x.session.apiCCId,5000);if(x.session.sessionId!==null){x.setCookie("sessionId",x.session.sessionId,5000)}if(x.session.apiCCWebRTCClient!==null&&x.session.apiCCWebRTCClient!==e){if(x.session.apiCCWebRTCClient.webRTCClient.callsTable.length!==0){console.log("Call is still established and will be disconnected")}if(x.session.apiCCWebRTCClient.webRTCClient.MCUClient.sessionMCU!==null){console.log("MCU session is still established and will be disconnected")}x.session.apiCCWebRTCClient.hangUp();console.log("Disconnecting from Server");x.session.channel.socket.disconnect();if(x.session.apiCCWebRTCClient.webRTCClient.localStream!==null){x.session.apiCCWebRTCClient.webRTCClient.localStream.stop();x.session.apiCCWebRTCClient.webRTCClient.localStream=null}x.session.apiCCWebRTCClient=null}}};x.myEventTable=[];x.addEventListener=function(z,B){if((z=="sessionReady")||(z=="incomingCall")||(z=="callEstablished")||(z=="remoteHangup")||(z=="userMediaSuccess")||(z=="userMediaError")||(z=="error")||(z=="receiveIMMessage")||(z=="updatePresence")||(z=="webRTCClientCreated")||(z=="updateUserStatus")||(z=="channelEvent")||(z=="groupChatCreation")||(z=="groupChatInvitation")||(z=="groupChatMemberUpdate")||(z=="addUserInGroupChatAnswer")||(z=="receiveGroupChatMessage")||(z=="userDataAnswer")||(z=="receiveConversationList")||(z=="receiveConversationHistory")||(z=="receiveConversationDetailReport")||(z=="receiveContactOccurrencesFromConversationList")||(z=="receiveMCUSessionInvitation")||(z=="MCUSessionCreation")||(z=="MCUSessionConnection")||(z=="MCUUserConnection")||(z=="MCUUserDisconnection")||(z=="canPlayRemoteVideo")||(z=="recordedFileAvailable")||(z=="receiveData")||(z=="roomCreation")||(z=="roomInvitation")||(z=="roomMemberUpdate")||(z=="receiveRoomMessage")||(z=="snapShotPhotoUploaded")||(z=="stopRecord")||(z=="mcu")||(z=="callAttempt")||(z=="joinMCUSessionAnswer")||(z=="hangup")||(z=="desktopCapture")){console.log("Adding listener on type :"+z);if(document.addEventListener&&(l===true)){document.addEventListener(z,B,false)}else{if(typeof $jqApz!="undefined"){console.log("using $jqApz");$jqApz(document).on(z,B)}else{if(typeof jQuery!="undefined"){console.log("using jQuery");jQuery(document).on(z,B)}else{console.warn("Custom Events not supported on this browser : addEventListener()")}}}var y={type:z,listener:B},A=x.myEventTable.push(y);y=null;console.log("number of myEventTable:"+A)}else{k.createErrorEvent("ERROR: Trying to add a listener on an unknow event","UNKNOWN_EVENT_ON_ADDLISTENER");console.log("ERROR: Trying to add a listener on an unknow event :"+z)}};x.removeEventListener=function(y,z){console.log("Removing listener on type :"+y);if(document.removeEventListener){document.removeEventListener(y,z,false)}else{if(typeof jQuery!="undefined"){jQuery(document).off(y,z)}else{console.log("Custom Events not supported on this browser")}}};x.setCookie=function(B,C,A){console.log("setCookie");A=A||3600000;var z=new Date(),y=new Date();y.setTime(z.getTime()+A);document.cookie=B+"="+encodeURIComponent(C)+";expires="+y.toGMTString()};j.onbeforeunload=function(){console.log("User has refreshed or left the page");try{if(mailClicked!==e){if(mailClicked!==null){console.log("mailClicked variable is defined");if(mailClicked===true){console.log("mailClicked is true : leaving onbeforeunload");mailClicked=false;return}}}}catch(A){console.log("Catch error on PATCH/WORKAROUND to avoid reload of page in chrome when mailto :"+A)}if(x!==null){x.disconnect()}var z=0,y=0;if(x!==null){z=x.myEventTable.length}if(z!==0){console.log("number of myEventTable:"+z);for(y=0;y<z;y+=1){x.removeEventListener(x.myEventTable[y].type,x.myEventTable[y].listener)}this.apiCC.myEventTable.splice(0,z);z=x.myEventTable.length;console.log("number of myEventTable after splice:"+z);x.myEventTable=null}if(x!==null){x.session=null}d=null;k=null;m=null;r=null;a=null;b=null;n=null;if(x!==null){x.ApiCCSession=null;x.ApiCCIMClient=null;x=null}};m=function(y){this.channelReady=false;this.socket=null;this.channelId=y.apiCCId;this.callURLDestRoom=0;this.myWebRTC_Event=new d();this.initialize=function(){console.log("ApiCC_Channel::initialize()");this.openChannel()};this.openChannel=function(){var z="",A=null,B=null;console.log("openChannel channelId :"+this.channelId);console.log("session.apiKey :"+y.apiKey);console.log("session.sessionId :"+y.sessionId);y.xhrPolling=true;console.log("CCSserver used : "+y.ccsServer);if(y.userData!==e){console.log("Defined userData : "+y.userData);A=JSON.stringify(y.userData);console.log("stringUserData.length :"+A.length);if(A.length<=500){B=encodeURIComponent(A);z="&userData="+B}else{console.warn("userData length is too long :"+A.length+" .Need to be <= 500")}}if(y.xhrPolling===true){console.log("xhrPolling connexion type");if(j.location.protocol!="https:"){this.socket=io.connect("http://"+y.ccsServer+"/?channelId="+this.channelId+"&apiKey="+y.apiKey+"&apiVersion="+x.version+"&sessionId="+y.sessionId+z,{transports:["xhr-polling"],"force new connection":true})}else{this.socket=io.connect("https://"+y.ccsServer+"/?channelId="+this.channelId+"&apiKey="+y.apiKey+"&apiVersion="+x.version+"&sessionId="+y.sessionId+z,{transports:["xhr-polling"],"force new connection":true,secure:true,port:"443"})}}else{if(j.location.protocol!="https:"){this.socket=io.connect("http://"+y.ccsServer+"/?channelId="+this.channelId+"&apiKey="+y.apiKey+"&apiVersion="+x.version+"&sessionId="+y.sessionId+z,{"force new connection":true})}else{this.socket=io.connect("https://"+y.ccsServer+"/?channelId="+this.channelId+"&apiKey="+y.apiKey+"&apiVersion="+x.version+"&sessionId="+y.sessionId+z,{"force new connection":true,secure:true,port:"443"})}}this.socket.on("connect",this.callback(this,"onChannelOpened")).on("message",this.callback(this,"onChannelMessage")).on("error",this.callback(this,"onChannelError")).on("bye",this.callback(this,"onChannelBye")).on("close",this.callback(this,"onChannelClosed")).on("connecting",this.callback(this,"onChannelConnecting")).on("disconnect",this.callback(this,"onChannelDisconnect")).on("connect_failed",this.callback(this,"onChannelConnect_failed")).on("reconnect_failed",this.callback(this,"onChannelReconnect_failed")).on("reconnect",this.callback(this,"onChannelReconnect")).on("reconnecting",this.callback(this,"onChannelReconnecting"))};this.onChannelConnecting=function(){console.log("onChannelConnecting");this.myWebRTC_Event.createChannelEvent("onChannelConnecting")};this.onChannelDisconnect=function(){console.log("onChannelDisconnect");this.myWebRTC_Event.createChannelEvent("onChannelDisconnect")};this.onChannelConnect_failed=function(){console.log("onChannelConnect_failed");this.myWebRTC_Event.createChannelEvent("onChannelConnect_failed")};this.onChannelReconnect_failed=function(){console.log("onChannelReconnect_failed");this.myWebRTC_Event.createChannelEvent("onChannelReconnect_failed")};this.onChannelReconnect=function(){console.log("onChannelReconnect");if(x.session.apiCCIMClient!==null){if(x.session.apiCCIMClient.userDataSetted===true){var z={photoURL:x.session.apiCCIMClient.photoURL};x.session.apiCCIMClient.setUserData(z)}else{console.log("apiCC.session.apiCCIMClient.userDataSetted !== true")}}else{console.log("apiCC.session.apiCCIMClient === null")}this.myWebRTC_Event.createChannelEvent("onChannelReconnect")};this.onChannelReconnecting=function(){console.log("onChannelReconnecting");this.myWebRTC_Event.createChannelEvent("onChannelReconnecting")};this.onChannelOpened=function(){console.log("Channel opened");console.log("this.channelId :"+this.channelId);this.channelReady=true;y.onChannelOpened();this.myWebRTC_Event.createChannelEvent("onChannelOpened")};this.onChannelMessage=function(z){console.log("S->C: "+z);y.processSignalingMessage(z)};this.onChannelError=function(){console.log("Channel error.");this.myWebRTC_Event.createChannelEvent("onChannelError")};this.onChannelClosed=function(){console.log("Channel closed.");this.myWebRTC_Event.createChannelEvent("onChannelClosed")};this.onChannelBye=function(z){var A=JSON.parse(z);console.log("bye message from:"+A.clientId+" for call Id"+A.callId)};this.callback=function(A,z){this.closureHandler=function(B){return A[z](B)};return this.closureHandler}};r=function(y){this.sendInvite=function(E,A,F,C,B,G,D){if(D===e||D===null){D="media"}console.log("WebRTC_Stack::sendInvite()");var H=null,z=null;H={type:"invite",callId:E,callerId:A,callerNickname:F,calleeId:C,roomId:B,sdpoffer:G,callType:D};z=JSON.stringify(H);console.log("C->S: "+z);y.emit("invite",z)};this.sendInviteBroadcast=function(z,F,E,C,B,A){console.log("WebRTC_Stack::sendInviteBroadcast()");var D=null,G=null;D={type:"invite",callId:z,callerId:F,callerNickname:E,calleeId:C,roomId:B,sdpoffer:A};G=JSON.stringify(D);console.log("C->S: "+G);y.emit("invite_broadcast",G)};this.send200OK=function(z,F,C,B,A,D){console.log("WebRTC_Stack::send200OK()");var E=null,G=null;E={type:"200OK",callId:z,callerId:F,calleeId:C,calleeNickname:B,roomId:A,sdpanswer:D};G=JSON.stringify(E);console.log("C->S: "+G);y.emit("200OK",G)};this.sendCandidate=function(E,B,D,C,F,G,A,I){var H=null,z=null;H={type:"candidate",callId:E,callerId:B,calleeId:D,roomId:C,dst:F,label:G,id:A,candidate:I};z=JSON.stringify(H);console.log("C->S: "+z);y.emit("candidate",z)};this.sendBye=function(A,z,B,F,D){console.log("WebRTC_Stack::sendBye()");var C=null,E=null;C={type:"bye",callId:A,clientId:z,roomId:B,dst:F,reason:D};E=JSON.stringify(C);console.log("C->S: "+E);y.emit("bye",E)};this.sendUpdate=function(z,E,C,B,G,A){console.log("WebRTC_Stack::sendUpdate()");var D=null,F=null;D={type:"update",callId:z,callerId:E,calleeId:C,roomId:B,dst:G,sdpoffer:A};F=JSON.stringify(D);console.log("C->S: "+F);y.emit("update",F)};this.send200Update=function(z,E,B,A,G,C){console.log("WebRTC_Stack::send200Update()");var D=null,F=null;D={type:"200update",callId:z,callerId:E,calleeId:B,roomId:A,dst:G,sdpanswer:C};F=JSON.stringify(D);console.log("C->S: "+F);y.emit("200update",F)};this.sendDebugCommand=function(C,B,z){console.log("WebRTC_Stack::sendDebugCommand :"+C);var A=null,D=null;A={type:"debugCommand",command:C,apiKey:B,clientId:z};D=JSON.stringify(A);console.log("C->S: "+D);y.emit("debugCommand",D)}};a=function(){this.webrtcDetectedBrowser=webrtcDetectedBrowser;this.webrtcDetectedVersion=webrtcDetectedVersion;this.RTCPeerConnection=RTCPeerConnection;this.RTCSessionDescription=RTCSessionDescription;this.RTCIceCandidate=RTCIceCandidate;this.getUserMedia=getUserMedia;this.attachMediaStream=attachMediaStream};h=function(y){console.log("ApiCCMCUClient creation");this.apiMCUKey="22934082";this.publisher=null;this.sessionMCU=null;this.localDivId=null;this.remoteDivId=null;this.TBLibIsLoaded=false;this.subIdTable=[];this.initDivElements=function(z,A){this.localDivId=z;this.remoteDivId=A};this.createSession=function(){console.log("ApiMCU::createSession()");var z=null,A=null;z={type:"createMCUSession"};A=JSON.stringify(z);console.log("C->S: "+A);x.session.channel.socket.emit("createMCUSession",A)};this.receiveSessionId=function(z){console.log("ApiMCU::receiveSessionId()");k.createMCUSessionCreationEvent(z.sessionId,z.token);this.publish(z.sessionId,z.token)};this.sendSessionInvitation=function(B,C,A){console.log("ApiMCU::sendSessionInvitation()");if(C!==null&&C!==e){var z=null,D=null;if(A===e){A=0}z={type:"MCUSessionInvitation",srcId:y,destId:B,sessionId:C,groupChatId:A};D=JSON.stringify(z);console.log("C->S: "+D);x.session.channel.socket.emit("MCUSessionInvitation",D)}else{console.log("Session is null or undefined, MCU Session invitation is not sended")}};this.sendSessionInvitationToGroupChat=function(A,B){console.log("ApiMCU::sendSessionInvitationToGroupChat()");if(A!==null&&A!==e){if(B!==null&&B!==e){var z=null,C=null;z={type:"MCUSessionInvitationToGroupChat",srcId:y,groupChatId:A,sessionId:B};C=JSON.stringify(z);console.log("C->S: "+C);x.session.channel.socket.emit("MCUSessionInvitationToGroupChat",C)}else{console.log("Session is null or undefined, MCU Session invitation is not sended")}}else{console.log("groupChatId is null or undefined, MCU Session invitation is not sended")}};this.receiveSessionInvitation=function(z){console.log("ApiMCU::receiveSessionInvitation()");console.log("msg.sessionId :"+z.sessionId);console.log("msg.token :"+z.token);console.log("msg.groupChatId :"+z.groupChatId);k.createReceiveMCUSessionInvitationEvent(z.sessionId,z.token,z.groupChatId,z.srcId)};this.acceptSessionInvitation=function(A,z){console.log("ApiMCU::acceptSessionInvitation()");console.log("sessionId :"+A);console.log("token :"+z);this.publish(A,z)};this.leaveSession=function(){console.log("ApiMCU::leaveSession()");var A=0,D=null,C=null,z=null,B=0;if(this.sessionMCU!==null){this.sessionMCU.unpublish(this.publisher);this.sessionMCU.disconnect()}B=this.subIdTable.length;console.log("subDivTable length : "+B);for(A=0;A<B;A+=1){console.log("i = "+A);console.log("this.subIdTable[i] = "+this.subIdTable[A].subDivId);D="subDiv"+this.subIdTable[A].subDivId;z=document.getElementById(D);if(z!==null){console.log("Removing subDiv with Id : "+D);console.log("this.remoteDivId : "+this.remoteDivId);C=document.getElementById(this.remoteDivId);C.removeChild(z)}}this.subIdTable.splice(0,this.subIdTable.length)};this.joinSession=function(z){console.log("ApiMCU::joinSession()");var A=null,B=null;A={type:"joinMCUSession",roomId:z};B=JSON.stringify(A);console.log("C->S: "+B);x.session.channel.socket.emit("joinMCUSession",B)};this.joinSessionAnswer=function(z){console.log("ApiMCU::joinSessionAnswer()");k.createJoinMCUSessionAnswerEvent(z.sessionId,z.token,z.groupChatId,z.initiator);this.publish(z.sessionId,z.token)};this.takeSnapshot=function(C){var D=null,B=0,A=null,z=0;if(C===0){D=this.publisher.getImgData()}else{B=this.subIdTable.length;A=null;for(z=0;z<B;z+=1){console.debug("this.subIdTable[i].subDivId :"+this.subIdTable[z].subDivId);console.debug("remoteId :"+C);if(this.subIdTable[z].subDivId==C){console.log("subscriber found");A=this.subIdTable[z].subObj;D=A.getImgData()}}}return D};this.sessionDisconnectHandler=function(z){console.log("ApiMCU::sessionDisconnectHandler()");if(z.reason=="networkDisconnected"){console.log("Your MCU connection is terminated.")}console.log("this.sessionMCU :"+this.sessionMCU);this.sessionMCU=null;this.publisher=null;k.createMCUEvent("sessionDisconnected",z)};this.sessionConnectedHandler=function(A){console.log("ApiMCU::sessionConnectedHandler()");var B=[],z=0,C=null;this.sessionMCU.publish(this.publisher);k.createMCUSessionConnectionEvent(B);B.splice(0,B.length)};this.subscribeToStreams=function(E){console.log("ApiMCU::subscribeToStreams()");var z=0,D=0,B=null,C=null,A=null;for(z=0;z<E.length;z+=1){console.log("streams.length :"+E.length);D=E[z];if(D.connection.connectionId!=this.sessionMCU.connection.connectionId){B=document.getElementById("subDiv"+D.connection.data);if(B===null){console.log("Adding SubDiv");B=document.createElement("div");B.id="subDiv"+D.connection.data;C=document.getElementById(this.remoteDivId);C.appendChild(B);A=this.sessionMCU.subscribe(D,"subDiv"+D.connection.data,{width:240,height:180});A.setStyle({nameDisplayMode:"off"});this.subIdTable.push({subDivId:D.connection.data,subObj:A})}else{console.log("Sub Div already exist, no new div creation")}}}setTimeout(function(){var F=0,G=document.getElementsByClassName("OT_opentok OT_mode-auto"),H=0;H=G.length;for(F=0;F<H;F+=1){console.log("i : "+F);G[0].className=""}},5000)};this.streamCreatedHandler=function(A){this.subscribeToStreams(A.streams);var B=[],z=0,C=0;console.log("event.streams.length"+A.streams.length);for(z=0;z<A.streams.length;z++){C=A.streams[z];console.log("stream.connection.data"+C.connection.data);B.push(C.connection.data)}k.createMCUUserConnectionEvent(B);B.splice(0,B.length)};this.streamDestroyedHandler=function(A){console.log("ApiMCU::streamDestroyedHandler()");var z=0,C=null,B=[];for(z=0;z<A.streams.length;z++){C=A.streams[z];console.log("Stream "+C.name+" ended. "+A.reason);this.unsubscribe(C);B.push(C.connection.data)}k.createMCUUserDisconnectionEvent(B);B.splice(0,B.length);k.createMCUEvent("streamDestroyed",A)};this.unsubscribe=function(F){console.log("ApiMCU::unsubscribe()");var D=this.sessionMCU.getSubscribersForStream(F),A=0,G=null,E=null,z=null,B=0,C=0;for(A=0;A<D.length;A++){this.sessionMCU.unsubscribe(D[A])}G="subDiv"+F.connection.data;z=document.getElementById(G);if(z!==null){console.log("Removing subDiv with Id : "+G);E=document.getElementById(this.remoteDivId);E.removeChild(z)}B=this.subIdTable.length;for(A=0;A<B;A+=1){console.debug("this.subIdTable[i].subDivId :"+this.subIdTable[A].subDivId);if(this.subIdTable[A-C].subDivId==F.connection.data){this.subIdTable.splice(A-C,1);C+=1;break}}};this.exceptionHandler=function(z){if(z.code===1006||z.code===1008||z.code===1014){console.warn("Connexion error with MCU")}k.createMCUEvent("exception",z)};this.accessAllowedHandler=function(D){console.log("user has granted access to the camera and microphone");setTimeout(function(){var E=0,F=document.getElementsByClassName("OT_opentok OT_mode-auto"),G=0;G=F.length;for(E=0;E<G;E+=1){console.log("i : "+E);F[0].className=""}},300);var B=true,C="Unknown",z=true,A="Unknown";k.createUserMediaSuccessEvent(true,B,C,z,A,"media")};this.accessDeniedHandler=function(z){console.warn("user has denied access to the camera and microphone");k.createUserMediaErrorEvent(true,"media")};this.streamPropertyChangedHandler=function(z){k.createMCUEvent("streamPropertyChanged",z)};this.publish=function(A,z){var B=null;if(this.sessionMCU===null){this.publisher=TB.initPublisher(this.apiMCUKey,this.localDivId,{name:x.session.nickname,style:{nameDisplayMode:"off"},width:240,height:180}).on("streamCreated",function(C){k.createMCUEvent("publisher-streamCreated",C)}).on("streamDestroyed",function(C){k.createMCUEvent("publisher-streamDestroyed",C)});this.publisher.setStyle({nameDisplayMode:"off"});this.publisher.on("accessAllowed",this.callback(this,"accessAllowedHandler"));this.publisher.on("accessDenied",this.callback(this,"accessDeniedHandler"));this.sessionMCU=TB.initSession(A);this.sessionMCU.on("sessionDisconnected",this.callback(this,"sessionDisconnectHandler"));TB.on("exception",this.callback(this,"exceptionHandler"));this.sessionMCU.on("sessionConnected",this.callback(this,"sessionConnectedHandler"));this.sessionMCU.on("streamCreated",this.callback(this,"streamCreatedHandler"));this.sessionMCU.on("streamDestroyed",this.callback(this,"streamDestroyedHandler"));this.sessionMCU.on("streamPropertyChanged",this.callback(this,"streamPropertyChangedHandler"));this.sessionMCU.connect(this.apiMCUKey,z)}else{console.warn("MCU Session is already connected, leave it before connecting a new session")}};this.callback=function(A,z){this.closureHandler=function(B){return A[z](B)};return this.closureHandler}};o=function(){console.log("SDPManager");this.getSDPLines=function(y){console.log("SDPManager::getSDPLines");var A=y.split("\r\n"),z=0;for(z=0;z<A.length;z+=1){console.log("sdpLines[i] : "+A[z])}return A};this.getVideoMediaDescriptionPart=function(y){console.log("SDPManager::getVideoMediaDescriptionPart");var A=y.split("m=video"),z=0;for(z=0;z<A.length;z+=1){console.log("sdpMediaPart[i] : "+A[z])}return A[1]};this.searchMediaDescriptionForRecvOnly=function(y){console.log("searchMediaDescriptionForRecvOnly");if(y.search("a=recvonly")!==-1){console.log("recvonly found in media description");return true}console.log("recvonly not found in media description");return false};this.searchSDPForVideoRecvOnly=function(y){if(y!==e){console.log("sdpVideoPart !== undefined");return this.searchMediaDescriptionForRecvOnly(y)}console.log("recvonly not found in SDP for video");return false};this.stripVideoMediaDescriptionFromSDP=function(y){console.log("SDPManager::stripVideoMediaDescriptionFromSDP");y=y.replace("a=group:BUNDLE audio video","a=group:BUNDLE audio");var A=y.split("m=video"),z=0;for(z=0;z<A.length;z+=1){console.log("sdpMediaPart[i] : "+A[z])}return A[0]}};q=function(y,z){console.log("RecordManager creation");this.recordAudio=null;this.recordVideo=null;this.recordOngoing=false;this.uploadServerAddress=z;this.sessionIdForRecord=null;this.timerRef=0;this.setUploadServerAddress=function(A){this.uploadServerAddress=A};this.record=function(B,E,C,A){console.log("record");console.log("duration :"+C);this.sessionIdForRecord=A;var D=null;if(B!=="local"){console.log("streamType incorrect");return}if(E!=="audio"&&E!=="video"&&E!=="videoOnly"){console.log("recordType incorrect :"+E);return}if(y.localStream===null||y.localStream===e){console.log("webRTCClient.localVideo issue")}else{console.log("webRTCClient.localVideo OK")}if(this.recordStream(y.localStream,E)===true){console.log("Recording started");this.timerRef=setTimeout(this.callback(this,"stopRecord"),C)}else{console.log("Recording not started")}};this.stop=function(){console.log("record");clearTimeout(this.timerRef);this.timerRef=0;this.stopRecord()};this.xhr=function(A,C,D){var B=new XMLHttpRequest();B.onreadystatechange=function(){if(B.readyState==4&&B.status==200){D(B.responseText)}};B.open("POST",A);B.send(C)};this.recordStream=function(B,C){console.log("recordStream : ");if(this.recordOngoing===true){console.log("one recording is already ongoing : leaving recordStream");return false}this.recordOngoing=true;this.recordType=C;if(this.recordType!=="videoOnly"){this.recordAudio=new RecordRTC(B,{bufferSize:16384,sampleRate:44100})}if(this.recordType!=="audio"){var A={type:"video",video:{width:320,height:240},canvas:{width:320,height:240}};this.recordVideo=new RecordRTC(B,A)}if(this.recordType!=="videoOnly"){this.recordAudio.startRecording()}if(this.recordType!=="audio"){this.recordVideo.startRecording()}return true};this.postBlob=function(B,A,D){var C=new FormData();C.append("destFileName",D);C.append("fichier",B);C.append("sessionId",this.sessionIdForRecord);this.xhr(this.uploadServerAddress,C,function(E){console.log("files loaded, filename :"+E);console.log("JSON.parse(fileName).fileUrl :"+JSON.parse(E).fileUrl);k.createRecordedFileAvailableEvent(JSON.parse(E).fileUrl)})};this.stopRecord=function(){console.log("stopRecord : ");var C=new Date(),B=C.toJSON(),A=B.replace(new RegExp(":","g"),"-");k.createStopRecordEvent();this.fileName=y.clientId+"-"+A;if(this.recordType!=="videoOnly"){this.recordAudio.stopRecording()}if(this.recordType!=="audio"){this.recordVideo.stopRecording()}if(this.recordType!=="videoOnly"){this.postBlob(this.recordAudio.getBlob(),"audio",this.fileName+".wav");if(this.recordType!=="audio"){this.postBlob(this.recordVideo.getBlob(),"video",this.fileName+".webm")}}else{this.postBlob(this.recordVideo.getBlob(),"video",this.fileName+".webm")}if(y.localStream!==null){console.log("Stopping localStream on stopRecord");y.localStream.stop();y.localStream=null}this.recordOngoing=false};this.callback=function(B,A){this.closureHandler=function(C){return B[A](C)};return this.closureHandler}};b=function(y){this.dest_roomId="";this.pc=null;this.callId=0;this.callee=false;this.callerId=0;this.calleeId=0;this.started=false;this.sendedSdpOfferMessage=null;this.receivedSdpOfferMessage=null;this.myWebRTC_Stack=new r(y.socket);this.mediaConstraintsAudioOnly={mandatory:{OfferToReceiveAudio:true,OfferToReceiveVideo:false}};this.mediaConstraints={mandatory:{OfferToReceiveAudio:true,OfferToReceiveVideo:true}};this.callLocalStream=null;this.generatedLocalStream=false;this.audioOnly=false;this.inviteSended=false;this.callCancelled=false;this.screenSharing=false;this.desktopId=0;this.pc_config=y.pc_config;this.pc_constraints=y.pc_constraints;this.trickleIce=y.trickleIce;this.audioFileMediaElement=null;this.getStatsInterval=5000;this.qm=null;this.statisticId=null;console.log("New Call for client with Id :"+y.clientId);this.generateCallId=function(){this.callId=Math.floor(Math.random()*1000001).toString();console.log("new call with callId :"+this.callId)};this.onSetLocalDescriptionSuccess=function(){console.log("onSetLocalDescriptionSuccess")};this.onSetLocalDescriptionFailure=function(z){console.log("onSetLocalDescriptionFailure"+z)};this.onSetRemoteDescriptionSuccess=function(){console.log("onSetRemoteDescriptionSuccess")};this.onSetRemoteDescriptionFailure=function(z){console.log("onSetRemoteDescriptionFailure :"+z)};this.getUserMediaOnCall=function(){console.log("getUserMediaOnCall, audio Only :"+this.audioOnly);console.log("getUserMediaOnCall, screenSharing activated :"+this.screenSharing);y.getUserMediaOnGoing=true;var B={mandatory:{},optional:[]},A=null;try{if(this.screenSharing===true){console.log("getScreenMedia");navigator.webkitGetUserMedia({audio:false,video:{mandatory:{chromeMediaSource:"desktop",chromeMediaSourceId:this.desktopId,maxWidth:1920,maxHeight:1080,minAspectRatio:1.77}}},this.callback(this,"onUserMediaSuccessOnCall"),this.callback(this,"onUserMediaErrorOnCall"))}else{if(this.audioOnly===true){if(y.audioSourceId===null){A={audio:true,video:false}}else{A={audio:{optional:[{sourceId:y.audioSourceId}]},video:false}}y.myWebRTC_Adapter.getUserMedia(A,this.callback(this,"onUserMediaSuccessOnCall"),this.callback(this,"onUserMediaErrorOnCall"))}else{if(y.audioSourceId===null&&y.videoSourceId===null){A={audio:true,video:B}}else{B={mandatory:{},optional:[{sourceId:y.videoSourceId}]};A={audio:{optional:[{sourceId:y.audioSourceId}]},video:B}}y.myWebRTC_Adapter.getUserMedia(A,this.callback(this,"onUserMediaSuccessOnCall"),this.callback(this,"onUserMediaErrorOnCall"))}}console.log("Requested access to local media with new syntax.")}catch(z){alert("getUserMedia() failed. Is this a WebRTC capable browser?");console.log("getUserMedia failed with exception: "+z.message)}};this.onUserMediaSuccessOnCall=function(D){console.log("onUserMediaSuccessOnCall");console.log("isHTTPS()"+p());var B=false,C="Unknown",z=false,A="Unknown",E="media";y.getUserMediaOnGoing=false;console.log("User has granted access to local media.");y.accessToLocalMedia=true;y.displayHangUpButtonInCommand();if(this.callee===true){y.setStatus("You are connected to :"+this.callerId)}else{y.setStatus("You are connected to :"+this.calleeId)}if((D.getAudioTracks().length)>0){B=true;if(D.getAudioTracks()[0].label){C=D.getAudioTracks()[0].label}console.log("Using audio device: "+C)}if((D.getVideoTracks().length)>0){z=true;if(D.getVideoTracks()[0].label){A=D.getVideoTracks()[0].label}console.log("Using video device: "+A)}if(this.screenSharing===true){E="screenSharing"}y.myWebRTC_Event.createUserMediaSuccessEvent(true,B,C,z,A,E);if(y.addingUserMedia===false){if(y.miniVideo){console.log("webRTCClient.miniVideo.src :"+y.miniVideo.src);console.log("document.URL :"+document.URL);y.myWebRTC_Adapter.attachMediaStream(y.miniVideo,D)}if(y.localVideo){console.log("webRTCClient.localVideo.src :"+y.localVideo.src);console.log("document.URL :"+document.URL);y.myWebRTC_Adapter.attachMediaStream(y.localVideo,D);y.localVideo.style.opacity=1}}else{if(y.miniVideo){y.myWebRTC_Adapter.attachMediaStream(y.miniVideo,D)}}this.callLocalStream=D;if(t()){console.log("isHTTP true");this.establishCall()}else{if(y.userAcceptOnIncomingCall===true&&this.callee===true){console.log("TEMP wait for establishCall")}else{this.establishCall()}}};this.establishCall=function(){console.log("establishCall()");this.maybeStart();var z=null;if(this.callee&&y.addingUserMedia===false){z=new y.myWebRTC_Adapter.RTCSessionDescription(this.receivedSdpOfferMessage);console.log("Avant setRemote pour le callee"+z);if(this.pc!==null){this.pc.setRemoteDescription(z,this.callback(this,"onSetRemoteDescriptionSuccess"),this.callback(this,"onSetRemoteDescriptionFailure"))}else{console.log("Error : PC is null")}this.doAnswer()}else{if(y.addingUserMedia===true){console.log("Adding local stream.");if(this.pc!==null){if(this.callLocalStream!==null){console.log("Add Stream of callLocalStream");this.pc.addStream(this.callLocalStream)}else{console.log("Add Stream of client.localStream");this.pc.addStream(y.localStream);this.callLocalStream=y.localStream}}else{console.log("Error : PC is null")}this.updateMedia()}}console.log("End of establishCall()")};this.onUserMediaSuccessTestUni=function(){y.getUserMediaOnGoing=false;console.log("onUserMediaSuccessTestUni : User has not granted access to local media.");var z=null;y.accessToLocalMedia=true;this.maybeStart();if(this.callee){z=new y.myWebRTC_Adapter.RTCSessionDescription(this.receivedSdpOfferMessage);console.log("Avant setRemote pour le callee"+z);this.pc.setRemoteDescription(z,this.callback(this,"onSetRemoteDescriptionSuccess"),this.callback(this,"onSetRemoteDescriptionFailure"));this.doAnswer()}};this.onUserMediaErrorOnCall=function(z){var A="media";y.getUserMediaOnGoing=false;console.log("Failed to get access to local media. Error code was "+z.code);y.setStatus("<div>Your phone is registered, you can be joigned with this number : "+y.clientId+"</div>");if(this.screenSharing===true){A="screenSharing";if(j.location.protocol!="https:"){console.log("You need to be connected using HTTPS for screenSharing");k.createDesktopCaptureEvent("UserMediaError_HTTPS_needed")}else{console.log("screenSharing UserMediaError");k.createDesktopCaptureEvent("UserMediaError")}}y.myWebRTC_Event.createUserMediaErrorEvent(true,A);if(this.callee){this.myWebRTC_Stack.sendBye(this.callId,this.calleeId,this.dest_roomId,this.callerId,"User_Media_Error");y.removeCallFromTableWithCallIdandRemoteId(this.callId,this.callerId,"User_Media_Error")}else{y.removeCallFromTableWithCallIdandRemoteId(this.callId,this.calleeId,"User_Media_Error")}};this.maybeStart=function(){console.log("maybeStart");if(!this.started&&y.channelReady&&y.accessToLocalMedia){console.log("Creating PeerConnection.");this.createPeerConnection();if(y.unidirectionelCallOnly){if(this.callee===false){console.log("Adding local stream.");if(this.callLocalStream!==null){console.log("Add Stream of callLocalStream");this.pc.addStream(this.callLocalStream)}else{console.log("Add Stream of client.localStream");this.pc.addStream(y.localStream);this.callLocalStream=y.localStream}}}else{console.log("Adding local stream.");if(this.callLocalStream!==null){this.pc.addStream(this.callLocalStream);console.log("Add Stream of callLocalStream")}else{console.log("Add Stream of client.localStream");this.pc.addStream(y.localStream);this.callLocalStream=y.localStream}}this.started=true;if(this.callee===false){console.log("Before doCall()");this.doCall()}}console.log("End of maybeStart")};this.createPeerConnection=function(){console.log("createPeerConnection");try{console.log("createPeerConnection with pc_config:"+this.pc_config);console.log("and pc_constraints:"+this.pc_constraints);this.pc=new y.myWebRTC_Adapter.RTCPeerConnection(this.pc_config,this.pc_constraints);this.pc.onicecandidate=this.callback(this,"onIceCandidate")}catch(z){console.log("Failed to create PeerConnection, exception: "+z.message);alert("Cannot create RTCPeerConnection object; WebRTC is not supported by this browser.");return}this.pc.onaddstream=this.callback(this,"onRemoteStreamAdded");this.pc.onremovestream=this.callback(this,"onRemoteStreamRemoved");this.pc.onnegotiationneeded=this.callback(this,"onNegotiationNeeded");this.pc.onsignalingstatechange=this.callback(this,"onSignalingStateChange");this.pc.oniceconnectionstatechange=this.callback(this,"onIceConnectionStateChange");if(y.qosEnable){this.statisticId=setInterval(this.callback(this,"getStatistics"),this.getStatsInterval)}};this.statisticsAnswer=function(B){var z="",A=B.result();if(!this.qm){this.qm=new qosMonitor(this.getStatsInterval/1000,this.onQosChange,this.onQosAudioChange,this.onQosVideoChange,this.callId,y.apiKey,y.clientId,y.socket)}if(A){this.qm.insertStats(A,this.sendedSdpOfferMessage,this.receivedSdpOfferMessage,y.remoteVideo)}};this.onQosChange=function(){};this.onQosAudioChange=function(){};this.onQosVideoChange=function(){};this.getStatistics=function(){if(this.pc){if(this.pc.getStats){this.pc.getStats(this.callback(this,"statisticsAnswer"))}else{console.log("no stats function")}}else{console.log("Not connected yet")}};this.doCall=function(){console.log("Sending offer to peer.");if(this.audioOnly){console.log("audioOnly call");this.pc.createOffer(this.callback(this,"setLocalAndSendMessageonOffer"),this.callback(this,"onCreateOfferFailure"),this.mediaConstraintsAudioOnly)}else{this.pc.createOffer(this.callback(this,"setLocalAndSendMessageonOffer"),this.callback(this,"onCreateOfferFailure"),this.mediaConstraints)}};this.doAnswer=function(){console.log("Sending answer to peer.");if(this.audioOnly){console.log("audioOnly call");this.pc.createAnswer(this.callback(this,"setLocalAndSendMessage"),this.callback(this,"onCreateAnswerFailure"),this.mediaConstraintsAudioOnly)}else{this.pc.createAnswer(this.callback(this,"setLocalAndSendMessage"),this.callback(this,"onCreateAnswerFailure"),this.mediaConstraints)}};this.doUpdateAnswer=function(){console.log("Sending answer to peer.");if(this.audioOnly){console.log("audioOnly call");this.pc.createAnswer(this.callback(this,"setLocalAndSendMessageUpdate"),this.callback(this,"onCreateAnswerFailure"),this.mediaConstraintsAudioOnly)}else{this.pc.createAnswer(this.callback(this,"setLocalAndSendMessageUpdate"),this.callback(this,"onCreateAnswerFailure"),this.mediaConstraints)}};this.updateMedia=function(){console.log("Sending Update offer to peer.");if(this.audioOnly){console.log("audioOnly call");this.pc.createOffer(this.callback(this,"setLocalAndSendMessageonOfferUpdate"),this.callback(this,"onCreateOfferFailure"),this.mediaConstraintsAudioOnly)}else{this.pc.createOffer(this.callback(this,"setLocalAndSendMessageonOfferUpdate"),this.callback(this,"onCreateOfferFailure"),this.mediaConstraints)}};this.setLocalAndSendMessageonOffer=function(z){console.log("setLocalAndSendMessageonOffer");console.log("sessionDescription="+z);var A=null;if(y.RTPMedia===true){z.sdp=z.sdp.replace(/RTP\/SAVPF/g,"RTP/SF")}if(this.audioOnly===true){z.sdp=y.mySDPManager.stripVideoMediaDescriptionFromSDP(z.sdp)}this.sendedSdpOfferMessage=z;if(this.callCancelled===false){if(y.NtoNConf===false){console.log("Conf N to 1");if(this.screenSharing===true){A="screenSharing"}if(this.trickleIce===true){this.myWebRTC_Stack.sendInvite(this.callId,this.callerId,y.nickname,this.dest_roomId,this.dest_roomId,z,A)}else{this.pc.setLocalDescription(this.sendedSdpOfferMessage,this.callback(this,"onSetLocalDescriptionSuccess"),this.callback(this,"onSetLocalDescriptionFailure"))}}else{console.log("Conf N to N");this.myWebRTC_Stack.sendInviteBroadcast(this.callId,this.callerId,y.nickname,this.dest_roomId,this.dest_roomId,z)}this.inviteSended=true}else{console.warn("Invite is not sended has call has been canceled");y.removeCallFromTableWithCallIdandRemoteId(this.callId,this.calleeId,"Call_Cancelled");if(y.callsTable.length===0){console.log("No more established calls for client");y.initMediaElementState();y.displayCallButtonInCommand()}}};this.setLocalAndSendMessageonOfferUpdate=function(z){console.log("setLocalAndSendMessageonOffer");console.log("sessionDescription="+z);this.sendedSdpOfferMessage=z;var A=0;if(this.callee){A=this.callerId}else{A=this.calleeId}this.myWebRTC_Stack.sendUpdate(this.callId,this.callerId,this.calleeId,this.dest_roomId,A,z)};this.onCreateOfferFailure=function(z){console.log("onCreateOfferFailure"+z)};this.onCreateAnswerFailure=function(z){console.log("onCreateAnswerFailure"+z)};this.setLocalAndSendMessage=function(z){console.log("setLocalAndSendMessage");if(y.RTPMedia===true){z.sdp=z.sdp.replace(/RTP\/SAVPF/g,"RTP/SF")}if(y.preferOpusCodec===true){console.log("AP Modif preferOpusCodec");z.sdp=this.preferOpus(z.sdp)}this.pc.setLocalDescription(z,this.callback(this,"onSetLocalDescriptionSuccess"),this.callback(this,"onSetLocalDescriptionFailure"));this.sendedSdpOfferMessage=z;if(this.trickleIce===true){this.myWebRTC_Stack.send200OK(this.callId,this.callerId,this.calleeId,y.nickname,this.dest_roomId,z)}};this.setLocalAndSendMessageUpdate=function(z){console.log("setLocalAndSendMessage");this.pc.setLocalDescription(z,this.callback(this,"onSetLocalDescriptionSuccess"),this.callback(this,"onSetLocalDescriptionFailure"));var A=0;if(this.callee){A=this.callerId}else{A=this.calleeId}this.myWebRTC_Stack.send200Update(this.callId,this.callerId,this.calleeId,this.dest_roomId,A,z)};this.onIceCandidate=function(A){console.log("onIceCandidate");if(this.pc!==null){console.log("Ice Connection State is now : "+this.pc.iceConnectionState);console.log("Ice  State is now : "+this.pc.iceState);console.log("Ice Gathering State is now : "+this.pc.iceGatheringState)}if(A.candidate){var C=0,B=0,z=0;if(this.callee){C=this.callerId}else{C=this.calleeId}if(y.mediaRoutingMode===y.mediaRoutingModeEnum.hostOnly){B=A.candidate.candidate.search("host");if(B!==-1){this.myWebRTC_Stack.sendCandidate(this.callId,this.callerId,this.calleeId,this.dest_roomId,C,A.candidate.sdpMLineIndex,A.candidate.sdpMid,A.candidate.candidate)}else{console.log("Media routing mode is hostOnly and not a HOST Candidate : ignoring message")}}else{if(y.mediaRoutingMode===y.mediaRoutingModeEnum.stun){B=A.candidate.candidate.search("host");z=A.candidate.candidate.search("srflx");if(B!==-1||z!==-1){this.myWebRTC_Stack.sendCandidate(this.callId,this.callerId,this.calleeId,this.dest_roomId,C,A.candidate.sdpMLineIndex,A.candidate.sdpMid,A.candidate.candidate)}else{console.log("Media routing mode is stun and not a HOST or SRFLX Candidate : ignoring message")}}else{if(y.mediaRoutingMode===y.mediaRoutingModeEnum.turn){console.log("Media routing mode is turn : all condidates are considered");this.myWebRTC_Stack.sendCandidate(this.callId,this.callerId,this.calleeId,this.dest_roomId,C,A.candidate.sdpMLineIndex,A.candidate.sdpMid,A.candidate.candidate)}else{if(y.mediaRoutingMode===y.mediaRoutingModeEnum.turnOnly){B=A.candidate.candidate.search("relay");if(B!==-1){this.myWebRTC_Stack.sendCandidate(this.callId,this.callerId,this.calleeId,this.dest_roomId,C,A.candidate.sdpMLineIndex,A.candidate.sdpMid,A.candidate.candidate)}else{console.log("Media routing mode is TurnOnly and not a RELAY Candidate : ignoring message")}}}}}}else{console.log("End of candidates.");if(this.trickleIce===false){if(this.callee===true){this.myWebRTC_Stack.send200OK(this.callId,this.callerId,this.calleeId,y.nickname,this.dest_roomId,this.pc.localDescription)}else{this.myWebRTC_Stack.sendInvite(this.callId,this.callerId,y.nickname,this.dest_roomId,this.dest_roomId,this.pc.localDescription);this.inviteSended=true}}}};this.onRemoteStreamAdded=function(A){console.log("Remote stream added.");console.log("CallId is :"+this.callId);console.log("ClientId is :"+y.clientId);var z=null,C="media",B=0;if(this.callee){B=this.callerId}else{B=this.calleeId}if(y.hideLocalVideoOnCall===true){if(y.localVideo){if(y.myWebRTC_Adapter.webrtcDetectedBrowser==="firefox"){if(y.localVideo.mozSrcObject!==""){y.localVideo.style.opacity=0}}else{if(y.localVideo.src!==""){y.localVideo.style.opacity=0}}}}y.transitionToActive();if(y.remoteVideo){y.remoteVideo.style.opacity=1}z=document.createElement("video");y.myWebRTC_Adapter.attachMediaStream(z,A.stream);z.autoplay=true;z.id="callId_"+this.callId+"-"+this.calleeId;if(y.remoteVideo){y.remoteVideo.appendChild(z)}if(this.screenSharing===true){C="screenSharing"}z.oncanplay=y.myWebRTC_Event.createCanPlayRemoteVideoEvent(z.id,C,B);y.remoteVideoDisplayManager()};this.onRemoteStreamRemoved=function(z){console.warn("Remote stream removed.")};this.onNegotiationNeeded=function(z){console.info("####  onNegotiationNeeded")};this.onSignalingStateChange=function(z){console.info("####  onSignalingStateChange")};this.onIceConnectionStateChange=function(z){console.info("####  onIceConnectionStateChange");if(this.pc!==null){console.log("Ice Connection State is now : "+this.pc.iceConnectionState);if(this.pc.iceConnectionState==="disconnected"){console.warn("disconnection detected")}else{if(this.pc.iceConnectionState==="failed"){console.warn("iceConnection failed detected");k.createErrorEvent("iceConnection failed detected","ICE_CONNECTION_STATE_FAILED")}}}else{console.log("Ice Connection State change with pc is null")}};this.callback=function(A,z){this.closureHandler=function(B){return A[z](B)};return this.closureHandler};this.preferOpus=function(z){var C=z.split("\r\n"),B=0,D=0,A=null;for(B=0;B<C.length;B+=1){if(C[B].search("m=audio")!==-1){D=B;break}}if(D===null){return z}for(B=0;B<C.length;B+=1){if(C[B].search("opus/48000")!==-1){A=this.extractSdp(C[B],/:(\d+) opus\/48000/i);if(A){C[D]=this.setDefaultCodec(C[D],A)}break}}C=this.removeCN(C,D);z=C.join("\r\n");return z};this.extractSdp=function(A,B){var z=A.match(B);return(z&&z.length==2)?z[1]:null};this.setDefaultCodec=function(A,D){var B=0,C=A.split(" "),E=new Array(),z=0;for(B=0;B<C.length;B++){if(z===3){E[z++]=D}if(C[B]!==D){E[z++]=C[B]}}return E.join(" ")};this.removeCN=function(A,E){var z=0,C=A[E].split(" "),D=null,B=0;for(z=A.length-1;z>=0;z--){D=this.extractSdp(A[z],/a=rtpmap:(\d+) CN\/\d+/i);if(D){B=C.indexOf(D);if(B!==-1){C.splice(B,1)}A.splice(z,1)}}A[E]=C.join(" ");return A}};n=function(B){this.localVideo=null;this.miniVideo=null;this.remoteVideo=null;this.localStream=null;this.statusDiv=null;this.commandDiv=null;this.remoteStream=null;this.channelReady=false;this.socket=B.channel.socket;this.clientId=B.apiCCId;this.apiKey=B.apiKey;this.isVideoMuted=false;this.isAudioMuted=false;this.callURLDestRoom=0;this.addingUserMedia=false;this.callsTable=[];this.accessToLocalMedia=false;this.unidirectionelCallOnly=false;this.NtoNConf=false;this.autoAnswer=false;this.RTPMedia=false;this.logoAdded=false;this.preferOpusCodec=false;this.mediaRoutingModeEnum={hostOnly:1,stun:2,turn:3,turnOnly:4};this.mediaRoutingMode=this.mediaRoutingModeEnum.turn;this.myWebRTC_Event=new d();this.myWebRTC_Adapter=new a();this.getUserMediaOnGoing=false;this.userAcceptOnIncomingCall=false;this.maxWidthRemoteVideo=0;this.maxHeightRemoteVideo=0;this.nickname=B.nickname;this.hideLocalVideoOnCall=true;this.allowMultipleCalls=false;this.mySDPManager=new o();this.MCUClient=new h(this.clientId);this.audioSourceId=null;this.videoSourceId=null;this.apiRTCExtensionInstalled=false;this.trickleIce=true;this.waitingShareScreenDestNumber=0;this.qosEnable=false;this.pc_config="";if(this.myWebRTC_Adapter.webrtcDetectedBrowser==="firefox"){console.log("createPeerConnection FIREFOX");console.log("webrtcDetectedVersion : "+this.myWebRTC_Adapter.webrtcDetectedVersion);this.pc_config={iceServers:[{url:"turn:46.105.45.162:443",credential:"password",username:"anonymous"}]}}else{if(this.myWebRTC_Adapter.webrtcDetectedVersion<28){console.log("chrome < 28");console.log("webrtcDetectedVersion : "+this.myWebRTC_Adapter.webrtcDetectedVersion);this.pc_config={iceServers:[{url:"turn:anonymous@46.105.45.162:443",credential:"password"}]}}else{console.log("chrome >= 28");console.log("webrtcDetectedVersion : "+this.myWebRTC_Adapter.webrtcDetectedVersion);this.pc_config={iceServers:[{url:"turn:46.105.45.162:443?transport=udp",credential:"password",username:"anonymous"}]}}}this.pc_constraints={optional:[{DtlsSrtpKeyAgreement:true}]};this.recordMgr=null;if(B.recordActivated===true){console.log("record feature is activated");if(j.location.protocol!="https:"){this.recordMgr=new q(this,"https://beta.apizee.com/contactBox.php/main/uploadFile")}else{this.recordMgr=new q(this,"http://beta.apizee.com/contactBox.php/main/uploadFile")}}this.initialize=function(D,C,F,H,G,E){console.log("localVideoDivName :"+D);this.localVideo=document.getElementById(D);if(this.localVideo===null){this.myWebRTC_Event.createErrorEvent("localVideo Div Name is not correct","INCORRECT_DIV_NAME_LOCALVIDEO")}console.log("miniLocalVideoDivName :"+C);this.miniVideo=document.getElementById(C);if(this.miniVideo===null){this.myWebRTC_Event.createErrorEvent("miniVideo Div Name is not correct","INCORRECT_DIV_NAME_MINIVIDEO")}console.log("remoteVideoDivName :"+F);this.remoteVideo=document.getElementById(F);if(this.remoteVideo===null){this.myWebRTC_Event.createErrorEvent("remoteVideo Div Name is not correct","INCORRECT_DIV_NAME_REMOTEVIDEO")}console.log("statusDivName :"+H);this.statusDiv=document.getElementById(H);if(this.statusDiv===null){this.myWebRTC_Event.createErrorEvent("status Div Name is not correct","INCORRECT_DIV_NAME_STATUS")}this.commandDiv=document.getElementById(G);if(this.commandDiv===null){this.myWebRTC_Event.createErrorEvent("command Div Name is not correct","INCORRECT_DIV_NAME_COMMAND")}else{console.log("Command buttons are managed by ApiRTC");this.displayCallButtonInCommand()}this.callURLDestRoom=this.checkURLForCallDestination();if(this.callURLDestRoom!==0){console.log("callURLDestRoom is not null");this.callperURL(this.callURLDestRoom);this.callURLDestRoom=0}this.initMediaElementState();this.setStatus("<div>Your phone is registered, you can be joigned with this number : "+this.clientId+"</div>")};this.activateScreenSharing=function(){console.log("activateScreenSharing");if(this.myWebRTC_Adapter.webrtcDetectedBrowser==="chrome"){var C=document.createElement("link");C.href="https://chrome.google.com/webstore/detail/mjjnofoemoepfididplbfimokpnpcoeg";C.rel="chrome-webstore-item";document.getElementsByTagName("head")[0].appendChild(C);j.postMessage("apiRTC-extension","*");j.addEventListener("message",function(F){var D=x.session.apiCCWebRTCClient.webRTCClient,E=null,G=0;if(F.origin!=j.location.origin){return}if(F.data=="apiRTC-DeskstopCapture-loaded"){D.apiRTCExtensionInstalled=true}if(F.data.desktopId!=e){console.log("event.data.desktopId :"+F.data.desktopId);console.log("event.data.callNumber :"+F.data.callNumber);x.session.apiCCWebRTCClient.webRTCClient.setStatus("Calling Destination number :"+F.data.callNumber);E=new b(x.session.apiCCWebRTCClient.webRTCClient);console.log("Calling destination number :"+F.data.callNumber);E.generateCallId();E.callerId=x.session.apiCCId;E.calleeId=F.data.callNumber;E.dest_roomId=F.data.callNumber;E.audioOnly=false;E.screenSharing=true;E.desktopId=F.data.desktopId;E.getUserMediaOnCall();G=x.session.apiCCWebRTCClient.webRTCClient.callsTable.push(E);console.log("Call Number is :"+G)}if(F.data=="mediaError"){console.log("desktop Capture has been refused by user or you need to be connected using https");if(j.location.protocol!="https:"){console.log("Please connect to your web page using 'HTTPS'. This is mandatory for desktop capture")}k.createDesktopCaptureEvent("UserMediaError")}if(F.data=="extensionInstalledAndLoaded"){console.log("extensionInstalledAndLoaded");console.log("this.waitingShareScreenDestNumber :"+x.session.apiCCWebRTCClient.webRTCClient.waitingShareScreenDestNumber);if(x.session.apiCCWebRTCClient.webRTCClient.waitingShareScreenDestNumber!==0){j.postMessage({command:"getDesktopId",callNumber:x.session.apiCCWebRTCClient.webRTCClient.waitingShareScreenDestNumber},"*");x.session.apiCCWebRTCClient.webRTCClient.waitingShareScreenDestNumber=0}}})}else{console.log("activateScreenSharing is only available for chrome Browser");k.createDesktopCaptureEvent("Browser_Not_Compatible")}};this.onSetLocalDescriptionSuccess=function(){console.log("onSetLocalDescriptionSuccess in WebRTC_Client")};this.onSetLocalDescriptionFailure=function(C){console.log("onSetLocalDescriptionFailure in WebRTC_Client :"+C)};this.onSetRemoteDescriptionSuccess=function(){console.log("onSetRemoteDescriptionSuccess in WebRTC_Client")};this.onSetRemoteDescriptionFailure=function(C){console.log("onSetRemoteDescriptionFailure in WebRTC_Client :"+C);console.log("e.name :"+C.name)};this.getUserMedia=function(){var E={mandatory:{},optional:[]},D=null;try{if(this.audioSourceId===null&&this.videoSourceId===null){D={audio:true,video:E}}else{E={mandatory:{},optional:[{sourceId:this.videoSourceId}]};D={audio:{optional:[{sourceId:this.audioSourceId}]},video:E}}this.myWebRTC_Adapter.getUserMedia(D,this.callback(this,"onUserMediaSuccess"),this.callback(this,"onUserMediaError"));console.log("Requested access to local media with new syntax.")}catch(C){alert("getUserMedia() failed. Is this a WebRTC capable browser?");console.log("getUserMedia failed with exception: "+C.message)}};this.onUserMediaSuccess=function(G){console.log("User has granted access to local media.");this.accessToLocalMedia=true;var E=false,F="Unknown",C=false,D="Unknown";if(this.miniVideo){this.myWebRTC_Adapter.attachMediaStream(this.miniVideo,G)}if(this.localVideo){this.myWebRTC_Adapter.attachMediaStream(this.localVideo,G);this.localVideo.style.opacity=1}this.localStream=G;if((G.getAudioTracks().length)>0){E=true;if(G.getAudioTracks()[0].label){F=(G.getAudioTracks()[0]).label}console.log("Using audio device: "+F)}if((G.getVideoTracks().length)>0){C=true;if(G.getVideoTracks()[0].label){D=(G.getVideoTracks()[0]).label}console.log("Using video device: "+D)}this.myWebRTC_Event.createUserMediaSuccessEvent(false,E,F,C,D,"media")};this.onUserMediaError=function(C){console.log("Failed to get access to local media. Error code was "+C.code);this.accessToLocalMedia=false;this.myWebRTC_Event.createUserMediaErrorEvent(false,"media")};this.processInvite=function(H){console.log("invite received from :"+H.callerId);var G=0,F=null,D=false,C=true,E=null;F=new b(this);F.callId=H.callId;F.callerId=H.callerId;F.calleeId=this.clientId;F.dest_roomId=H.roomId;F.callee=true;F.receivedSdpOfferMessage=H.sdpoffer;G=this.callsTable.push(F);console.log("Call Number is :"+G);if(H.callType==="screenSharing"){this.unidirectionelCallOnly=true;F.screenSharing=true}else{if(this.allowMultipleCalls===false){console.log("Refusing double call checking :");if(G>=2){console.log("Refusing double call");this.myWebRTC_Event.createCallAttemptEvent(this.clientId,H.callerId,H.callerNickname,F.callId);this.refuseCall(F.callId,"User_Busy");return}else{console.log("NOT Refusing double call")}}}E=this.mySDPManager.getVideoMediaDescriptionPart(H.sdpoffer.sdp);if(E!==e){D=this.mySDPManager.searchSDPForVideoRecvOnly(E)}else{C=false}if(D||C===false){F.audioOnly=true;console.log("Call is audio only")}if(this.autoAnswer===true){this.displayHangUpButtonInCommand()}if(this.unidirectionelCallOnly){this.setStatus("You are connected to "+H.callerId+', your audio and video media are not transmitted. <input type="button" id="AddMedia" value="Activate Audio & Video" onclick="apiCC.session.apiCCWebRTCClient.addMedia('+F.callId+')" />');F.onUserMediaSuccessTestUni();this.myWebRTC_Event.createIncomingCallEvent(this.clientId,H.callerId,H.callerNickname,F.callId,false,G,false,H.callType)}else{if(this.accessToLocalMedia===true&&this.autoAnswer===true){this.setStatus("You are connected to :"+H.callerId);console.log("User has already granted access to local media and AutoAnswer activated : establishing call");this.myWebRTC_Event.createIncomingCallEvent(this.clientId,H.callerId,H.callerNickname,F.callId,true,G,F.audioOnly,H.callType);if(this.userAcceptOnIncomingCall){console.log("Waiting for call accept or refuse from user")}else{console.log("userAcceptOnIncomingCall is not activated");F.establishCall()}}else{this.setStatus("Incoming Call from :"+H.callerId+'. Click on "Autoriser" button to accept.');this.myWebRTC_Event.createIncomingCallEvent(this.clientId,H.callerId,H.callerNickname,F.callId,false,G,F.audioOnly,H.callType);F.getUserMediaOnCall()}}};this.process200OK=function(I){console.log("200OK received from :"+I.calleeId);var F=null,E=null,C=null,H=0,D=null,J="media";F=this.findCallWithCallIdAndRemoteId(I.callId,I.calleeId);if(F===null){E=this.findCallWithCallId(I.callId);if(E!==null){console.log("200OK received with an existing callID but not calleeId, creation of new conference call");C=new b(this);C.callId=I.callId;C.callerId=I.callerId;C.calleeId=I.calleeId;C.dest_roomId=I.roomId;C.callee=false;C.createPeerConnection();C.sendedSdpOfferMessage=E.sendedSdpOfferMessage;C.audioOnly=false;try{C.callLocalStream=new webkitMediaStream(E.callLocalStream.getAudioTracks(),E.callLocalStream.getVideoTracks())}catch(G){console.log("callLocalStream copy for Chrome 26");C.callLocalStream=new webkitMediaStream(E.callLocalStream);console.log("call3.callLocalStream"+C.callLocalStream)}C.generatedLocalStream=true;C.started=true;H=this.callsTable.push(C);console.log("Call Number is :"+H);console.log("call3.callLocalStream === null");C.pc.addStream(E.callLocalStream);C.pc.setLocalDescription(C.sendedSdpOfferMessage,this.callback(this,"onSetLocalDescriptionSuccess"),this.callback(this,"onSetLocalDescriptionFailure"));D=new this.myWebRTC_Adapter.RTCSessionDescription(I.sdpanswer);console.log("Avant setRemote sur Answer"+D);C.pc.setRemoteDescription(D,this.callback(this,"onSetRemoteDescriptionSuccess"),this.callback(this,"onSetRemoteDescriptionFailure"));this.setStatus("You are connected to :"+I.calleeId);this.myWebRTC_Event.createCallEstablishedEvent(I.calleeId,"media")}else{console.log("200OK received but callId is not matching, no process");this.myWebRTC_Event.createErrorEvent("200OK received but callId is not matching, no process","NOT_MATCHING_CALLID_ON_200OK");return}}else{F.calleeId=I.calleeId;F.pc.setLocalDescription(F.sendedSdpOfferMessage,this.callback(this,"onSetLocalDescriptionSuccess"),this.callback(this,"onSetLocalDescriptionFailure"));D=new this.myWebRTC_Adapter.RTCSessionDescription(I.sdpanswer);F.receivedSdpOfferMessage=I.sdpanswer;F.pc.setRemoteDescription(D,this.callback(this,"onSetRemoteDescriptionSuccess"),this.callback(this,"onSetRemoteDescriptionFailure"));this.setStatus("You are connected to :"+I.calleeId);if(F.screenSharing===true){J="screenSharing"}this.myWebRTC_Event.createCallEstablishedEvent(I.calleeId,J)}};this.processCandidate=function(E){var D=null,C=null;if(E.callerId===this.clientId){D=this.findCallWithCallIdAndRemoteId(E.callId,E.calleeId)}else{D=this.findCallWithCallIdAndRemoteId(E.callId,E.callerId)}if(D!==null){if(D.started){if(D.pc!==null){C=new this.myWebRTC_Adapter.RTCIceCandidate({sdpMLineIndex:E.label,candidate:E.candidate});D.pc.addIceCandidate(C)}else{console.log("Error, call is not null but pc is null")}}else{console.log("Call not started")}}else{console.log("Call not found, Candidate message is not handeled")}};this.processUpdate=function(E){console.log("Update message on:"+E.roomId);var D=null,C=null;if(E.callerId===this.clientId){D=this.findCallWithCallIdAndRemoteId(E.callId,E.calleeId)}else{D=this.findCallWithCallIdAndRemoteId(E.callId,E.callerId)}if(D===null){this.myWebRTC_Event.createErrorEvent("Cannot find call to process Update","CALL_NOT_FOUND_ON_UPDATE");return}C=new this.myWebRTC_Adapter.RTCSessionDescription(E.sdpoffer);console.log("remoteDesc"+C);D.pc.setRemoteDescription(C,this.callback(this,"onSetRemoteDescriptionSuccess"),this.callback(this,"onSetRemoteDescriptionFailure"));D.doUpdateAnswer()};this.process200Update=function(E){console.log("200 Update received from :"+E.calleeId);this.setStatus("You are connected to :"+E.calleeId);var D=null,C=null;D=this.findCallWithRoomId(E.roomId);if(D===null){this.myWebRTC_Event.createErrorEvent("Cannot find call to process 200 Update","CALL_NOT_FOUND_ON_200UPDATE");return}D.calleeId=E.calleeId;D.pc.setLocalDescription(D.sendedSdpOfferMessage,this.callback(this,"onSetLocalDescriptionSuccess"),this.callback(this,"onSetLocalDescriptionFailure"));C=new this.myWebRTC_Adapter.RTCSessionDescription(E.sdpanswer);console.log("Avant setRemote sur Answer"+C);D.pc.setRemoteDescription(C,this.callback(this,"onSetRemoteDescriptionSuccess"),this.callback(this,"onSetRemoteDescriptionFailure"));if(this.addingUserMedia===true){console.log("adding localvideo in mini");if(this.miniVideo){this.miniVideo.style.opacity=1}this.addingUserMedia=false}};this.onHangup=function(){this.setStatus("<div>Your phone is registered, you can be joigned with this number : "+this.clientId+"</div>");console.log("Hanging up.");this.initMediaElementState();console.log("Leaving all calls that are established");this.myWebRTC_Event.createHangupEvent("local",this.clientId,0,true,"Hangup");this.removeAllCalls();this.displayCallButtonInCommand()};this.removeAllCalls=function(){console.log("removeAllCalls");var D=this.callsTable.length,C=0,H=0,G=null,F=null,E=0;console.log("callsNumber = "+D);for(C=0;C<D;C+=1){H=0;if(this.callsTable[C-E].callee){H=this.callsTable[C-E].callerId}else{H=this.callsTable[C-E].calleeId}if(this.callsTable[C-E].callee===true){F="Hangup_From_Callee";this.callsTable[C-E].myWebRTC_Stack.sendBye(this.callsTable[C-E].callId,this.clientId,this.callsTable[C-E].dest_roomId,H,F)}else{F="Hangup_From_Caller";if(this.callsTable[C-E].inviteSended===true){this.callsTable[C-E].myWebRTC_Stack.sendBye(this.callsTable[C-E].callId,this.clientId,this.callsTable[C-E].dest_roomId,H,F)}else{this.callsTable[C-E].callCancelled=true;console.warn("Leaving call iteration on removeAllCalls");continue}}if(this.callsTable[C-E].callLocalStream!==null){console.log("Stopping call local Stream");if(this.callsTable[C-E].generatedLocalStream===true){console.log("This is a created MediaStream")}else{if(this.autoAnswer===false){console.log("Stopping call local Stream");this.callsTable[C-E].callLocalStream.stop()}}}if(this.callsTable[C-E].pc!==null){console.log("Closing PC");if(this.qosEnable){if(typeof(this.callsTable[C-E].qm)!=="undefined"){this.callsTable[C-E].qm.saveStatsToDb(true);clearInterval(this.callsTable[C-E].statisticId)}}this.callsTable[C-E].pc.close();this.callsTable[C-E].pc=null}G=this.callsTable[C-E].callId+"-"+this.callsTable[C-E].calleeId;this.removeRemoteVideoDisplay(G);console.log("Removing call from table");this.callsTable.splice(C-E,1);E+=1}};this.onRemoteHangup=function(C,F,D,E){console.log("onRemoteHangup");this.removeCallFromTableWithCallIdandRemoteId(C,F,E);console.log("Reason : "+E);if(E===e){this.setStatus("<div>Your partner : "+F+" have left the call. You can be joigned with this number : "+this.clientId+"</div>")}else{this.setStatus("<div>Call hangup with reason : "+E+". You can be joigned with this number : "+this.clientId+"</div>");console.log("Remote Hangup for reason : "+E)}if(this.callsTable.length===0){console.log("No more established calls for client");this.initMediaElementState();this.myWebRTC_Event.createRemoteHangupEvent(this.clientId,F,true,E);this.myWebRTC_Event.createHangupEvent("remote",this.clientId,F,true,E);this.displayCallButtonInCommand();if(this.getUserMediaOnGoing===true){console.log("Cancel from Remote");location.reload();this.getUserMediaOnGoing=false}}else{console.log("Other calls are still established");this.myWebRTC_Event.createRemoteHangupEvent(this.clientId,F,false,E);this.myWebRTC_Event.createHangupEvent("remote",this.clientId,F,false,E)}};this.removeCallFromTableWithCallIdandRemoteId=function(D,E,H){console.log("removeCallFromTableWithCallIdandRemoteId() with reason :"+H);var C=0,G=null,F=0;C=this.findCallIndexWithCallIdAndRemoteId(D,E);if(C!==-1){console.log("Session terminated.");if(this.callsTable[C].callLocalStream!==null){if(this.callsTable[C].generatedLocalStream===true){console.log("This is a created MediaStream")}else{if(this.autoAnswer===false){console.log("Stopping call local Stream");this.callsTable[C].callLocalStream.stop()}}}if(this.callsTable[C].pc!==null){console.log("Closing PC");if(this.qosEnable){if(typeof(this.callsTable[C].qm)!=="undefined"){this.callsTable[C].qm.saveStatsToDb(true);clearInterval(this.callsTable[C].statisticId)}}this.callsTable[C].pc.close();this.callsTable[C].pc=null}G=this.callsTable[C].callId+"-"+this.callsTable[C].calleeId;this.removeRemoteVideoDisplay(G);console.log("Removing call from table");this.callsTable.splice(C,1);console.log("Call is terminated");F=this.callsTable.length;if(F!==0){this.myWebRTC_Adapter.attachMediaStream(this.miniVideo,this.callsTable[0].callLocalStream)}}else{console.log("No call removed")}};this.transitionToActive=function(){console.log("transitionToActive");if(this.remoteVideo){this.remoteVideo.style.opacity=1}setTimeout(this.callback(this,"callback2"),1000)};this.callback2=function(){if(this.miniVideo){this.miniVideo.style.opacity=1}};this.initMediaElementState=function(){if(this.autoAnswer===false){if(this.localVideo){this.localVideo.style.opacity=0;this.localVideo.src=""}}else{if(this.localVideo){this.localVideo.style.opacity=1}}if(this.remoteVideo){this.remoteVideo.style.opacity=0;this.remoteVideo.src=""}if(this.miniVideo){this.miniVideo.style.opacity=0}if(this.autoAnswer===true){console.log("autoAnswer Activated : localStream is not stopped")}else{if(this.miniVideo){this.miniVideo.src=""}}};this.toggleVideoMute=function(){console.log("toggleVideoMute");var C=0,D=this.callsTable.length;if(this.isVideoMuted){if(this.localStream!==null){this.unMuteTracks(this.localStream.getVideoTracks())}for(C=0;C<D;C+=1){if(this.callsTable[C].callLocalStream!==null){this.unMuteTracks(this.callsTable[C].callLocalStream.getVideoTracks())}}}else{if(this.localStream!==null){this.muteTracks(this.localStream.getVideoTracks())}for(C=0;C<D;C+=1){if(this.callsTable[C].callLocalStream!==null){this.muteTracks(this.callsTable[C].callLocalStream.getVideoTracks())}}}this.isVideoMuted=!this.isVideoMuted};this.unMuteTracks=function(C){var D=0;if(C.length===0){console.log("No tracks available.");return}for(D=0;D<C.length;D+=1){C[D].enabled=true}console.log("tracks unMuted.")};this.muteTracks=function(C){var D=0;if(C.length===0){console.log("No tracks available.");return}for(D=0;D<C.length;D+=1){C[D].enabled=false}console.log("tracks muted.")};this.toggleAudioMute=function(){console.log("toggleAudioMute");var C=0,D=this.callsTable.length;if(this.isAudioMuted){if(this.localStream!==null){this.unMuteTracks(this.localStream.getAudioTracks())}for(C=0;C<D;C+=1){if(this.callsTable[C].callLocalStream!==null){this.unMuteTracks(this.callsTable[C].callLocalStream.getAudioTracks())}}}else{if(this.localStream!==null){this.muteTracks(this.localStream.getAudioTracks())}for(C=0;C<D;C+=1){if(this.callsTable[C].callLocalStream!==null){this.muteTracks(this.callsTable[C].callLocalStream.getAudioTracks())}}}this.isAudioMuted=!this.isAudioMuted};function z(Z,R,J){var T=Z.width,V=T<<2,Q=Z.height,Y=null,S=0,C=0,P=0,K=0,I=0,G=0,F=0,L=0,W=0,M=0,H=0,O=0,E=0,X=0,U=0,D=0,N=0;if(R){Y=R.data;if(J<0){J=0}if(J>=2.5){S=0.98711*J-0.9633}else{if(J>=0.5){S=3.97156-4.14554*Math.sqrt(1-0.26891*J)}else{S=2*J*(3.97156-4.14554*Math.sqrt(1-0.26891*0.5))}}C=S*S;P=C*S;K=1.57825+(2.44413*S)+(1.4281*C)+(0.422205*P);I=((2.44413*S)+(2.85619*C)+(1.26661*P))/K;G=(-((1.4281*C)+(1.26661*P)))/K;F=(0.422205*P)/K;L=1-(I+G+F);for(W=0;W<3;W++){for(M=0;M<Q;M++){H=M*V+W;O=M*V+((T-1)<<2)+W;E=Y[H];X=E;U=X;D=U;for((H=M*V+W);H<=O;H+=4){E=L*Y[H]+I*X+G*U+F*D;Y[H]=E;D=U;U=X;X=E}H=M*V+((T-1)<<2)+W;O=M*V+W;E=Y[H];X=E;U=X;D=U;for((H=M*V+((T-1)<<2)+W);H>=O;H-=4){E=L*Y[H]+I*X+G*U+F*D;Y[H]=E;D=U;U=X;X=E}}}for(W=0;W<3;W++){for(N=0;N<T;N++){H=(N<<2)+W;O=(Q-1)*V+(N<<2)+W;E=Y[H];X=E;U=X;D=U;for((H=(N<<2)+W);H<=O;H+=V){E=L*Y[H]+I*X+G*U+F*D;Y[H]=E;D=U;U=X;X=E}H=(Q-1)*V+(N<<2)+W;O=(N<<2)+W;E=Y[H];X=E;U=X;D=U;for((H=(Q-1)*V+(N<<2)+W);H>=O;H-=V){E=L*Y[H]+I*X+G*U+F*D;Y[H]=E;D=U;U=X;X=E}}}return(R)}}function y(E,C){E.clearRect(0,0,E.width,E.height);if(C.width>0&&C.height>0){try{E.drawImage(C,0,0,C.width,C.height);return(E.getImageData(0,0,E.width,E.height))}catch(D){console.log("exception: "+D)}}}this.xhr=function(C,E,G,F){var D=new XMLHttpRequest();D.onreadystatechange=function(){if(D.readyState==4&&D.status==200){G(D.responseText)}};if(typeof F!=="undefined"){D.upload.onprogress=F}D.open("POST",C);D.send(E)};this.takeSnapshot=function(F,Q,S,P,R,C){console.log("takeSnapshot");var T=null,V=null,I=document.createElement("canvas"),K=null,H=null,E=null,D=null,U=null,O=0,L=null,N=null,J=new Date(),M=J.toJSON(),G=M.replace(new RegExp(":","g"),"-");switch(P){case"Desactivated":O=0;break;case"Low":O=2;break;case"Medium":O=4;break;case"High":O=6;break;default:console.log("blurLevel not defined switch case : "+P);break}I.width=this.localVideo.clientWidth;I.height=this.localVideo.clientHeight;console.log("snapshot.width : "+I.width);console.log("snapshot.height :"+I.height);T=I.getContext("2d");T.drawImage(this.localVideo,0,0,I.width,I.height);V=document.createElement("img");V.src=I.toDataURL("image/png");V.style.padding=5;V.width=I.width;V.height=I.height;if(O!==0){L=T.getImageData(0,0,I.width,I.height);console.log("av pixels data : "+L.data);L=z(V,L,O);console.log("ap pixels data : "+L.data);T.putImageData(L,0,0);V.src=I.toDataURL("image/png")}else{console.log("blur on photo is desactivated")}if(typeof(Q)==="object"){if(Q!==null){Q.src=V.src}else{console.log("localPhotoIdOrDiv is null")}}else{if(document.getElementById(Q)!==null){document.getElementById(Q).src=V.src}else{console.log("localPhotoId is not defined")}}N=new FormData();if(R!==e){console.log("sessionId !== undefined :"+R);N.append("destFileName",this.clientId+"-"+G+".png");N.append("data",I.toDataURL("image/png"));N.append("sessionId",R)}else{console.log("Upload on data1");N.append("photo",I.toDataURL("image/png"));N.append("clientId",this.clientId);N.append("apiKey",x.session.apiKey)}this.xhr(F,N,function(Y){console.log("fileName :"+Y);if(Y!=="Photo received"||Y!=="An error occurred."){try{var W=JSON.parse(Y);console.log("files loaded, filename :"+W.fileUrl);k.createSnapShotPhotoUploaded(W.fileUrl)}catch(X){console.log("Parsing error:",X)}}},C)};this.callWithNumber=function(E,C){console.log("Click on Call Button, video activated : "+C);var D=null,F=0;F=this.callsTable.length;if(F===0){if(E!==""&&E!==this.clientId){this.setStatus("Calling Destination number :"+E);D=new b(this);console.log("Calling destination number :"+E);D.generateCallId();D.callerId=this.clientId;D.calleeId=E;D.dest_roomId=E;D.audioOnly=!C;if(this.accessToLocalMedia===true&&this.autoAnswer===true){console.log("User has already granted access to local media and AutoAnswer activated : establishing call");D.establishCall()}else{D.getUserMediaOnCall()}F=this.callsTable.push(D);console.log("Call Number is :"+F);if(this.autoAnswer===true){this.displayHangUpButtonInCommand()}}else{this.setStatus("Dialed call number is not correct :"+E+".You can be joigned with this number : "+this.clientId);console.log("Call Number is incorrect")}}else{console.log("User is already calling, cannot call a second destination")}};this.extensionInstallationSuccessCallback=function(){console.log("extensionInstallationSuccessCallback");x.session.apiCCWebRTCClient.webRTCClient.apiRTCExtensionInstalled=true};this.extensionInstallationFailureCallback=function(){console.log("extensionInstallationFailureCallback");k.createDesktopCaptureEvent("Extension_installation_Error")};this.shareScreen=function(C){console.log("shareScreen");if(this.myWebRTC_Adapter.webrtcDetectedBrowser==="chrome"){if(this.apiRTCExtensionInstalled===false){this.setStatus("ApiRTC extension need to be installed to enable screen sharing.<br>You can be joigned with this number : "+this.clientId);console.warn("apiRTC extension not installed");k.createDesktopCaptureEvent("Extension_not_installed");chrome.webstore.install("https://chrome.google.com/webstore/detail/mjjnofoemoepfididplbfimokpnpcoeg",this.callback(this,"extensionInstallationSuccessCallback"),this.callback(this,"extensionInstallationFailureCallback"));this.waitingShareScreenDestNumber=C;return}if(C!==""&&C!==this.clientId){j.postMessage({command:"getDesktopId",callNumber:C},"*")}else{this.setStatus("Dialed call number is not correct :"+C+".You can be joigned with this number : "+this.clientId);console.log("Call Number is incorrect")}}else{console.log("shareScreen is only available for chrome Browser");k.createDesktopCaptureEvent("Browser_Not_Compatible")}};function A(D){var C=new RegExp("^[0-9a-z._-]+@{1}[0-9a-z.-]{2,}[.]{1}[a-z]{2,5}$","i");return(C.test(D))}this.callbymail=function(C){console.log("Click on Call per mail Button");if(A(C)){console.log("Calling Destination mail :"+C);this.socket.emit("webrtc_invite_permail",C);B.channel.socket.emit("webrtc_invite_permail",C)}else{console.log("Mail address is not correct :"+C)}};this.callperURL=function(C){console.log("Call per URL");var D=null,E=0;D=new b(this);console.log("Calling Destination number :"+C);D.generateCallId();D.callerId=this.clientId;D.calleeId=C;D.dest_roomId=C;D.audioOnly=false;D.getUserMediaOnCall();E=this.callsTable.push(D);console.log("Call Number is :"+E)};this.acceptCall=function(D){console.log("acceptCall for callId :"+D);var C=null;C=this.findCallWithCallId(D);if(C!==null){console.log("Call found");if(this.accessToLocalMedia===true){console.log("User has already granted access to local media and AutoAnswer activated : establishing call");C.establishCall()}else{C.getUserMediaOnCall()}}else{console.log("Call not found")}};this.refuseCall=function(E,F){console.log("refuseCall for callId :"+E);var D=null,C=null;if(F!==e){C=F}else{C="User_Refuse_Call"}D=this.findCallWithCallId(E);if(D!==null){console.log("Call found");D.myWebRTC_Stack.sendBye(D.callId,D.calleeId,D.dest_roomId,D.callerId,C);this.removeCallFromTableWithCallIdandRemoteId(D.callId,D.callerId,C);if(this.callsTable.length===0){console.log("No more established calls for client");this.initMediaElementState()}}else{console.log("Call not found")}};this.addMedia=function(D){console.log("addMedia for callId :"+D);this.addingUserMedia=true;var C=null;C=this.findCallWithCallId(D);if(C!==null){if(this.accessToLocalMedia===true&&this.autoAnswer===true){console.log("User has already granted access to local media and AutoAnswer activated : establishing call");C.establishCall()}else{C.getUserMediaOnCall()}}};this.findCallWithRoomId=function(E){var C=0,D=this.callsTable.length;for(C=0;C<D;C+=1){if(this.callsTable[C].dest_roomId===E){return this.callsTable[C]}}console.log("Call not found");return null};this.findCallIndexWithCallIdAndRemoteId=function(D,E){var C=0,F=this.callsTable.length;for(C=0;C<F;C+=1){if(this.callsTable[C].callId==D){if((this.callsTable[C].callee===true&&this.callsTable[C].callerId==E)||(this.callsTable[C].callee===false&&this.callsTable[C].calleeId==E)){console.log("Call found with callId and remoteId");return C}}}console.log("Call not found");return -1};this.findCallWithCallId=function(D){var C=0,E=this.callsTable.length;console.log("callsNumber :"+E);for(C=0;C<E;C+=1){console.log("this.callsTable[i].callId :"+this.callsTable[C].callId);if(this.callsTable[C].callId==D){return this.callsTable[C]}}console.log("Call not found");return null};this.findCallWithCallIdAndRemoteId=function(D,E){var C=0,F=this.callsTable.length;console.log("callsNumber :"+F);for(C=0;C<F;C+=1){if(this.callsTable[C].callId===D){if((this.callsTable[C].callee===true&&this.callsTable[C].callerId==E)||(this.callsTable[C].callee===false&&this.callsTable[C].calleeId==E)){return this.callsTable[C]}}}console.log("Call not found");return null};this.findCallWithRemoteId=function(D){console.log("findCallWithRemoteId");var C=0,E=this.callsTable.length;console.log("callsNumber :"+E);for(C=0;C<E;C+=1){if((this.callsTable[C].callee===true&&this.callsTable[C].callerId==D)||(this.callsTable[C].callee===false&&this.callsTable[C].calleeId==D)){console.log("Call found with remoteId");return this.callsTable[C]}}console.log("Call not found");return null};this.remoteVideoDisplayManager=function(){console.log("remoteVideoDisplayManager");var E=0,G=null,F=0,H=0,I=0,C=0,J=3/4*C,D=0,K=0;if(this.remoteVideo){if(this.maxWidthRemoteVideo===0){this.maxWidthRemoteVideo=this.remoteVideo.clientWidth}if(this.maxHeightRemoteVideo===0){this.maxHeightRemoteVideo=this.remoteVideo.clientHeight}G=this.remoteVideo.children;F=G.length;H=this.maxWidthRemoteVideo;I=this.maxHeightRemoteVideo;console.log("maxWidth"+H);console.log("maxHeight"+I);C=this.remoteVideo.clientWidth;J=3/4*C}if(C>H){C=H}C=C/F;J=3/4*C;if(J>I){J=I;C=4/3*J}D=C/H*100;K=J/I*100;D=D+"%";K=K+"%";console.log("widthinPercent"+D);console.log("heightinPercent"+K);for(E=0;E<F;E+=1){G[E].style.cssText="width:"+D+";height:"+K+";"}J=j.innerHeight-J-60};this.removeRemoteVideoDisplay=function(C){console.log("removeRemoteVideoDisplay with callId ="+C);var G="callId_"+C,E=0,D=null,F=0;if(this.remoteVideo){D=this.remoteVideo.children;F=D.length}for(E=0;E<F;E+=1){if(D[E].id===G){this.remoteVideo.removeChild(D[E]);console.log("VideoDisplay removed for "+G);return}}this.remoteVideoDisplayManager()};this.setStatus=function(C){if(this.statusDiv!==null){this.statusDiv.innerHTML=C}else{console.log("Status Div Null")}};this.displayCallButtonInCommand=function(){if(this.commandDiv!==null){var C='<input type="texte" name="mail" value="" placeholder="Enter Destination number..."><a href="#" onClick = "apiCC.session.apiCCWebRTCClient.call(document.forms.form1.mail.value);"><img src="http://www.apizee.com/Demo/images/Call.png" height="30px"></a></input>';this.commandDiv.innerHTML='<form name="form1" action="">'+C+"</form>"}};this.displayHangUpButtonInCommand=function(){console.log("displayHangUpButtonInCommand");if(this.commandDiv!==null){this.commandDiv.innerHTML='<a href="#" onClick = "apiCC.session.apiCCWebRTCClient.toggleAudioMute()"> <img src="http://www.apizee.com/Demo/images/Microphone.png" height="30px" disabled="true"></a><a href="#" onClick = "apiCC.session.apiCCWebRTCClient.toggleVideoMute();"> <img src="http://www.apizee.com/Demo/images/Camera2.png" height="30px" disabled="true"></a><a href="#" onClick = "apiCC.session.apiCCWebRTCClient.hangUp()"> <img src="http://www.apizee.com/Demo/images/Hangup.png" height="30px" disabled="true"> </a>'}};this.checkURLForCallDestination=function(){var C=0;if(location.search.substring(1,5)==="room"){console.log("Call establishment using URL");C=location.search.substring(6);console.log("Destination call number is :"+C)}return C};this.releaseUserMedia=function(){console.log("releaseUserMedia");if(this.localStream!==null){console.log("stopping localStream");this.localStream.stop();this.localStream=null;this.accessToLocalMedia=false;this.autoAnswer=false;console.log("this.autoAnswer :"+this.autoAnswer)}};this.callback=function(D,C){this.closureHandler=function(E){return D[C](E)};return this.closureHandler}};x.ApiCCIMClient=function(z,y){console.log("apiCC.ApiCCIMClient");this.convTable=[];this.myWebRTC_Event=new d();this.nickname=z.nickname;this.photoURL=null;this.userDataSetted=false;this.findIMIdWithDestID=function(C){var B=0,A=this.convTable.length;console.log("findIMIdWithDestID = "+C);for(B=0;B<A;B+=1){console.log("this.convTable[i].dest_roomId = "+this.convTable[B].dest_roomId);if(this.convTable[B].dest_roomId==C){return((this.convTable[B]).IMId)}}console.log("Conversation IMId not found");return 0};this.addInConvTable=function(C){console.log("addInConvTable");var B=0,A=this.convTable.length;for(B=0;B<A;B+=1){console.log("this.convTable[i].dest_roomId = "+this.convTable[B].dest_roomId);if(this.convTable[B].dest_roomId==C.dest_roomId){this.convTable[B].IMId=C.IMId;return}}console.log("Conversation not found in the table, adding ..");this.convTable.push(C);return};this.sendMessage=function(B,C){console.log("Call sending message function .... from :"+this.nickname+" message :"+C);var A=this.findIMIdWithDestID(B),E=null,F=null,D=null;if(A===0){console.log("Creation of a new IM conversation")}else{console.log("Message is for existing conversation with ID : "+A)}console.log("IMConvId :"+A);E={type:"IMMessage",IMId:A,senderId:z.apiCCId,nickname:this.nickname,photoURL:this.photoURL,dstRoomId:B,data:C};F=JSON.stringify(E);D=document.createElement("message");console.log("C->S: "+F);z.channel.socket.emit("IMMessage",F);if(this.conversation!==null){D.innerHTML="<b>me :</b> "+C+"<br>";this.conversation.appendChild(D);this.conversation.scrollTop=this.conversation.scrollHeight}};this.newConversationCreated=function(B){console.log("newConversationCreated :"+B);console.log("msg.dstRoomId :"+B.dstRoomId);console.log("msg.IMId :"+B.IMId);var A={dest_roomId:B.dstRoomId,IMId:B.IMId};this.addInConvTable(A)};this.receiveMessage=function(E){console.log("Call receiveMessage message :"+E);var D=false,B=0,C=null,A=null;A={dest_roomId:E.senderId,IMId:E.IMId};this.addInConvTable(A);if(this.conversation!==null){C=document.createElement("message");C.innerHTML="<b>"+E.nickname+":</b> "+E.data+"<br>";this.conversation.appendChild(C);this.conversation.scrollTop=this.conversation.scrollHeight}this.myWebRTC_Event.createReceiveIMMessageEvent(E.senderId,E.nickname,E.photoURL,E.data)};this.createGroupChat=function(A,B){console.log("createGroupChat with contacts : "+A+","+B);var C=null,D=null;C={type:"createGroupChat",nickname:this.nickname,photoURL:this.photoURL,contactId1:A,contactId2:B};D=JSON.stringify(C);console.log("C->S: "+D);z.channel.socket.emit("createGroupChat",D)};this.groupChatCreation=function(A){console.log("groupChatCreation");this.myWebRTC_Event.createGroupChatCreationEvent(A.status,A.groupChatId,A.contactId1,A.invitationSendedToInitialDestId,A.contactId2,A.invitationSendedToNewContactId)};this.joinGroupChat=function(B){console.log("joinGroupChat : "+B);var A=null,C=null;A={type:"joinGroupChat",groupChatId:B};C=JSON.stringify(A);console.log("C->S: "+C);z.channel.socket.emit("joinGroupChat",C)};this.groupChatInvitation=function(A){console.log("groupChatInvitation");this.myWebRTC_Event.createGroupChatInvitationEvent(A.groupChatId,A.senderId,A.senderNickname,A.senderPhotoURL,A.contactList)};this.answerToGroupChatInvitation=function(C,A){console.log("answerToGroupChatInvitation: "+C+" : "+A);if(A===true||A===false){var B=null,D=null;B={type:"groupChatInvitationAnswer",groupChatId:C,senderId:z.apiCCId,nickname:this.nickname,photoURL:this.photoURL,accept:A};D=JSON.stringify(B);console.log("C->S: "+D);z.channel.socket.emit("groupChatInvitationAnswer",D)}else{console.log("accept value is not correct")}};this.groupChatMemberUpdate=function(A){console.log("groupChatMemberUpdate");this.myWebRTC_Event.createGroupChatMemberUpdateEvent(A.groupChatId,A.contactList,A.status)};this.addUserInGroupChat=function(C,B){console.log("addUser : "+B+"in Group Chat with Id :"+C);var A=null,D=null;A={type:"addUserInGroupChat",groupChatId:C,nickname:this.nickname,photoURL:this.photoURL,contactId:B};D=JSON.stringify(A);console.log("C->S: "+D);z.channel.socket.emit("addUserInGroupChat",D)};this.addUserInGroupChatAnswer=function(A){console.log("addUserInGroupChatAnswer");this.myWebRTC_Event.createAddUserInGroupChatEvent(A.invitationSended,A.groupChatId,A.contactId)};this.leaveGroupChat=function(B){console.log("Leave Group Chat with Id :"+B);var A=null,C=null;A={type:"leaveGroupChat",groupChatId:B,nickname:this.nickname,photoURL:this.photoURL};C=JSON.stringify(A);console.log("C->S: "+C);z.channel.socket.emit("leaveGroupChat",C)};this.sendMessageToGroupChat=function(C,A){console.log("Call sending message to Group Chat .... from :"+this.nickname+" message :"+A);var B=null,D=null;B={type:"groupChatMessage",groupChatId:C,senderId:z.apiCCId,nickname:this.nickname,data:A};D=JSON.stringify(B);console.log("C->S: "+D);z.channel.socket.emit("groupChatMessage",D)};this.receiveGroupChatMessage=function(A){console.log("receiveGroupChatMessage");this.myWebRTC_Event.createReceiveGroupChatMessageEvent(A.groupChatId,A.senderId,A.nickname,A.data)};this.getConversationHistory=function(C){console.log("getConversationHistory");var A=null,B=null;A={type:"getConversationHistory",convId:C};B=JSON.stringify(A);console.log("C->S: "+B);z.channel.socket.emit("getConversationHistory",B)};this.receiveConversationHistory=function(E){console.log("receiveConversationHistory");console.log("msg.convId :"+E.convId);var A=0,C=0,D=[],B=null;if(E.convHistory!==null){console.log("msg.convHistory.length :"+E.convHistory.length);C=E.convHistory.length;D=[];for(A=0;A<C;A+=1){B=JSON.parse(E.convHistory[A]);D.push(B)}}this.myWebRTC_Event.createReceiveConversationHistoryEvent(E.convId,D,E.status)};this.setUserData=function(A){console.log("setUserData");this.photoURL=A.photoURL;z.photoURL=A.photoURL;console.log("photoURL :"+this.photoURL);var B=null,C=null;B={type:"setUserData",nickname:this.nickname,photoURL:this.photoURL};C=JSON.stringify(B);console.log("C->S: "+C);z.channel.socket.emit("setUserData",C);this.userDataSetted=true};this.getUserData=function(B){console.log("getUserData");var A=null,C=null;A={type:"getUserData",contactId:B};C=JSON.stringify(A);console.log("C->S: "+C);z.channel.socket.emit("getUserData",C)};this.receiveUserDataAnswer=function(A){console.log("receiveUserDataAnswer");this.myWebRTC_Event.createUserDataAnswerEvent(A.userFound,A.contactId,A.nickname,A.photoURL)};this.initialize=function(A){var B=null,D=null,C=null;console.log("conversationElementId :"+A);this.conversation=document.getElementById(A);if(this.conversation===null){this.myWebRTC_Event.createErrorEvent("conversationElementId Div Name is not correct","INCORRECT_DIV_NAME_CONVERSATION");console.log("conversationElementId is null")}B={type:"registerIM",username:this.nickname};D=JSON.stringify(B);console.log("C->S: "+D);z.channel.socket.emit("registerIM",D)};this.initialize(y)};x.ApiCCDataClient=function(y){console.log("apiCC.ApiCCDataClient");this.sendData=function(z,A){console.log("Call sending data function .... to :"+z+" message :"+A);var B=null,C=null;B={type:"dataMessage",senderId:y.apiCCId,dstRoomId:z,data:A};C=JSON.stringify(B);console.log("C->S: "+C);y.channel.socket.emit("dataMessage",C)};this.receiveData=function(z){console.log("receiveData :"+z.data);k.createReceiveDataEvent(z.senderId,z.dstRoomId,z.data)}};g=function(z,y){console.log("RoomManager");this.createRoom=function(A){console.log("RoomManager:createRoom with roomType : "+A);var B=null,C=null;B={type:"createRoom",roomType:A,nickname:z.nickname,photoURL:z.photoURL};C=JSON.stringify(B);console.log("C->S: "+C);z.channel.socket.emit("createRoom",C)};this.roomCreation=function(A){console.log("RoomManager:roomCreation");y(A)};this.inviteInRoom=function(B,D,A){console.log("RoomManager:inviteInRoom with roomType : "+A);var C=null,E=null;C={type:"inviteInRoom",roomId:B,contactId:D,roomType:A,nickname:z.nickname,photoURL:z.photoURL};E=JSON.stringify(C);console.log("C->S: "+E);z.channel.socket.emit("inviteInRoom",E)};this.inviteInRoomStatus=function(A){console.log("inviteInRoomStatus");y(A)};this.roomInvitation=function(A){console.log("roomInvitation :"+A);y(A)};this.answerToRoomInvitation=function(C,B,A){console.log("answerToRoomInvitation: "+C+" : "+B);if(B===true||B===false){var D=null,E=null;D={type:"roomInvitationAnswer",roomId:C,senderId:z.apiCCId,nickname:z.nickname,photoURL:z.photoURL,accept:B,roomType:A};E=JSON.stringify(D);console.log("C->S: "+E);z.channel.socket.emit("roomInvitationAnswer",E)}else{console.log("accept value is not correct")}};this.roomMemberUpdate=function(A){console.log("roomMemberUpdate");y(A)};this.sendMessageToRoom=function(B,A,C){console.log("Call sending message to Room .... from :"+z.apiCCId+" message :"+C);var D=null,E=null;D={type:"roomMessage",roomId:B,senderId:z.apiCCId,nickname:z.nickname,roomType:A,data:C};E=JSON.stringify(D);console.log("C->S: "+E);z.channel.socket.emit("roomMessage",E)};this.receiveRoomMessage=function(A){console.log("receiveRoomMessage");y(A)};this.leaveRoom=function(B,A){console.log("Leave Room with Id :"+B);var C=null,D=null;C={type:"leaveRoom",roomId:B,nickname:z.nickname,photoURL:z.photoURL,roomType:A};D=JSON.stringify(C);console.log("C->S: "+D);z.channel.socket.emit("leaveRoom",D)}};x.ApiCCWhiteBoardClient=function(A,C,z,y){console.log("apiCC.ApiCCWhiteBoardClient");this.roomId=null;this.createRoom=function(){console.log("createRoom()");A.roomMgr.createRoom("whiteBoard")};this.inviteInRoom=function(D,E){console.log("inviteInRoom()");A.roomMgr.inviteInRoom(D,E,"whiteBoard")};this.answerToRoomInvitation=function(E,D){console.log("answerToRoomInvitation()");A.roomMgr.answerToRoomInvitation(E,D,"whiteBoard")};this.leaveRoom=function(D){console.log("leaveRoom()");A.roomMgr.leaveRoom(D,"whiteBoard")};this.clearPaper=function(){console.log("clearPaper()");var D=this.canvas.width;this.canvas.width=D};this.canvas=document.getElementById(C);this.ctx=this.canvas.getContext("2d");this.drawLine=function(E,G,D,F){this.ctx.moveTo(E,G);this.ctx.lineTo(D,F);this.ctx.stroke()};this.getContext=function(){return this.ctx};function B(D){var F=1,E=setInterval(function(){if(F<=0.1){clearInterval(E);D.style.display="none"}D.style.opacity=F;D.style.filter="alpha(opacity="+F*100+")";F-=F*0.1},50)}this.loadPhotoInBackground=function(E){console.log("loadPhotoInBackground :"+E);var D=document.getElementsByTagName("body")[0];D.style.backgroundImage="url("+E+")";D.style.backgroundPosition="50% 50%";D.style.backgroundRepeat="no-repeat"};this.messageProcessing=function(F){console.log("messageProcessing :"+F);var E=null,D=null,G=null;if(!(F.id in this.clients)){console.log("creating cursor for new user : "+F.id);E=document.createElement("div");E.className="cursor";E.id="cursorId"+F.id;this.cursors[F.id]=E;D=document.getElementById(z);D.appendChild(E)}this.cursors[F.id].style.left=F.x;this.cursors[F.id].style.top=F.y;if(F.drawing&&this.clients[F.id]){this.drawLine(this.clients[F.id].x,this.clients[F.id].y,F.x,F.y);if(typeof(focusOnDrawing)!=="undefined"){G=this.canvas.parentNode;G.scrollLeft=(F.x)-(G.clientWidth/2);G.scrollTop=(F.y)-(G.clientHeight/2)}}this.clients[F.id]=F};this.start=function(){console.log("starting WhiteBoardClient");var E=false,F={},D=0;this.clients={};this.cursors={};this.canvas.onmousedown=function(H){H.preventDefault();E=true;F.x=H.offsetX;F.y=H.offsetY;var G=document.getElementById(y);if(G!==null){B(G)}};this.canvas.onmouseup=function(){E=false};this.canvas.onmouseleave=function(){E=false};D=Date.now();this.canvas.onmousemove=function(H){if(Date.now()-D>30){var G={x:H.offsetX,y:H.offsetY,drawing:E,id:x.session.apiCCId};A.roomMgr.sendMessageToRoom(x.session.apiCCWhiteBoardClient.roomId,"whiteBoard",G);D=Date.now()}if(E){x.session.apiCCWhiteBoardClient.drawLine(F.x,F.y,H.offsetX,H.offsetY);F.x=H.offsetX;F.y=H.offsetY}}};this.stop=function(){console.log("Stopping WhiteBoardClient");this.canvas.onmousedown=null;this.canvas.onmouseup=null;this.canvas.onmouseleave=null;this.canvas.onmousemove=null}};x.ApiCCCoBrowsingClient=function(y){console.log("apiCC.ApiCCCoBrowsingClient");this.createRoom=function(){console.log("createRoom()");y.roomMgr.createRoom("coBrowsing")};this.inviteInRoom=function(z,A){console.log("inviteInRoom()");y.roomMgr.inviteInRoom(z,A,"coBrowsing")};this.answerToRoomInvitation=function(A,z){console.log("answerToRoomInvitation()");y.roomMgr.answerToRoomInvitation(A,z,"coBrowsing")};this.leaveRoom=function(z){console.log("leaveRoom()");y.roomMgr.leaveRoom(z,"coBrowsing")}};x.ApiCCWebRTCClient=function(C,D,A,y,z,B){console.log("apiCC.ApiCCWebRTCClient");this.myWebRTC_Event=new d();this.webRTCClient=new n(C);this.webRTCClient.channelReady=true;this.webRTCClient.initialize(D,A,y,z,B);this.call=function(E){this.webRTCClient.callWithNumber(E,true)};this.activateScreenSharing=function(){this.webRTCClient.activateScreenSharing()};this.shareScreen=function(E){this.webRTCClient.shareScreen(E,true)};this.callAudio=function(E){this.webRTCClient.callWithNumber(E,false)};this.callbymail=function(E){this.webRTCClient.callbymail(E)};this.addMedia=function(E){this.webRTCClient.addMedia(E)};this.hangUp=function(){this.webRTCClient.onHangup()};this.getMyMedia=function(){this.webRTCClient.getUserMedia()};this.autoAnswerUserMediaSuccessHandler=function(E){this.webRTCClient.autoAnswer=true};this.autoAnswerUserMediaErrorHandler=function(E){this.webRTCClient.autoAnswer=false};this.activateAutoAnswer=function(){x.addEventListener("userMediaSuccess",this.callback(this,"autoAnswerUserMediaSuccessHandler"));x.addEventListener("userMediaError",this.callback(this,"autoAnswerUserMediaErrorHandler"));this.webRTCClient.getUserMedia()};this.getAutoAnswer=function(){return this.webRTCClient.autoAnswer};this.setUnidirectionalCall=function(E){if(E===true||E===false){this.webRTCClient.unidirectionelCallOnly=E}else{this.myWebRTC_Event.createErrorEvent("parameter error when calling function : setUnidirectionalCall()","PARAMETER_ERROR_SETUNIDIRCALL")}};this.getUnidirectionalCall=function(){return this.webRTCClient.unidirectionelCallOnly};this.toggleVideoMute=function(){this.webRTCClient.toggleVideoMute()};this.isVideoMuted=function(){return this.webRTCClient.isVideoMuted};this.toggleAudioMute=function(){this.webRTCClient.toggleAudioMute()};this.isAudioMuted=function(){return this.webRTCClient.isAudioMuted};this.setNtoNConf=function(E){if(E===true||E===false){this.webRTCClient.NtoNConf=E}else{this.myWebRTC_Event.createErrorEvent("parameter error when calling function : setNtoNConf()","PARAMETER_ERROR_SETNTONCONF")}};this.getNtoNConf=function(){return this.webRTCClient.NtoNConf};this.setRTPMedia=function(E){if(E===true||E===false){this.webRTCClient.RTPMedia=E}else{this.myWebRTC_Event.createErrorEvent("parameter error when calling function : setRTPMedia()","PARAMETER_ERROR_SETRTPMEDIA")}};this.getRTPMedia=function(){return this.webRTCClient.RTPMedia};this.setMediaRoutingMode=function(E){if(E==="hostOnly"){this.webRTCClient.mediaRoutingMode=this.webRTCClient.mediaRoutingModeEnum.hostOnly}else{if(E==="stun"){this.webRTCClient.mediaRoutingMode=this.webRTCClient.mediaRoutingModeEnum.stun}else{if(E==="turn"){this.webRTCClient.mediaRoutingMode=this.webRTCClient.mediaRoutingModeEnum.turn}else{if(E==="turnOnly"){this.webRTCClient.mediaRoutingMode=this.webRTCClient.mediaRoutingModeEnum.turnOnly}else{this.myWebRTC_Event.createErrorEvent("parameter error when calling function : setMediaRoutingMode()","PARAMETER_ERROR_SETMEDIAROUTINGMODE")}}}}};this.enableQos=function(E){console.log("this.enableQos="+E);this.webRTCClient.qosEnable=E};this.getMediaRoutingMode=function(){var E=null;if(this.webRTCClient.mediaRoutingMode===this.webRTCClient.mediaRoutingModeEnum.hostOnly){E="hostOnly"}else{if(this.webRTCClient.mediaRoutingMode===this.webRTCClient.mediaRoutingModeEnum.stun){E="stun"}else{if(this.webRTCClient.mediaRoutingMode===this.webRTCClient.mediaRoutingModeEnum.turn){E="turn"}else{if(this.webRTCClient.mediaRoutingMode===this.webRTCClient.mediaRoutingModeEnum.turnOnly){E="turnOnly"}}}}return E};this.takeSnapshot=function(I,F,E,H,G){this.webRTCClient.takeSnapshot(I,F,C.apiKey,E,H,G)};this.setUserAcceptOnIncomingCall=function(E){if(E===true||E===false){this.webRTCClient.userAcceptOnIncomingCall=E}else{this.myWebRTC_Event.createErrorEvent("parameter error when calling function : setUserAcceptOnIncomingCall()","PARAMETER_ERROR_SETUSERACCEPTONINCOCALL")}};this.setHideLocalVideoOnCall=function(E){if(E===true||E===false){this.webRTCClient.hideLocalVideoOnCall=E}else{this.myWebRTC_Event.createErrorEvent("parameter error when calling function : hideLocalVideoOnCall()","PARAMETER_ERROR_SETHIDELOCALVIDEOONCALL")}};this.setAllowMultipleCalls=function(E){if(E===true||E===false){this.webRTCClient.allowMultipleCalls=E}else{this.myWebRTC_Event.createErrorEvent("parameter error when calling function : setAllowMultipleCalls()","PARAMETER_ERROR_SETALLOWMULTIPLECALLS")}};this.setPcConfig=function(E){console.log("Setting PC_config to :"+E);this.webRTCClient.pc_config=E};this.setPcConstraints=function(E){console.log("Setting PC_constraints to :"+E);this.webRTCClient.pc_constraints=E};this.setTrickleIce=function(E){console.log("Setting trickleIce to :"+E);if(E===true||E===false){this.webRTCClient.trickleIce=E}else{this.myWebRTC_Event.createErrorEvent("parameter error when calling function : setTrickleIce()","PARAMETER_ERROR_SETTRICKLEICE")}};this.acceptCall=function(E){this.webRTCClient.acceptCall(E)};this.refuseCall=function(E){this.webRTCClient.refuseCall(E)};this.releaseUserMedia=function(){this.webRTCClient.releaseUserMedia()};this.createMCUSession=function(E,F){console.log("createMCUSession");if(this.webRTCClient.MCUClient.TBLibIsLoaded===false){$LAB.script(function(){return"//static.opentok.com/webrtc/v2.2/js/opentok.min.js"}).wait(function(){x.session.apiCCWebRTCClient.webRTCClient.MCUClient.TBLibIsLoaded=true;x.session.apiCCWebRTCClient.webRTCClient.MCUClient.initDivElements(E,F);x.session.apiCCWebRTCClient.webRTCClient.MCUClient.createSession()})}else{this.webRTCClient.MCUClient.initDivElements(E,F);this.webRTCClient.MCUClient.createSession()}};this.joinMCUSession=function(F,G,E){console.log("joinMCUSession");if(this.webRTCClient.MCUClient.TBLibIsLoaded===false){$LAB.script(function(){return"//static.opentok.com/webrtc/v2.2/js/opentok.min.js"}).wait(function(){x.session.apiCCWebRTCClient.webRTCClient.MCUClient.TBLibIsLoaded=true;x.session.apiCCWebRTCClient.webRTCClient.MCUClient.initDivElements(F,G);x.session.apiCCWebRTCClient.webRTCClient.MCUClient.joinSession(E)})}else{this.webRTCClient.MCUClient.initDivElements(F,G);this.webRTCClient.MCUClient.joinSession(E)}};this.takeSnapshotOnMCUSession=function(E){console.log("takeSnapshotOnMCUSession");var F=this.webRTCClient.MCUClient.takeSnapshot(E);return F};this.sendMCUSessionInvitation=function(F,G,E){this.webRTCClient.MCUClient.sendSessionInvitation(F,G,E)};this.sendMCUSessionInvitationToGroupChat=function(E,F){this.webRTCClient.MCUClient.sendSessionInvitationToGroupChat(E,F)};this.acceptMCUSessionInvitation=function(G,E,F,H){if(this.webRTCClient.MCUClient.TBLibIsLoaded===false){$LAB.script(function(){return"//static.opentok.com/webrtc/v2.2/js/opentok.min.js"}).wait(function(){x.session.apiCCWebRTCClient.webRTCClient.MCUClient.TBLibIsLoaded=true;x.session.apiCCWebRTCClient.webRTCClient.MCUClient.initDivElements(F,H);x.session.apiCCWebRTCClient.webRTCClient.MCUClient.acceptSessionInvitation(G,E)})}else{this.webRTCClient.MCUClient.initDivElements(F,H);this.webRTCClient.MCUClient.acceptSessionInvitation(G,E)}};this.leaveMCUSession=function(){this.webRTCClient.MCUClient.leaveSession()};this.recordType=null;this.duration=60000;this.listenerOnRecordEventAdded=false;this.sessionIdForRecord=null;this.recordStreamUserMediaSuccessHandler=function(E){console.log("recordStreamUserMediaSuccessHandler");this.webRTCClient.recordMgr.record("local",this.recordType,this.duration,this.sessionIdForRecord)};this.recordStreamUserMediaErrorHandler=function(E){console.log("Error on media for recordStream")};this.recordStream=function(G,E,F){console.log("recordStream");this.recordType=G;this.sessionIdForRecord=F;if(E>60000){E=60000}this.duration=E;if(this.webRTCClient.recordMgr!==null){if(this.webRTCClient.recordMgr.recordOngoing===false){if(this.listenerOnRecordEventAdded===false){x.addEventListener("userMediaSuccess",this.callback(this,"recordStreamUserMediaSuccessHandler"));x.addEventListener("userMediaError",this.callback(this,"recordStreamUserMediaErrorHandler"));this.listenerOnRecordEventAdded=true}this.webRTCClient.getUserMedia()}else{console.log("record already Ongoing")}}else{console.log("Error this.webRTCClient.recordMgr === null")}};this.stopRecordStream=function(){console.log("stopRecordStream");if(this.webRTCClient.recordMgr!==null){if(this.webRTCClient.recordMgr.recordOngoing===false){console.log("record is not Ongoing")}else{console.log("record is Ongoing");this.webRTCClient.recordMgr.stop()}}else{console.log("Error this.webRTCClient.recordMgr === null")}};this.setUploadServerAddressForRecord=function(E){this.webRTCClient.recordMgr.setUploadServerAddress(E)};this.getMediaDevices=function(F){console.log("getMediaDevices");if(typeof MediaStreamTrack==="undefined"){F(null);alert("This browser does not support MediaStreamTrack.\n\nTry Chrome Canary.")}else{try{MediaStreamTrack.getSources(F)}catch(E){console.debug("catch MediaStreamTrack.getSources :"+E);F(null)}}};this.setAudioSourceId=function(E){console.log("setAudioSourceId :"+E);this.webRTCClient.audioSourceId=E};this.setVideoSourceId=function(E){console.log("setVideoSourceId :"+E);this.webRTCClient.videoSourceId=E};this.callback=function(F,E){this.closureHandler=function(G){return F[E](G)};return this.closureHandler}};x.ApiCCSession=function(z){this.apiCCId=null;this.apiKey=null;this.nickname=null;this.photoURL=null;this.apiCCWebRTCClient=null;this.apiCCIMClient=null;this.apiCCDataClient=null;this.apiCCIDCookie=null;this.channel=null;this.recordActivated=z.recordActivated;this.sessionId=null;this.apiCCWhiteBoardClient=null;this.apiCCCoBrowsingClient=null;this.ccsServer=z.ccsServer;this.userData=z.userData;this.roomManagerEventHandler=function(A){console.log("roomManagerEventHandler, roomId :"+A.roomId);console.log("type :"+A.type);console.log("roomType :"+A.roomType);if(A.roomType==="whiteBoard"){console.log("msg.roomType === whiteBoard");if(A.type==="roomCreation"){console.log("whiteBoard : roomCreation");this.apiCCWhiteBoardClient.roomId=A.roomId;k.createRoomCreationEvent(A.status,A.roomId,A.roomType)}if(A.type==="roomInvitation"){console.log("whiteBoard : roomInvitation");this.apiCCWhiteBoardClient.roomId=A.roomId;k.createRoomInvitationEvent(A.roomId,A.senderId,A.senderNickname,A.senderPhotoURL,A.contactList,A.roomType)}if(A.type==="roomMessage"){console.log("whiteBoard : roomMessage :"+A);this.apiCCWhiteBoardClient.messageProcessing(A.data);k.createReceiveRoomMessageEvent(A.roomId,A.senderId,A.nickname,A.data,A.roomType)}if(A.type==="roomMemberUpdate"){console.log("whiteBoard : roomMemberUpdate :"+A);k.createRoomMemberUpdateEvent(A.roomId,A.contactList,A.status,A.roomType)}}else{if(A.roomType==="coBrowsing"){console.log("msg.roomType === coBrowsing");if(A.type==="roomCreation"){console.log("coBrowsing : roomCreation");k.createRoomCreationEvent(A.status,A.roomId,A.roomType)}if(A.type==="roomInvitation"){console.log("coBrowsing : roomInvitation");k.createRoomInvitationEvent(A.roomId,A.senderId,A.senderNickname,A.senderPhotoURL,A.contactList,A.roomType)}if(A.type==="roomMessage"){console.log("coBrowsing : roomMessage :"+A);k.createReceiveRoomMessageEvent(A.roomId,A.senderId,A.nickname,A.data,A.roomType)}if(A.type==="roomMemberUpdate"){console.log("coBrowsing : roomMemberUpdate :"+A);k.createRoomMemberUpdateEvent(A.roomId,A.contactList,A.status,A.roomType)}}}};this.callback=function(B,A){this.closureHandler=function(C){return B[A](C)};return this.closureHandler};this.roomMgr=new g(this,this.callback(this,"roomManagerEventHandler"));if(z.xhrPolling===true){this.xhrPolling=true}else{this.xhrPolling=false}this.getCookie=function(B){var A=new RegExp("(?:; )?"+B+"=([^;]*);?");if(A.test(document.cookie)){return decodeURIComponent(RegExp.$1)}else{return null}};this.generateApiCCID=function(){console.log("apiCCId is not defined by user, checking if a cookie for apiCCId exist");this.apiCCIDCookie=this.getCookie("apiCCId");if(this.apiCCIDCookie!==null){console.log("apiCCId cookie exist : "+this.apiCCIDCookie);this.apiCCId=this.apiCCIDCookie}else{console.log(" No apiCCId cookie : generating an apiCCId");this.apiCCId=Math.floor(Math.random()*1000001).toString();console.log("Creation of new ApiRTC session with Id : "+this.apiCCId)}};this.getNumericIdFromAlpha=function(C){console.log("getNumericIdFromAlpha new : "+C);var B=0,A=0,D=null;if(C.length==0){return B}for(A=0;A<C.length;A++){D=C.charCodeAt(A);B=((B<<5)-B)+D;B=B&B}console.log("getNumericIdFromAlpha returned value: "+(B>>>0));return(B>>>0)};if(z!==e){if(z.apiKey===e){alert('Error : Initialisation parameters: "apikey" for session creation is not defined');console.log('Error : Initialisation parameters: "apikey" for session creation is not defined');return null}else{console.log("Session creation with apiKey : "+z.apiKey);this.apiKey=z.apiKey;if(z.onReady===e){alert('Error : Initialisation parameters: "onReady" for session creation is not defined');console.log('Error : Initialisation parameters: "onReady" for session creation is not defined');return null}else{x.addEventListener("sessionReady",z.onReady);this.sessionId=this.getCookie("sessionId");if(z.apiCCId===e){this.generateApiCCID()}else{console.log("Session creation with apiCCId defined by user : "+z.apiCCId);if(w(z.apiCCId)){this.apiCCId=z.apiCCId}else{console.log("Converting this Id in a numeric one");var y=this.getNumericIdFromAlpha(z.apiCCId);y=y+"";console.log("Numeric Id is : "+y);if(w(y)){console.warn("Id has been converted to a numeric one");this.apiCCId=y}else{console.warn("Error : Defined apiCCId :"+z.apiCCId+" is not numeric. ApiCCID is generated");this.generateApiCCID()}}}this.channel=new m(this);this.channel.initialize()}}if(z.nickname!==null&&z.nickname!==e){console.log("Nickname is defined :"+z.nickname);this.nickname=z.nickname}else{console.log("Nickname is not defined, setting to apiCCId value :"+this.apiCCId);this.nickname=this.apiCCId}if(z.photoURL!==null&&z.photoURL!==e){console.log("photoURL is defined :"+z.photoURL);this.photoURL=z.photoURL}else{console.log("photoURL is not defined");this.photoURL=null}}else{alert("Error : Initialisation parameters for session creation are not defined");console.log("Error : Initialisation parameters for session creation are not defined");return null}this.reOpenChannel=function(A,B){console.log("reOpenChannel");this.apiCCId=A;this.apiKey=B;this.channel.socket.disconnect();this.channel.channelReady=false;this.channel.socket=null;this.channel.channelId=this.apiCCId;this.channel.initialize();this.apiCCWebRTCClient.webRTCClient.socket=this.channel.socket};this.onChannelOpened=function(){console.log("ApiCCSession onChannelOpened");console.log("params.ApiDBActivated :"+z.ApiDBActivated);if(z.ApiDBActivated===true){console.log("apiDB initialisation");apiDB.init(this.channel.socket)}k.createSessionReadyEvent(x.session.apiCCId)};this.createWebRTCClient=function(A){console.log("createWebRTCClient");if((A!==e)&&(A!==null)){this.apiCCWebRTCClient=new x.ApiCCWebRTCClient(this,A.localVideo,A.minilocalVideo,A.remoteVideo,A.status,A.command);k.createWebRTCClientCreatedEvent();return this.apiCCWebRTCClient}else{console.log("Error : Initialisation parameters is null or not defined on WebRTCClient creation");return null}};this.createWhiteBoard=function(C,B,A){console.log("createWhiteBoard");this.apiCCWhiteBoardClient=new x.ApiCCWhiteBoardClient(this,C,B,A);return this.apiCCWhiteBoardClient};this.createCoBrowsing=function(){console.log("createCoBrowsing");this.apiCCCoBrowsingClient=new x.ApiCCCoBrowsingClient(this);return this.apiCCCoBrowsingClient};this.createIMClient=function(A){console.log("createIMClient :"+A);this.apiCCIMClient=new x.ApiCCIMClient(this,A);return this.apiCCIMClient};this.createDataClient=function(){console.log("createDataClient");this.apiCCDataClient=new x.ApiCCDataClient(this);return this.apiCCDataClient};this.getConversationList=function(C){console.log("getConversationList request");var A=null,B=null;if(C!==e){A={type:"getConversationList",lastConversationNb:C}}else{A={type:"getConversationList",lastConversationNb:50}}B=JSON.stringify(A);console.log("C->S: "+B);this.channel.socket.emit("getConversationList",B)};this.receiveConversationListAnswer=function(E){console.log("receiveConversationListAnswer");console.log("msg.convList.length :"+E.convList.length);var A=0,C=E.convList.length,D=[],B=null;for(A=0;A<C;A+=1){console.log("i ="+A);B=JSON.parse(E.convList[A]);D.push(B)}k.createReceiveConversationListAnswerEvent(D)};this.getContactOccurrencesFromConversationList=function(C){console.log("getContactOccurrencesFromConversationList request");var A=null,B=null;if(C!==e){A={type:"getContactOccurrencesFromConversationList",lastConversationNb:C}}else{A={type:"getContactOccurrencesFromConversationList",lastConversationNb:50}}B=JSON.stringify(A);console.log("C->S: "+B);this.channel.socket.emit("getContactOccurrencesFromConversationList",B)};this.receiveContactOccurrencesFromConversationListAnswer=function(A){console.log("receiveContactOccurrencesFromConversationListAnswer");console.log("msg.contactOccurrencesTable.length :"+A.contactOccurrencesTable.length);k.createReceiveContactOccurrencesFromConversationListAnswerEvent(A.contactOccurrencesTable)};this.getConversationDetailReport=function(C){console.log("getConversationDetailReport for convId :"+C);var A=null,B=null;A={type:"getConversationDetailReport",convId:C};B=JSON.stringify(A);console.log("C->S: "+B);this.channel.socket.emit("getConversationDetailReport",B)};this.receiveConversationDetailReportAnswer=function(A){console.log("receiveConversationDetailReportAnswer");console.log("msg.CDR :"+A.CDR);k.createReceiveConversationDetailReportAnswerEvent(A.CDR)};this.updatePresence=function(A){console.log("updatePresence"+A);k.createUpdatePresenceEvent(A.connectedUsersList,A.state,A.connectedUsersListWithStatus)};this.updateUserStatus=function(A){console.log("updateUserStatus"+A);k.createUpdateUserStatusEvent(A)};this.sendDebugCommand=function(D,C,B){console.log("sendDebugCommand :"+D);var A=new r(this.channel.socket);A.sendDebugCommand("getClientSocketsInfo",C,B)};this.processSignalingMessage=function(A){var B=JSON.parse(A);if(B.type==="invite"){if(this.apiCCWebRTCClient){this.apiCCWebRTCClient.webRTCClient.processInvite(B)}else{console.warn("WebRTCClient is not created")}}else{if(B.type==="200OK"){if(this.apiCCWebRTCClient){this.apiCCWebRTCClient.webRTCClient.process200OK(B)}else{console.warn("WebRTCClient is not created")}}else{if(B.type==="candidate"){if(this.apiCCWebRTCClient){this.apiCCWebRTCClient.webRTCClient.processCandidate(B)}else{console.warn("WebRTCClient is not created")}}else{if(B.type==="bye"){if(this.apiCCWebRTCClient){console.log("bye message from:"+B.clientId+" for callId : "+B.callId);this.apiCCWebRTCClient.webRTCClient.onRemoteHangup(B.callId,B.clientId,B.roomId,B.reason)}else{console.warn("WebRTCClient is not created")}}else{if(B.type==="update"){if(this.apiCCWebRTCClient){this.apiCCWebRTCClient.webRTCClient.processUpdate(B)}else{console.warn("WebRTCClient is not created")}}else{if(B.type==="200update"){if(this.apiCCWebRTCClient){this.apiCCWebRTCClient.webRTCClient.process200Update(B)}else{console.warn("WebRTCClient is not created")}}else{if(B.type==="newConversationCreated"){if(this.apiCCIMClient){this.apiCCIMClient.newConversationCreated(B)}else{console.warn("IMClient is not created")}}else{if(B.type==="IMMessage"){if(this.apiCCIMClient){this.apiCCIMClient.receiveMessage(B)}else{console.warn("IMClient is not created")}}else{if(B.type==="groupChatCreation"){if(this.apiCCIMClient){this.apiCCIMClient.groupChatCreation(B)}else{console.warn("IMClient is not created")}}else{if(B.type==="groupChatInvitation"){if(this.apiCCIMClient){this.apiCCIMClient.groupChatInvitation(B)}else{console.warn("IMClient is not created")}}else{if(B.type==="groupChatMemberUpdate"){if(this.apiCCIMClient){this.apiCCIMClient.groupChatMemberUpdate(B)}else{console.warn("IMClient is not created")}}else{if(B.type==="addUserInGroupChatAnswer"){if(this.apiCCIMClient){this.apiCCIMClient.addUserInGroupChatAnswer(B)}else{console.warn("IMClient is not created")}}else{if(B.type==="groupChatMessage"){if(this.apiCCIMClient){this.apiCCIMClient.receiveGroupChatMessage(B)}else{console.warn("IMClient is not created")}}else{if(B.type==="conversationHistoryAnswer"){if(this.apiCCIMClient){this.apiCCIMClient.receiveConversationHistory(B)}else{console.warn("IMClient is not created")}}else{if(B.type==="getUserDataAnswer"){if(this.apiCCIMClient){this.apiCCIMClient.receiveUserDataAnswer(B)}else{console.warn("IMClient is not created")}}else{if(B.type==="dataMessage"){if(this.apiCCDataClient){this.apiCCDataClient.receiveData(B)}else{console.warn("DataClient is not created")}}else{if(B.type==="conversationListAnswer"){this.receiveConversationListAnswer(B)}else{if(B.type==="contactOccurrencesFromConversationListAnswer"){this.receiveContactOccurrencesFromConversationListAnswer(B)}else{if(B.type==="conversationDetailReport"){this.receiveConversationDetailReportAnswer(B)}else{if(B.type==="updatePresence"){console.log("updatePresence");this.updatePresence(B)}else{if(B.type==="updateUserStatus"){console.log("updateUserStatus");this.updateUserStatus(B)}else{if(B.type==="receiveMCUSessionId"){console.log("receiveMCUSessionId");if(this.apiCCWebRTCClient){this.apiCCWebRTCClient.webRTCClient.MCUClient.receiveSessionId(B)}else{console.warn("WebRTCClient is not created")}}else{if(B.type==="joinMCUSessionAnswer"){console.log("joinMCUSessionAnswer");if(this.apiCCWebRTCClient){this.apiCCWebRTCClient.webRTCClient.MCUClient.joinSessionAnswer(B)}else{console.warn("WebRTCClient is not created")}}else{if(B.type==="MCUSessionInvitation"){console.log("MCUSessionInvitation");if(this.apiCCWebRTCClient){this.apiCCWebRTCClient.webRTCClient.MCUClient.receiveSessionInvitation(B)}else{console.warn("WebRTCClient is not created")}}else{if(B.type==="MCUSessionInvitationToGroupChat"){console.log("MCUSessionInvitationToGroupChat");if(this.apiCCWebRTCClient){this.apiCCWebRTCClient.webRTCClient.MCUClient.receiveSessionInvitation(B)}else{console.warn("WebRTCClient is not created")}}else{if(B.type==="sessionId"){console.log("sessionId :"+B.sessionId);this.sessionId=B.sessionId}else{if(B.type==="roomCreation"){console.log("roomCreation");this.roomMgr.roomCreation(B)}else{if(B.type==="inviteInRoomStatus"){console.log("inviteInRoomStatus");this.roomMgr.inviteInRoomStatus(B)}else{if(B.type==="roomInvitation"){console.log("roomInvitation");this.roomMgr.roomInvitation(B)}else{if(B.type==="roomMessage"){console.log("roomMessage");this.roomMgr.receiveRoomMessage(B)}else{if(B.type==="roomMemberUpdate"){console.log("roomMemberUpdate");this.roomMgr.roomMemberUpdate(B)}else{console.log("Error : No type for this message")}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}};j.apiRTC=j.apiCC=j.CC=x;return x}(window));
